{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Information \u00b6 Name \u00b6 OpenShift Solution Guidance V2 Client Name \u00b6 Opportunity Number \u00b6 Industry \u00b6 Technology \u00b6 Cloud Computing Business Objectives \u00b6 Technical Challenges \u00b6 Tag \u00b6 Hybrid Cloud Platform Share As-is \u00b6 true Owner \u00b6 User ID: MIHAI CRIVETI Job Role: Email: CRMIHAI1@ie.ibm.com Last modified by \u00b6 User ID: Jenny Ang Job Role: Distinguished Engineer Email: jang@us.ibm.com Last modified date \u00b6 2022-07-06","title":"0. Information"},{"location":"#information","text":"","title":"Information"},{"location":"#name","text":"OpenShift Solution Guidance V2","title":"Name"},{"location":"#client-name","text":"","title":"Client Name"},{"location":"#opportunity-number","text":"","title":"Opportunity Number"},{"location":"#industry","text":"","title":"Industry"},{"location":"#technology","text":"Cloud Computing","title":"Technology"},{"location":"#business-objectives","text":"","title":"Business Objectives"},{"location":"#technical-challenges","text":"","title":"Technical Challenges"},{"location":"#tag","text":"Hybrid Cloud Platform","title":"Tag"},{"location":"#share-as-is","text":"true","title":"Share As-is"},{"location":"#owner","text":"User ID: MIHAI CRIVETI Job Role: Email: CRMIHAI1@ie.ibm.com","title":"Owner"},{"location":"#last-modified-by","text":"User ID: Jenny Ang Job Role: Distinguished Engineer Email: jang@us.ibm.com","title":"Last modified by"},{"location":"#last-modified-date","text":"2022-07-06","title":"Last modified date"},{"location":"Business%20Challenge/","text":"Business Challenge \u00b6 Red Hat OpenShift Container Platform (RHOCP) is a strategic solution to deliver a cloud native, container-based hybrid cloud platform for an enterprise. Such a decision addresses many critical business challenges including: Be able to leverage investment in both workload modernization and new cloud native workloads without being locked into a particular infrastructure. Drive digital transformation for greater agility and drive innovation Adoption of Cloud infrastructure model to manage costs. Consistent Day 1 and Day 2 processes across a multiple cloud landscape.","title":"Business Challenge"},{"location":"Business%20Challenge/#business-challenge","text":"Red Hat OpenShift Container Platform (RHOCP) is a strategic solution to deliver a cloud native, container-based hybrid cloud platform for an enterprise. Such a decision addresses many critical business challenges including: Be able to leverage investment in both workload modernization and new cloud native workloads without being locked into a particular infrastructure. Drive digital transformation for greater agility and drive innovation Adoption of Cloud infrastructure model to manage costs. Consistent Day 1 and Day 2 processes across a multiple cloud landscape.","title":"Business Challenge"},{"location":"Overview/","text":"Overview \u00b6 Red Hat OpenShift is a Kubernetes distribution focused on developer experience and application security that's platform agnostic. OpenShift helps you develop and deploy applications to one or more hosts. These can be public facing web applications, or backend applications, including micro services or databases. Applications can be implemented in any programming language you choose. The only requirement is that the application can run within a container. In terms of cloud service computing models, OpenShift implements the functionality of both a Platform as a Service (PaaS) and a Container as a Service (CaaS). Using OpenShift as a CaaS, you can bring a pre-existing container image built to the OpenShift Container Initiative (OCI) Image Specification (image-spec) and deploy it. The PaaS capabilities of OpenShift build on top of the ability to deploy a container image, by providing a way for you to build in OpenShift your own container image direct from your application source code and have it deployed. The application source code can include a Dockerfile with instructions to build a container image. Or, you can use a Source-to-Image (S2I) builder, which takes your application source code and converts it into a container image for you, without you needing to know how to write instructions for building a container image. (See OpenShift overview https://developers.redhat.com/products/openshift/overview ) OpenShift offers one uniform platform across public and private clouds for full portability, standardization and adoption ease Fully integrated and automated architecture Seamless Kubernetes deployment on any cloud or on-premises environment Fully automated installation, from cloud infrastructure to OS to application services One click platform and application updates Auto-scaling of cloud resources Enterprise-grade security Ability to run enterprise workloads, \u201cwith enterprise build/manage services\u201d, across all/multiple deployment options (private, public, hybrid/Multicloud). (See Openshift AoT https://pages.github.ibm.com/IBMAoT/i-openshift-guides/02-solutions-guide/openshift-solutioning-guide-101/ ) Overview for IT System View Reference Architecture Description Use case Reference Architecture 1: Starter environment This is the minimal topology Development Test Reference Architecture 2: Three nodes cluster Currently is only supported for deployment on bare metal. Deployment with limited small footprint requirement Reference Architecture 3: On-premises cluster On-premises solution Deployed in one availability zone Development Test Integration Production with limited SLA Reference Architecture 4: Cloud cluster Higher availability solution Deploy cluster over availability zones Development Test Integration Production with limited SLA Reference Architecture 5: Two clusters on-premises Higher availability of the on-premises solution Deploy clusters in different data centers. On-premises Production Reference Architecture 6: Two clusters on two regions Higher availability of the solution by addressing regional failure Deploy the solution in at least two regions Production (See requirement document start from page 8 https://www.redhat.com/cms/managed-files/pa-openshift-container-platform-on-lenovo-reference-architecture-f14305bf-201810-en.pdf ) See diagrams - in this box folder: https://ibm.box.com/s/hy2h4scv7tfvwequix3usr6dkud3oo1k The document from which additional details can be scraped is - https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Key RHOCP Accelerators can be found at - https://github.ibm.com/ocp-now/inception-patterns/tree/master/ocp","title":"1. Overview"},{"location":"Overview/#overview","text":"Red Hat OpenShift is a Kubernetes distribution focused on developer experience and application security that's platform agnostic. OpenShift helps you develop and deploy applications to one or more hosts. These can be public facing web applications, or backend applications, including micro services or databases. Applications can be implemented in any programming language you choose. The only requirement is that the application can run within a container. In terms of cloud service computing models, OpenShift implements the functionality of both a Platform as a Service (PaaS) and a Container as a Service (CaaS). Using OpenShift as a CaaS, you can bring a pre-existing container image built to the OpenShift Container Initiative (OCI) Image Specification (image-spec) and deploy it. The PaaS capabilities of OpenShift build on top of the ability to deploy a container image, by providing a way for you to build in OpenShift your own container image direct from your application source code and have it deployed. The application source code can include a Dockerfile with instructions to build a container image. Or, you can use a Source-to-Image (S2I) builder, which takes your application source code and converts it into a container image for you, without you needing to know how to write instructions for building a container image. (See OpenShift overview https://developers.redhat.com/products/openshift/overview ) OpenShift offers one uniform platform across public and private clouds for full portability, standardization and adoption ease Fully integrated and automated architecture Seamless Kubernetes deployment on any cloud or on-premises environment Fully automated installation, from cloud infrastructure to OS to application services One click platform and application updates Auto-scaling of cloud resources Enterprise-grade security Ability to run enterprise workloads, \u201cwith enterprise build/manage services\u201d, across all/multiple deployment options (private, public, hybrid/Multicloud). (See Openshift AoT https://pages.github.ibm.com/IBMAoT/i-openshift-guides/02-solutions-guide/openshift-solutioning-guide-101/ ) Overview for IT System View Reference Architecture Description Use case Reference Architecture 1: Starter environment This is the minimal topology Development Test Reference Architecture 2: Three nodes cluster Currently is only supported for deployment on bare metal. Deployment with limited small footprint requirement Reference Architecture 3: On-premises cluster On-premises solution Deployed in one availability zone Development Test Integration Production with limited SLA Reference Architecture 4: Cloud cluster Higher availability solution Deploy cluster over availability zones Development Test Integration Production with limited SLA Reference Architecture 5: Two clusters on-premises Higher availability of the on-premises solution Deploy clusters in different data centers. On-premises Production Reference Architecture 6: Two clusters on two regions Higher availability of the solution by addressing regional failure Deploy the solution in at least two regions Production (See requirement document start from page 8 https://www.redhat.com/cms/managed-files/pa-openshift-container-platform-on-lenovo-reference-architecture-f14305bf-201810-en.pdf ) See diagrams - in this box folder: https://ibm.box.com/s/hy2h4scv7tfvwequix3usr6dkud3oo1k The document from which additional details can be scraped is - https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Key RHOCP Accelerators can be found at - https://github.ibm.com/ocp-now/inception-patterns/tree/master/ocp","title":"Overview"},{"location":"Architectural%20Decisions/architecturaldecision_Bkbp7V9XsBtt/","text":"OCP-016 \u00b6 Name \u00b6 Ingress Traffic for Applications Status \u00b6 accepted Last Update \u00b6 2022-03-08 Subject Area \u00b6 OCP-Workload Topic \u00b6 Issue or Problem Statement \u00b6 OpenShift Container Platform provides the different methods for communicating from outside the cluster with services running in the cluster. Assumptions \u00b6 This decision depends on many factors such as application traffic, type of the traffic (http or https or mix), and TLS termination point (do the routers terminate TLS or they do pass-through for the https). Motivation \u00b6 https://docs.openshift.com/container-platform/4.9/networking/configuring_ingress_cluster_traffic/overview-traffic.html Notes \u00b6 Expand all Alternatives \u00b6 Dedicated routers on dedicated nodes Name Dedicated routers on dedicated nodes Description Depending on the applications requirements a dedicated Red Hat OpenShift routers may be needed to handle the applications traffic. A minimum of two routers should be considered for each application group that requires dedicated routers for the ingress traffic. Depending on the traffic more than two routers may need to be deployed. The dedicated routers may share the workers with the applications or may be deployed on the dedicated ones. Best Applied Contraindications Dedicated routers sharing nodes with applications Name Dedicated routers sharing nodes with applications Description Depending on the applications requirements a dedicated Red Hat OpenShift routers may be needed to handle the applications traffic. A minimum of two routers should be considered for each application group that requires dedicated routers for the ingress traffic. Depending on the traffic more than two routers may need to be deployed. The dedicated routers may share the workers with the applications or may be deployed on the dedicated ones. Best Applied Contraindications Default shared routers Name Default shared routers Description By default all ingress traffic is sharing the default routers. Best Applied Contraindications Decision \u00b6 Justification \u00b6 Implications \u00b6 Derived Requirements \u00b6 Related Decisions \u00b6","title":"Ingress Traffic for Applications"},{"location":"Architectural%20Decisions/architecturaldecision_Bkbp7V9XsBtt/#ocp-016","text":"","title":"OCP-016"},{"location":"Architectural%20Decisions/architecturaldecision_Bkbp7V9XsBtt/#name","text":"Ingress Traffic for Applications","title":"Name"},{"location":"Architectural%20Decisions/architecturaldecision_Bkbp7V9XsBtt/#status","text":"accepted","title":"Status"},{"location":"Architectural%20Decisions/architecturaldecision_Bkbp7V9XsBtt/#last-update","text":"2022-03-08","title":"Last Update"},{"location":"Architectural%20Decisions/architecturaldecision_Bkbp7V9XsBtt/#subject-area","text":"OCP-Workload","title":"Subject Area"},{"location":"Architectural%20Decisions/architecturaldecision_Bkbp7V9XsBtt/#topic","text":"","title":"Topic"},{"location":"Architectural%20Decisions/architecturaldecision_Bkbp7V9XsBtt/#issue-or-problem-statement","text":"OpenShift Container Platform provides the different methods for communicating from outside the cluster with services running in the cluster.","title":"Issue or Problem Statement"},{"location":"Architectural%20Decisions/architecturaldecision_Bkbp7V9XsBtt/#assumptions","text":"This decision depends on many factors such as application traffic, type of the traffic (http or https or mix), and TLS termination point (do the routers terminate TLS or they do pass-through for the https).","title":"Assumptions"},{"location":"Architectural%20Decisions/architecturaldecision_Bkbp7V9XsBtt/#motivation","text":"https://docs.openshift.com/container-platform/4.9/networking/configuring_ingress_cluster_traffic/overview-traffic.html","title":"Motivation"},{"location":"Architectural%20Decisions/architecturaldecision_Bkbp7V9XsBtt/#notes","text":"Expand all","title":"Notes"},{"location":"Architectural%20Decisions/architecturaldecision_Bkbp7V9XsBtt/#alternatives","text":"Dedicated routers on dedicated nodes Name Dedicated routers on dedicated nodes Description Depending on the applications requirements a dedicated Red Hat OpenShift routers may be needed to handle the applications traffic. A minimum of two routers should be considered for each application group that requires dedicated routers for the ingress traffic. Depending on the traffic more than two routers may need to be deployed. The dedicated routers may share the workers with the applications or may be deployed on the dedicated ones. Best Applied Contraindications Dedicated routers sharing nodes with applications Name Dedicated routers sharing nodes with applications Description Depending on the applications requirements a dedicated Red Hat OpenShift routers may be needed to handle the applications traffic. A minimum of two routers should be considered for each application group that requires dedicated routers for the ingress traffic. Depending on the traffic more than two routers may need to be deployed. The dedicated routers may share the workers with the applications or may be deployed on the dedicated ones. Best Applied Contraindications Default shared routers Name Default shared routers Description By default all ingress traffic is sharing the default routers. Best Applied Contraindications","title":"Alternatives"},{"location":"Architectural%20Decisions/architecturaldecision_Bkbp7V9XsBtt/#decision","text":"","title":"Decision"},{"location":"Architectural%20Decisions/architecturaldecision_Bkbp7V9XsBtt/#justification","text":"","title":"Justification"},{"location":"Architectural%20Decisions/architecturaldecision_Bkbp7V9XsBtt/#implications","text":"","title":"Implications"},{"location":"Architectural%20Decisions/architecturaldecision_Bkbp7V9XsBtt/#derived-requirements","text":"","title":"Derived Requirements"},{"location":"Architectural%20Decisions/architecturaldecision_Bkbp7V9XsBtt/#related-decisions","text":"","title":"Related Decisions"},{"location":"Architectural%20Decisions/architecturaldecision_ByJ2Q4q7jBKt/","text":"OCP-019 \u00b6 Name \u00b6 Storage Technology for Metrics & Logging Status \u00b6 proposed Last Update \u00b6 2021-11-11 Subject Area \u00b6 Storage Topic \u00b6 Storage for metrics and logging Issue or Problem Statement \u00b6 A persistent volume is required for each Elasticsearch deployment configuration. On OpenShift Container Platform this is achieved using persistent volume claims. Using NFS storage as a volume or a persistent volume (or via NAS such as Gluster) is not supported for Elasticsearch storage, as Lucene relies on file system behavior that NFS does not supply. Data corruption and other problems can occur. Assumptions \u00b6 The OpenShift Elasticsearch Operator names the PVCs using the Elasticsearch resource name. Fluentd ships any logs from systemd journal and /var/log/containers/ to Elasticsearch. Elasticsearch requires sufficient memory to perform large merge operations. If it does not have enough memory, it becomes unresponsive. To avoid this problem, evaluate how much application log data you need, and allocate approximately double that amount of free storage capacity. By default, when storage capacity is 85% full, Elasticsearch stops allocating new data to the node. At 90%, Elasticsearch attempts to relocate existing shards from that node to other nodes if possible. But if no nodes have a free capacity below 85%, Elasticsearch effectively rejects creating new indices and becomes RED. Motivation \u00b6 https://docs.openshift.com/container-platform/4.9/logging/config/cluster-logging-storage-considerations.html https://docs.openshift.com/container-platform/4.9/logging/config/cluster-logging-log-store.html#cluster-logging-elasticsearch-storage_cluster-logging-store Notes \u00b6 Expand all Alternatives \u00b6 Block Storage Name Block Storage Description The preferred storage technology for Metrics & Logging is Block Storage. Best Applied Contraindications Local Volumes Name Local Volumes Description For small deployments local disk may be sufficient. Best Applied Contraindications Decision \u00b6 Justification \u00b6 Implications \u00b6 Derived Requirements \u00b6 Related Decisions \u00b6","title":"Storage Technology for Metrics &amp; Logging"},{"location":"Architectural%20Decisions/architecturaldecision_ByJ2Q4q7jBKt/#ocp-019","text":"","title":"OCP-019"},{"location":"Architectural%20Decisions/architecturaldecision_ByJ2Q4q7jBKt/#name","text":"Storage Technology for Metrics & Logging","title":"Name"},{"location":"Architectural%20Decisions/architecturaldecision_ByJ2Q4q7jBKt/#status","text":"proposed","title":"Status"},{"location":"Architectural%20Decisions/architecturaldecision_ByJ2Q4q7jBKt/#last-update","text":"2021-11-11","title":"Last Update"},{"location":"Architectural%20Decisions/architecturaldecision_ByJ2Q4q7jBKt/#subject-area","text":"Storage","title":"Subject Area"},{"location":"Architectural%20Decisions/architecturaldecision_ByJ2Q4q7jBKt/#topic","text":"Storage for metrics and logging","title":"Topic"},{"location":"Architectural%20Decisions/architecturaldecision_ByJ2Q4q7jBKt/#issue-or-problem-statement","text":"A persistent volume is required for each Elasticsearch deployment configuration. On OpenShift Container Platform this is achieved using persistent volume claims. Using NFS storage as a volume or a persistent volume (or via NAS such as Gluster) is not supported for Elasticsearch storage, as Lucene relies on file system behavior that NFS does not supply. Data corruption and other problems can occur.","title":"Issue or Problem Statement"},{"location":"Architectural%20Decisions/architecturaldecision_ByJ2Q4q7jBKt/#assumptions","text":"The OpenShift Elasticsearch Operator names the PVCs using the Elasticsearch resource name. Fluentd ships any logs from systemd journal and /var/log/containers/ to Elasticsearch. Elasticsearch requires sufficient memory to perform large merge operations. If it does not have enough memory, it becomes unresponsive. To avoid this problem, evaluate how much application log data you need, and allocate approximately double that amount of free storage capacity. By default, when storage capacity is 85% full, Elasticsearch stops allocating new data to the node. At 90%, Elasticsearch attempts to relocate existing shards from that node to other nodes if possible. But if no nodes have a free capacity below 85%, Elasticsearch effectively rejects creating new indices and becomes RED.","title":"Assumptions"},{"location":"Architectural%20Decisions/architecturaldecision_ByJ2Q4q7jBKt/#motivation","text":"https://docs.openshift.com/container-platform/4.9/logging/config/cluster-logging-storage-considerations.html https://docs.openshift.com/container-platform/4.9/logging/config/cluster-logging-log-store.html#cluster-logging-elasticsearch-storage_cluster-logging-store","title":"Motivation"},{"location":"Architectural%20Decisions/architecturaldecision_ByJ2Q4q7jBKt/#notes","text":"Expand all","title":"Notes"},{"location":"Architectural%20Decisions/architecturaldecision_ByJ2Q4q7jBKt/#alternatives","text":"Block Storage Name Block Storage Description The preferred storage technology for Metrics & Logging is Block Storage. Best Applied Contraindications Local Volumes Name Local Volumes Description For small deployments local disk may be sufficient. Best Applied Contraindications","title":"Alternatives"},{"location":"Architectural%20Decisions/architecturaldecision_ByJ2Q4q7jBKt/#decision","text":"","title":"Decision"},{"location":"Architectural%20Decisions/architecturaldecision_ByJ2Q4q7jBKt/#justification","text":"","title":"Justification"},{"location":"Architectural%20Decisions/architecturaldecision_ByJ2Q4q7jBKt/#implications","text":"","title":"Implications"},{"location":"Architectural%20Decisions/architecturaldecision_ByJ2Q4q7jBKt/#derived-requirements","text":"","title":"Derived Requirements"},{"location":"Architectural%20Decisions/architecturaldecision_ByJ2Q4q7jBKt/#related-decisions","text":"","title":"Related Decisions"},{"location":"Architectural%20Decisions/architecturaldecision_ByisXEcmoSKK/","text":"OCP-018 \u00b6 Name \u00b6 Storage Technology for Red Hat OpenShift Cluster Platform Registry Status \u00b6 proposed Last Update \u00b6 2022-03-08 Subject Area \u00b6 Storage Topic \u00b6 Storage type Issue or Problem Statement \u00b6 Assumptions \u00b6 For Bare Metal deployment: https://docs.openshift.com/container-platform/4.6/registry/configuring_registry_storage/configuring-registry-storage-baremetal.html#installation-registry-storage-config_configuring-registry-storage-baremetal Motivation \u00b6 OpenShift Container Platform supports ReadWriteOnce access for image registry storage when you have only one replica. To deploy an image registry that supports high availability with two or more replicas, ReadWriteMany access is required. https://docs.openshift.com/container-platform/4.9/registry/configuring_registry_storage/configuring-registry-storage-vsphere.html#installation-registry-storage-config_configuring-registry-storage-vsphere Testing shows issues with using the NFS server on RHEL as storage backend for core services. This includes the OpenShift Container Registry and Quay, Prometheus for monitoring storage, and Elasticsearch for logging storage. Therefore, using RHEL NFS to back PVs used by core services is not recommended. Other NFS implementations on the marketplace might not have these issues. Contact the individual NFS implementation vendor for more information on any testing that was possibly completed against these OpenShift Container Platform core components. Notes \u00b6 Expand all Alternatives \u00b6 Block Storage Name Block Storage Description File storage and block storage are not recommended for a scaled/HA Red Hat OpenShift Container Platform registry cluster deployment with production workloads. Best Applied Contraindications File Storage (NAS) Name File Storage (NAS) Description File storage and block storage are not recommended for a scaled/HA Red Hat OpenShift Container Platform registry cluster deployment with production workloads. Best Applied Contraindications Object Storage Name Object Storage Description The preferred storage technology is object storage for both scaled and non-scaled Red Hat OpenShift Registry. Best Applied Contraindications Decision \u00b6 Justification \u00b6 Implications \u00b6 Derived Requirements \u00b6 Related Decisions \u00b6","title":"Storage Technology for Red Hat OpenShift Cluster Platform Registry"},{"location":"Architectural%20Decisions/architecturaldecision_ByisXEcmoSKK/#ocp-018","text":"","title":"OCP-018"},{"location":"Architectural%20Decisions/architecturaldecision_ByisXEcmoSKK/#name","text":"Storage Technology for Red Hat OpenShift Cluster Platform Registry","title":"Name"},{"location":"Architectural%20Decisions/architecturaldecision_ByisXEcmoSKK/#status","text":"proposed","title":"Status"},{"location":"Architectural%20Decisions/architecturaldecision_ByisXEcmoSKK/#last-update","text":"2022-03-08","title":"Last Update"},{"location":"Architectural%20Decisions/architecturaldecision_ByisXEcmoSKK/#subject-area","text":"Storage","title":"Subject Area"},{"location":"Architectural%20Decisions/architecturaldecision_ByisXEcmoSKK/#topic","text":"Storage type","title":"Topic"},{"location":"Architectural%20Decisions/architecturaldecision_ByisXEcmoSKK/#issue-or-problem-statement","text":"","title":"Issue or Problem Statement"},{"location":"Architectural%20Decisions/architecturaldecision_ByisXEcmoSKK/#assumptions","text":"For Bare Metal deployment: https://docs.openshift.com/container-platform/4.6/registry/configuring_registry_storage/configuring-registry-storage-baremetal.html#installation-registry-storage-config_configuring-registry-storage-baremetal","title":"Assumptions"},{"location":"Architectural%20Decisions/architecturaldecision_ByisXEcmoSKK/#motivation","text":"OpenShift Container Platform supports ReadWriteOnce access for image registry storage when you have only one replica. To deploy an image registry that supports high availability with two or more replicas, ReadWriteMany access is required. https://docs.openshift.com/container-platform/4.9/registry/configuring_registry_storage/configuring-registry-storage-vsphere.html#installation-registry-storage-config_configuring-registry-storage-vsphere Testing shows issues with using the NFS server on RHEL as storage backend for core services. This includes the OpenShift Container Registry and Quay, Prometheus for monitoring storage, and Elasticsearch for logging storage. Therefore, using RHEL NFS to back PVs used by core services is not recommended. Other NFS implementations on the marketplace might not have these issues. Contact the individual NFS implementation vendor for more information on any testing that was possibly completed against these OpenShift Container Platform core components.","title":"Motivation"},{"location":"Architectural%20Decisions/architecturaldecision_ByisXEcmoSKK/#notes","text":"Expand all","title":"Notes"},{"location":"Architectural%20Decisions/architecturaldecision_ByisXEcmoSKK/#alternatives","text":"Block Storage Name Block Storage Description File storage and block storage are not recommended for a scaled/HA Red Hat OpenShift Container Platform registry cluster deployment with production workloads. Best Applied Contraindications File Storage (NAS) Name File Storage (NAS) Description File storage and block storage are not recommended for a scaled/HA Red Hat OpenShift Container Platform registry cluster deployment with production workloads. Best Applied Contraindications Object Storage Name Object Storage Description The preferred storage technology is object storage for both scaled and non-scaled Red Hat OpenShift Registry. Best Applied Contraindications","title":"Alternatives"},{"location":"Architectural%20Decisions/architecturaldecision_ByisXEcmoSKK/#decision","text":"","title":"Decision"},{"location":"Architectural%20Decisions/architecturaldecision_ByisXEcmoSKK/#justification","text":"","title":"Justification"},{"location":"Architectural%20Decisions/architecturaldecision_ByisXEcmoSKK/#implications","text":"","title":"Implications"},{"location":"Architectural%20Decisions/architecturaldecision_ByisXEcmoSKK/#derived-requirements","text":"","title":"Derived Requirements"},{"location":"Architectural%20Decisions/architecturaldecision_ByisXEcmoSKK/#related-decisions","text":"","title":"Related Decisions"},{"location":"Architectural%20Decisions/architecturaldecision_H1sTQ49miHKt/","text":"OCP-006 \u00b6 Name \u00b6 Control plane node sizing Status \u00b6 accepted Last Update \u00b6 2022-03-08 Subject Area \u00b6 OCP-Platform Topic \u00b6 Sizing Issue or Problem Statement \u00b6 \u2022Control plane node sizes cannot be changed in a running cluster for OpenShift version 4.7 or lower As of version 4.8, a rolling upgrade is supported (shut down one of the masters, modify by adding CPU or memory and restart) - https://access.redhat.com/solutions/5597381 \u2022 For 4.7 or lower, the total worker node count must be estimated in advance as this determines recommended control plane node size during installation. \u2022Control plane node sizing should balance scalability and cost Assumptions \u00b6 The alternatives below assume a typical virtualized environment running on x86. For other architectures (Z, POWER) or bare metal servers with higher end CPUs, adjust accordingly. Motivation \u00b6 Scaling the OpenShift control plane to match the cluster size dynamically https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-capacity-planning-capacity-planning Notes \u00b6 Expand all Alternatives \u00b6 Large \u2013 16vCPU x 64GB RAM Name Large \u2013 16vCPU x 64GB RAM Description Large \u2013 16vCPU x 64GB RAM Best Applied This is recommended in cases where cluster needs to support more than 100 worker nodes. Contraindications Medium \u2013 8vCPU x 32GB RAM Name Medium \u2013 8vCPU x 32GB RAM Description Medium \u2013 8vCPU x 32GB RAM Best Applied This is a common production cluster sizing and supports 0-100 worker nodes. Contraindications Small \u2013 4vCPU x 16GB RAM Name Small \u2013 4vCPU x 16GB RAM Description Small \u2013 4vCPU x 16GB RAM Best Applied Contraindications Decision \u00b6 Justification \u00b6 Implications \u00b6 Derived Requirements \u00b6 Related Decisions \u00b6","title":"Control plane node sizing"},{"location":"Architectural%20Decisions/architecturaldecision_H1sTQ49miHKt/#ocp-006","text":"","title":"OCP-006"},{"location":"Architectural%20Decisions/architecturaldecision_H1sTQ49miHKt/#name","text":"Control plane node sizing","title":"Name"},{"location":"Architectural%20Decisions/architecturaldecision_H1sTQ49miHKt/#status","text":"accepted","title":"Status"},{"location":"Architectural%20Decisions/architecturaldecision_H1sTQ49miHKt/#last-update","text":"2022-03-08","title":"Last Update"},{"location":"Architectural%20Decisions/architecturaldecision_H1sTQ49miHKt/#subject-area","text":"OCP-Platform","title":"Subject Area"},{"location":"Architectural%20Decisions/architecturaldecision_H1sTQ49miHKt/#topic","text":"Sizing","title":"Topic"},{"location":"Architectural%20Decisions/architecturaldecision_H1sTQ49miHKt/#issue-or-problem-statement","text":"\u2022Control plane node sizes cannot be changed in a running cluster for OpenShift version 4.7 or lower As of version 4.8, a rolling upgrade is supported (shut down one of the masters, modify by adding CPU or memory and restart) - https://access.redhat.com/solutions/5597381 \u2022 For 4.7 or lower, the total worker node count must be estimated in advance as this determines recommended control plane node size during installation. \u2022Control plane node sizing should balance scalability and cost","title":"Issue or Problem Statement"},{"location":"Architectural%20Decisions/architecturaldecision_H1sTQ49miHKt/#assumptions","text":"The alternatives below assume a typical virtualized environment running on x86. For other architectures (Z, POWER) or bare metal servers with higher end CPUs, adjust accordingly.","title":"Assumptions"},{"location":"Architectural%20Decisions/architecturaldecision_H1sTQ49miHKt/#motivation","text":"Scaling the OpenShift control plane to match the cluster size dynamically https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-capacity-planning-capacity-planning","title":"Motivation"},{"location":"Architectural%20Decisions/architecturaldecision_H1sTQ49miHKt/#notes","text":"Expand all","title":"Notes"},{"location":"Architectural%20Decisions/architecturaldecision_H1sTQ49miHKt/#alternatives","text":"Large \u2013 16vCPU x 64GB RAM Name Large \u2013 16vCPU x 64GB RAM Description Large \u2013 16vCPU x 64GB RAM Best Applied This is recommended in cases where cluster needs to support more than 100 worker nodes. Contraindications Medium \u2013 8vCPU x 32GB RAM Name Medium \u2013 8vCPU x 32GB RAM Description Medium \u2013 8vCPU x 32GB RAM Best Applied This is a common production cluster sizing and supports 0-100 worker nodes. Contraindications Small \u2013 4vCPU x 16GB RAM Name Small \u2013 4vCPU x 16GB RAM Description Small \u2013 4vCPU x 16GB RAM Best Applied Contraindications","title":"Alternatives"},{"location":"Architectural%20Decisions/architecturaldecision_H1sTQ49miHKt/#decision","text":"","title":"Decision"},{"location":"Architectural%20Decisions/architecturaldecision_H1sTQ49miHKt/#justification","text":"","title":"Justification"},{"location":"Architectural%20Decisions/architecturaldecision_H1sTQ49miHKt/#implications","text":"","title":"Implications"},{"location":"Architectural%20Decisions/architecturaldecision_H1sTQ49miHKt/#derived-requirements","text":"","title":"Derived Requirements"},{"location":"Architectural%20Decisions/architecturaldecision_H1sTQ49miHKt/#related-decisions","text":"","title":"Related Decisions"},{"location":"Architectural%20Decisions/architecturaldecision_Hk0F7VcXjrYY/","text":"OCP-005 \u00b6 Name \u00b6 Control Plane Deployment Topology Status \u00b6 accepted Last Update \u00b6 2022-03-03 Subject Area \u00b6 OCP-Platform Topic \u00b6 Placement policies for OpenShift Control Plane Issue or Problem Statement \u00b6 Where and how control plane should be deployed across MZR or regional zone on Red Hat OpenShift Assumptions \u00b6 Motivation \u00b6 https://www.redhat.com/en/blog/meet-single-node-openshift-our-smallest-openshift-footprint-edge-architectures Notes \u00b6 Expand all Alternatives \u00b6 3-control plane nodes configuration Name 3-control plane nodes configuration Description The redesign of Red Hat OpenShift 4.x and performance improvements of its components make up Red Hat OpenShift 4.x it is no longer necessary to run with more than (>) 3 control plane nodes. 3 control plane nodes can support loss of one node. Best Applied Contraindications More than 3-control plane nodes configuration Name More than 3-control plane nodes configuration Description N/A Best Applied Contraindications Single Node Control Plane Name Single Node Control Plane Description Single Node Control Plane - https://www.redhat.com/en/blog/meet-single-node-openshift-our-smallest-openshift-footprint-edge-architectures Best Applied Contraindications Decision \u00b6 Justification \u00b6 Implications \u00b6 Derived Requirements \u00b6 Related Decisions \u00b6","title":"Control Plane Deployment Topology"},{"location":"Architectural%20Decisions/architecturaldecision_Hk0F7VcXjrYY/#ocp-005","text":"","title":"OCP-005"},{"location":"Architectural%20Decisions/architecturaldecision_Hk0F7VcXjrYY/#name","text":"Control Plane Deployment Topology","title":"Name"},{"location":"Architectural%20Decisions/architecturaldecision_Hk0F7VcXjrYY/#status","text":"accepted","title":"Status"},{"location":"Architectural%20Decisions/architecturaldecision_Hk0F7VcXjrYY/#last-update","text":"2022-03-03","title":"Last Update"},{"location":"Architectural%20Decisions/architecturaldecision_Hk0F7VcXjrYY/#subject-area","text":"OCP-Platform","title":"Subject Area"},{"location":"Architectural%20Decisions/architecturaldecision_Hk0F7VcXjrYY/#topic","text":"Placement policies for OpenShift Control Plane","title":"Topic"},{"location":"Architectural%20Decisions/architecturaldecision_Hk0F7VcXjrYY/#issue-or-problem-statement","text":"Where and how control plane should be deployed across MZR or regional zone on Red Hat OpenShift","title":"Issue or Problem Statement"},{"location":"Architectural%20Decisions/architecturaldecision_Hk0F7VcXjrYY/#assumptions","text":"","title":"Assumptions"},{"location":"Architectural%20Decisions/architecturaldecision_Hk0F7VcXjrYY/#motivation","text":"https://www.redhat.com/en/blog/meet-single-node-openshift-our-smallest-openshift-footprint-edge-architectures","title":"Motivation"},{"location":"Architectural%20Decisions/architecturaldecision_Hk0F7VcXjrYY/#notes","text":"Expand all","title":"Notes"},{"location":"Architectural%20Decisions/architecturaldecision_Hk0F7VcXjrYY/#alternatives","text":"3-control plane nodes configuration Name 3-control plane nodes configuration Description The redesign of Red Hat OpenShift 4.x and performance improvements of its components make up Red Hat OpenShift 4.x it is no longer necessary to run with more than (>) 3 control plane nodes. 3 control plane nodes can support loss of one node. Best Applied Contraindications More than 3-control plane nodes configuration Name More than 3-control plane nodes configuration Description N/A Best Applied Contraindications Single Node Control Plane Name Single Node Control Plane Description Single Node Control Plane - https://www.redhat.com/en/blog/meet-single-node-openshift-our-smallest-openshift-footprint-edge-architectures Best Applied Contraindications","title":"Alternatives"},{"location":"Architectural%20Decisions/architecturaldecision_Hk0F7VcXjrYY/#decision","text":"","title":"Decision"},{"location":"Architectural%20Decisions/architecturaldecision_Hk0F7VcXjrYY/#justification","text":"","title":"Justification"},{"location":"Architectural%20Decisions/architecturaldecision_Hk0F7VcXjrYY/#implications","text":"","title":"Implications"},{"location":"Architectural%20Decisions/architecturaldecision_Hk0F7VcXjrYY/#derived-requirements","text":"","title":"Derived Requirements"},{"location":"Architectural%20Decisions/architecturaldecision_Hk0F7VcXjrYY/#related-decisions","text":"","title":"Related Decisions"},{"location":"Architectural%20Decisions/architecturaldecision_HkD_7N5XjSFF/","text":"OCP-002 \u00b6 Name \u00b6 Red Hat OpenShift Cluster Platform Node Type Status \u00b6 accepted Last Update \u00b6 2022-03-08 Subject Area \u00b6 OCP-Platform Topic \u00b6 Issue or Problem Statement \u00b6 When allocating infrastructure resources for Cluster nodes, what compute infrastructure should be chosen? Assumptions \u00b6 In general, decision for using bare metal or virtualized nodes for RHOCP is supported across all platforms. Motivation \u00b6 Please refer to the latest matrix of supported IPI / UPI and node types here: https://docs.openshift.com/container-platform/4.9/installing/installing-preparing.html Notes \u00b6 Expand all Alternatives \u00b6 Bare-Metal Name Bare-Metal Description Bare-metal is most suited to Data, Memory, or Compute intensive workloads as well as those requiring high-performance and/or GPU-intensive workloads. Bare-metal removes the overhead of hypervisor licenses, but introduces management complexity and reduced flexibility. Use of Bare-metal for control plane nodes would result in inefficient use of resources. See link in motivation with regard to supported installation on different bare metal architectures (x86, Power, Z) Best Applied Using Bare Metal will allow you to support OpenShift Virtualization: https://docs.openshift.com/container-platform/4.9/virt/about-virt.html Bare metal is selected to meet compute and GPU intensive workloads as hosting on VM or hypervisor could deprive or not fulfill the requirements Contraindications Circumstances where the client wants to scale in and out in small increments. Hybrid (x86 ONLY) Name Hybrid (x86 ONLY) Description Hybrid cluster with mixed node types is also a possibility. The common approach for this hybrid cluster is to have control plane nodes as virtual while having the worker nodes as Bare-metal. The rationale is that client data-centers would most probably don't have small enough physical machines to host the control plane nodes so it's possible to have the control plane nodes on virtual for optimization purposes. While having a BareMetal worker nodes as large as the workload requires. Best Applied when using IBM Cloud (Classic) with Bare Metal worker nodes: using the same architecture (x86) you need to mix Bare Metal and Virtual node types, to support different workload types. Contraindications Mixed node type complicates Day 2 operations management. Need to keep nodes on a common machine host architecture within a single cluster management Virtual Dedicated Name Virtual Dedicated Description Virtual Dedicated runs on dedicated hardware and is fast to deploy and scale. It provides the necessary security and performance to support production workloads. Virtual Dedicated is best suited for clients that requests fully dedicated hardware. Best Applied No noisy neighbors Compliance requirements Contraindications More expensive than virtual shared on all hypervisors Virtual Shared Name Virtual Shared Description Shared Virtual is cheap and fast to deploy, but not suitable for business critical or performance workloads. Best Applied The simplest and standard option. Use this option unless there is a requirement that pushes to another alternative. Contraindications Decision \u00b6 Justification \u00b6 Implications \u00b6 https://www.redhat.com/en/technologies/cloud-computing/openshift/subscription-guide#openshift-container-platform 1. Type of supported installation (IPI or UPI deployment) - https://docs.openshift.com/container-platform/4.9/installing/installing-preparing.html 2. Optimal licensing (per CPU core / vCPU pair or per socket subscriptions) - https://www.redhat.com/en/technologies/cloud-computing/openshift/subscription-guide#openshift-container-platform Derived Requirements \u00b6 Related Decisions \u00b6","title":"Red Hat OpenShift Cluster Platform Node Type"},{"location":"Architectural%20Decisions/architecturaldecision_HkD_7N5XjSFF/#ocp-002","text":"","title":"OCP-002"},{"location":"Architectural%20Decisions/architecturaldecision_HkD_7N5XjSFF/#name","text":"Red Hat OpenShift Cluster Platform Node Type","title":"Name"},{"location":"Architectural%20Decisions/architecturaldecision_HkD_7N5XjSFF/#status","text":"accepted","title":"Status"},{"location":"Architectural%20Decisions/architecturaldecision_HkD_7N5XjSFF/#last-update","text":"2022-03-08","title":"Last Update"},{"location":"Architectural%20Decisions/architecturaldecision_HkD_7N5XjSFF/#subject-area","text":"OCP-Platform","title":"Subject Area"},{"location":"Architectural%20Decisions/architecturaldecision_HkD_7N5XjSFF/#topic","text":"","title":"Topic"},{"location":"Architectural%20Decisions/architecturaldecision_HkD_7N5XjSFF/#issue-or-problem-statement","text":"When allocating infrastructure resources for Cluster nodes, what compute infrastructure should be chosen?","title":"Issue or Problem Statement"},{"location":"Architectural%20Decisions/architecturaldecision_HkD_7N5XjSFF/#assumptions","text":"In general, decision for using bare metal or virtualized nodes for RHOCP is supported across all platforms.","title":"Assumptions"},{"location":"Architectural%20Decisions/architecturaldecision_HkD_7N5XjSFF/#motivation","text":"Please refer to the latest matrix of supported IPI / UPI and node types here: https://docs.openshift.com/container-platform/4.9/installing/installing-preparing.html","title":"Motivation"},{"location":"Architectural%20Decisions/architecturaldecision_HkD_7N5XjSFF/#notes","text":"Expand all","title":"Notes"},{"location":"Architectural%20Decisions/architecturaldecision_HkD_7N5XjSFF/#alternatives","text":"Bare-Metal Name Bare-Metal Description Bare-metal is most suited to Data, Memory, or Compute intensive workloads as well as those requiring high-performance and/or GPU-intensive workloads. Bare-metal removes the overhead of hypervisor licenses, but introduces management complexity and reduced flexibility. Use of Bare-metal for control plane nodes would result in inefficient use of resources. See link in motivation with regard to supported installation on different bare metal architectures (x86, Power, Z) Best Applied Using Bare Metal will allow you to support OpenShift Virtualization: https://docs.openshift.com/container-platform/4.9/virt/about-virt.html Bare metal is selected to meet compute and GPU intensive workloads as hosting on VM or hypervisor could deprive or not fulfill the requirements Contraindications Circumstances where the client wants to scale in and out in small increments. Hybrid (x86 ONLY) Name Hybrid (x86 ONLY) Description Hybrid cluster with mixed node types is also a possibility. The common approach for this hybrid cluster is to have control plane nodes as virtual while having the worker nodes as Bare-metal. The rationale is that client data-centers would most probably don't have small enough physical machines to host the control plane nodes so it's possible to have the control plane nodes on virtual for optimization purposes. While having a BareMetal worker nodes as large as the workload requires. Best Applied when using IBM Cloud (Classic) with Bare Metal worker nodes: using the same architecture (x86) you need to mix Bare Metal and Virtual node types, to support different workload types. Contraindications Mixed node type complicates Day 2 operations management. Need to keep nodes on a common machine host architecture within a single cluster management Virtual Dedicated Name Virtual Dedicated Description Virtual Dedicated runs on dedicated hardware and is fast to deploy and scale. It provides the necessary security and performance to support production workloads. Virtual Dedicated is best suited for clients that requests fully dedicated hardware. Best Applied No noisy neighbors Compliance requirements Contraindications More expensive than virtual shared on all hypervisors Virtual Shared Name Virtual Shared Description Shared Virtual is cheap and fast to deploy, but not suitable for business critical or performance workloads. Best Applied The simplest and standard option. Use this option unless there is a requirement that pushes to another alternative. Contraindications","title":"Alternatives"},{"location":"Architectural%20Decisions/architecturaldecision_HkD_7N5XjSFF/#decision","text":"","title":"Decision"},{"location":"Architectural%20Decisions/architecturaldecision_HkD_7N5XjSFF/#justification","text":"","title":"Justification"},{"location":"Architectural%20Decisions/architecturaldecision_HkD_7N5XjSFF/#implications","text":"https://www.redhat.com/en/technologies/cloud-computing/openshift/subscription-guide#openshift-container-platform 1. Type of supported installation (IPI or UPI deployment) - https://docs.openshift.com/container-platform/4.9/installing/installing-preparing.html 2. Optimal licensing (per CPU core / vCPU pair or per socket subscriptions) - https://www.redhat.com/en/technologies/cloud-computing/openshift/subscription-guide#openshift-container-platform","title":"Implications"},{"location":"Architectural%20Decisions/architecturaldecision_HkD_7N5XjSFF/#derived-requirements","text":"","title":"Derived Requirements"},{"location":"Architectural%20Decisions/architecturaldecision_HkD_7N5XjSFF/#related-decisions","text":"","title":"Related Decisions"},{"location":"Architectural%20Decisions/architecturaldecision_HyitX45QjHtF/","text":"OCP-009 \u00b6 Name \u00b6 Production and Non-Production Topology Status \u00b6 accepted Last Update \u00b6 2022-03-08 Subject Area \u00b6 OCP-Platform Topic \u00b6 Issue or Problem Statement \u00b6 OpenShift Projects (namespaces) provide a certain degree of isolation between different development teams or environments, but don't provide full isolation from denial of services, resource consumption and require proper management to provide even basic resource constraint isolation. Assumptions \u00b6 Motivation \u00b6 Customers may request that production environments are separated from non-production environments. Notes \u00b6 Expand all Alternatives \u00b6 Multi-Tenant clusters for non-production workloads Name Multi-Tenant clusters for non-production workloads Description Large Multi-Tenant Clusters based on nodes isolation can be used to provide more strict segmentation within the cluster. Multi-Tenant Cluster with Namespace isolation may be used for small workloads that are too small to justify the cost of a single-tenant cluster that is highly available across multiple zones[^5.1]. It is generally recommended to merge the dev and test in one non-production cluster separating them through Red Hat OpenShift Projects (namespaces). Best Applied Customer need tenant isolation to meet certain isolation requirement. such as regulator compliance, which means that it cannot be hosted across other tenants or clients. When you want to reduce costs by merging non-production environments, but still separate production. Contraindications Single-Tenant clusters Name Single-Tenant clusters Description Single-tenant cluster can be used to separate Dev, Test & Prod Environments with varying requirements. Single-tenant clusters provide pod privileges without putting other tenants at risk of being compromised and enable teams with complex services to have control over the lifecycle of the cluster. Best Applied Contraindications Decision \u00b6 Justification \u00b6 Implications \u00b6 Derived Requirements \u00b6 Related Decisions \u00b6","title":"Production and Non-Production Topology"},{"location":"Architectural%20Decisions/architecturaldecision_HyitX45QjHtF/#ocp-009","text":"","title":"OCP-009"},{"location":"Architectural%20Decisions/architecturaldecision_HyitX45QjHtF/#name","text":"Production and Non-Production Topology","title":"Name"},{"location":"Architectural%20Decisions/architecturaldecision_HyitX45QjHtF/#status","text":"accepted","title":"Status"},{"location":"Architectural%20Decisions/architecturaldecision_HyitX45QjHtF/#last-update","text":"2022-03-08","title":"Last Update"},{"location":"Architectural%20Decisions/architecturaldecision_HyitX45QjHtF/#subject-area","text":"OCP-Platform","title":"Subject Area"},{"location":"Architectural%20Decisions/architecturaldecision_HyitX45QjHtF/#topic","text":"","title":"Topic"},{"location":"Architectural%20Decisions/architecturaldecision_HyitX45QjHtF/#issue-or-problem-statement","text":"OpenShift Projects (namespaces) provide a certain degree of isolation between different development teams or environments, but don't provide full isolation from denial of services, resource consumption and require proper management to provide even basic resource constraint isolation.","title":"Issue or Problem Statement"},{"location":"Architectural%20Decisions/architecturaldecision_HyitX45QjHtF/#assumptions","text":"","title":"Assumptions"},{"location":"Architectural%20Decisions/architecturaldecision_HyitX45QjHtF/#motivation","text":"Customers may request that production environments are separated from non-production environments.","title":"Motivation"},{"location":"Architectural%20Decisions/architecturaldecision_HyitX45QjHtF/#notes","text":"Expand all","title":"Notes"},{"location":"Architectural%20Decisions/architecturaldecision_HyitX45QjHtF/#alternatives","text":"Multi-Tenant clusters for non-production workloads Name Multi-Tenant clusters for non-production workloads Description Large Multi-Tenant Clusters based on nodes isolation can be used to provide more strict segmentation within the cluster. Multi-Tenant Cluster with Namespace isolation may be used for small workloads that are too small to justify the cost of a single-tenant cluster that is highly available across multiple zones[^5.1]. It is generally recommended to merge the dev and test in one non-production cluster separating them through Red Hat OpenShift Projects (namespaces). Best Applied Customer need tenant isolation to meet certain isolation requirement. such as regulator compliance, which means that it cannot be hosted across other tenants or clients. When you want to reduce costs by merging non-production environments, but still separate production. Contraindications Single-Tenant clusters Name Single-Tenant clusters Description Single-tenant cluster can be used to separate Dev, Test & Prod Environments with varying requirements. Single-tenant clusters provide pod privileges without putting other tenants at risk of being compromised and enable teams with complex services to have control over the lifecycle of the cluster. Best Applied Contraindications","title":"Alternatives"},{"location":"Architectural%20Decisions/architecturaldecision_HyitX45QjHtF/#decision","text":"","title":"Decision"},{"location":"Architectural%20Decisions/architecturaldecision_HyitX45QjHtF/#justification","text":"","title":"Justification"},{"location":"Architectural%20Decisions/architecturaldecision_HyitX45QjHtF/#implications","text":"","title":"Implications"},{"location":"Architectural%20Decisions/architecturaldecision_HyitX45QjHtF/#derived-requirements","text":"","title":"Derived Requirements"},{"location":"Architectural%20Decisions/architecturaldecision_HyitX45QjHtF/#related-decisions","text":"","title":"Related Decisions"},{"location":"Architectural%20Decisions/architecturaldecision_S1hcmN5XsrFK/","text":"OCP-012 \u00b6 Name \u00b6 Container Registry Status \u00b6 accepted Last Update \u00b6 2022-03-03 Subject Area \u00b6 OCP-Platform Topic \u00b6 Issue or Problem Statement \u00b6 Container Registry to use with Red Hat OpenShift. Consider requirements such as replication, or vulnerability scanning where Red Hat Platform Plus with Quay + Clair and Red Hat Advanced Cluster Security would provide better value for the design. Assumptions \u00b6 OpenShift provides a built-in container registry, but can also use Red Hat Quay (bundled with Red Hat OpenShift Platform Plus) or 3rd party container registries such as JFrog Artifactory or IBM Cloud Container registries. Motivation \u00b6 https://docs.openshift.com/container-platform/4.9/registry/index.html Notes \u00b6 Expand all Alternatives \u00b6 External registries Name External registries Description External registries are managed independently of the Red Hat OpenShift cluster and require authentication, scaling, and updates to be setup and managed separately. Best Applied Contraindications Integrated Red Hat OpenShift container registry Name Integrated Red Hat OpenShift container registry Description The integrated registry runs as a standard workload leveraging security and management features including integrated authentication, auto-scaling, new image notification, and updates[^10.1]. https://docs.openshift.com/container-platform/4.9/networking/routes/route-configuration.html Best Applied Contraindications Quay Name Quay Description Quay is part of OpenShift Plus. https://www.redhat.com/en/resources/openshift-platform-plus-datasheet https://www.redhat.com/en/technologies/cloud-computing/quay https://www.redhat.com/en/resources/quay-datasheet Best Applied When customer has purchased OpenShinft Plus and needs additional security scanning. Some additional functionality that Quay provides, and may be part of the decision, include: - More Granular Access Control based on external authentication providers - (LDAP, OAuth/OIDC, Keystone, etc.) - Transport layer TLS security - Security scanning of images - Activity Logging - Time machine / Image rollback - Geo-distribution Contraindications Decision \u00b6 Justification \u00b6 Implications \u00b6 Derived Requirements \u00b6 Related Decisions \u00b6","title":"Container Registry"},{"location":"Architectural%20Decisions/architecturaldecision_S1hcmN5XsrFK/#ocp-012","text":"","title":"OCP-012"},{"location":"Architectural%20Decisions/architecturaldecision_S1hcmN5XsrFK/#name","text":"Container Registry","title":"Name"},{"location":"Architectural%20Decisions/architecturaldecision_S1hcmN5XsrFK/#status","text":"accepted","title":"Status"},{"location":"Architectural%20Decisions/architecturaldecision_S1hcmN5XsrFK/#last-update","text":"2022-03-03","title":"Last Update"},{"location":"Architectural%20Decisions/architecturaldecision_S1hcmN5XsrFK/#subject-area","text":"OCP-Platform","title":"Subject Area"},{"location":"Architectural%20Decisions/architecturaldecision_S1hcmN5XsrFK/#topic","text":"","title":"Topic"},{"location":"Architectural%20Decisions/architecturaldecision_S1hcmN5XsrFK/#issue-or-problem-statement","text":"Container Registry to use with Red Hat OpenShift. Consider requirements such as replication, or vulnerability scanning where Red Hat Platform Plus with Quay + Clair and Red Hat Advanced Cluster Security would provide better value for the design.","title":"Issue or Problem Statement"},{"location":"Architectural%20Decisions/architecturaldecision_S1hcmN5XsrFK/#assumptions","text":"OpenShift provides a built-in container registry, but can also use Red Hat Quay (bundled with Red Hat OpenShift Platform Plus) or 3rd party container registries such as JFrog Artifactory or IBM Cloud Container registries.","title":"Assumptions"},{"location":"Architectural%20Decisions/architecturaldecision_S1hcmN5XsrFK/#motivation","text":"https://docs.openshift.com/container-platform/4.9/registry/index.html","title":"Motivation"},{"location":"Architectural%20Decisions/architecturaldecision_S1hcmN5XsrFK/#notes","text":"Expand all","title":"Notes"},{"location":"Architectural%20Decisions/architecturaldecision_S1hcmN5XsrFK/#alternatives","text":"External registries Name External registries Description External registries are managed independently of the Red Hat OpenShift cluster and require authentication, scaling, and updates to be setup and managed separately. Best Applied Contraindications Integrated Red Hat OpenShift container registry Name Integrated Red Hat OpenShift container registry Description The integrated registry runs as a standard workload leveraging security and management features including integrated authentication, auto-scaling, new image notification, and updates[^10.1]. https://docs.openshift.com/container-platform/4.9/networking/routes/route-configuration.html Best Applied Contraindications Quay Name Quay Description Quay is part of OpenShift Plus. https://www.redhat.com/en/resources/openshift-platform-plus-datasheet https://www.redhat.com/en/technologies/cloud-computing/quay https://www.redhat.com/en/resources/quay-datasheet Best Applied When customer has purchased OpenShinft Plus and needs additional security scanning. Some additional functionality that Quay provides, and may be part of the decision, include: - More Granular Access Control based on external authentication providers - (LDAP, OAuth/OIDC, Keystone, etc.) - Transport layer TLS security - Security scanning of images - Activity Logging - Time machine / Image rollback - Geo-distribution Contraindications","title":"Alternatives"},{"location":"Architectural%20Decisions/architecturaldecision_S1hcmN5XsrFK/#decision","text":"","title":"Decision"},{"location":"Architectural%20Decisions/architecturaldecision_S1hcmN5XsrFK/#justification","text":"","title":"Justification"},{"location":"Architectural%20Decisions/architecturaldecision_S1hcmN5XsrFK/#implications","text":"","title":"Implications"},{"location":"Architectural%20Decisions/architecturaldecision_S1hcmN5XsrFK/#derived-requirements","text":"","title":"Derived Requirements"},{"location":"Architectural%20Decisions/architecturaldecision_S1hcmN5XsrFK/#related-decisions","text":"","title":"Related Decisions"},{"location":"Architectural%20Decisions/architecturaldecision_SJ-5mV5msBYt/","text":"OCP-010 \u00b6 Name \u00b6 Application Availability Status \u00b6 accepted Last Update \u00b6 2022-03-08 Subject Area \u00b6 OCP-Workload Topic \u00b6 Issue or Problem Statement \u00b6 Resilient application deployment patterns across multiple regions, zones, nodes. Assumptions \u00b6 Data replication / persistent storage is resolved in some form, and we're looking at ways to ensure the applications themselves remain highly available in case of partial outage (zone, region, node, etc). Motivation \u00b6 Application deployment patterns for meeting certain SLAs, SLOs, RTO, RPO, etc. Notes \u00b6 Expand all Alternatives \u00b6 Multi-zone cluster Name Multi-zone cluster Description Cloud providers, as well as many clients, have multiple data centers which provide low-latency, multi-zone capabilities. Multi-zone clusters across 3 availability zones support both High-Availability and Disaster Recovery[^7.1]. Best Applied Contraindications Multiple clusters across zones or regions Name Multiple clusters across zones or regions Description Stretched clusters across multiple regions using underlying technology (ex: VMWare) to move control plane nodes across regions is not recommended. For the most critical workloads, load-balancing multiple clusters across different availability zones and/or regions can provide continuous application availability, this will ensure the following: Increases the resiliency against potential zone failures. Protects application from zone failures in environments where multi-zone capabilities are not available. Best Applied Contraindications Single zone cluster Name Single zone cluster Description Application availability selection will vary based on solution requirements and Service Level Objectives. Single zone clusters provide protection against node failures, but not against zone failure including networks and storage. Best Applied Contraindications Decision \u00b6 Justification \u00b6 Implications \u00b6 Derived Requirements \u00b6 Related Decisions \u00b6","title":"Application Availability"},{"location":"Architectural%20Decisions/architecturaldecision_SJ-5mV5msBYt/#ocp-010","text":"","title":"OCP-010"},{"location":"Architectural%20Decisions/architecturaldecision_SJ-5mV5msBYt/#name","text":"Application Availability","title":"Name"},{"location":"Architectural%20Decisions/architecturaldecision_SJ-5mV5msBYt/#status","text":"accepted","title":"Status"},{"location":"Architectural%20Decisions/architecturaldecision_SJ-5mV5msBYt/#last-update","text":"2022-03-08","title":"Last Update"},{"location":"Architectural%20Decisions/architecturaldecision_SJ-5mV5msBYt/#subject-area","text":"OCP-Workload","title":"Subject Area"},{"location":"Architectural%20Decisions/architecturaldecision_SJ-5mV5msBYt/#topic","text":"","title":"Topic"},{"location":"Architectural%20Decisions/architecturaldecision_SJ-5mV5msBYt/#issue-or-problem-statement","text":"Resilient application deployment patterns across multiple regions, zones, nodes.","title":"Issue or Problem Statement"},{"location":"Architectural%20Decisions/architecturaldecision_SJ-5mV5msBYt/#assumptions","text":"Data replication / persistent storage is resolved in some form, and we're looking at ways to ensure the applications themselves remain highly available in case of partial outage (zone, region, node, etc).","title":"Assumptions"},{"location":"Architectural%20Decisions/architecturaldecision_SJ-5mV5msBYt/#motivation","text":"Application deployment patterns for meeting certain SLAs, SLOs, RTO, RPO, etc.","title":"Motivation"},{"location":"Architectural%20Decisions/architecturaldecision_SJ-5mV5msBYt/#notes","text":"Expand all","title":"Notes"},{"location":"Architectural%20Decisions/architecturaldecision_SJ-5mV5msBYt/#alternatives","text":"Multi-zone cluster Name Multi-zone cluster Description Cloud providers, as well as many clients, have multiple data centers which provide low-latency, multi-zone capabilities. Multi-zone clusters across 3 availability zones support both High-Availability and Disaster Recovery[^7.1]. Best Applied Contraindications Multiple clusters across zones or regions Name Multiple clusters across zones or regions Description Stretched clusters across multiple regions using underlying technology (ex: VMWare) to move control plane nodes across regions is not recommended. For the most critical workloads, load-balancing multiple clusters across different availability zones and/or regions can provide continuous application availability, this will ensure the following: Increases the resiliency against potential zone failures. Protects application from zone failures in environments where multi-zone capabilities are not available. Best Applied Contraindications Single zone cluster Name Single zone cluster Description Application availability selection will vary based on solution requirements and Service Level Objectives. Single zone clusters provide protection against node failures, but not against zone failure including networks and storage. Best Applied Contraindications","title":"Alternatives"},{"location":"Architectural%20Decisions/architecturaldecision_SJ-5mV5msBYt/#decision","text":"","title":"Decision"},{"location":"Architectural%20Decisions/architecturaldecision_SJ-5mV5msBYt/#justification","text":"","title":"Justification"},{"location":"Architectural%20Decisions/architecturaldecision_SJ-5mV5msBYt/#implications","text":"","title":"Implications"},{"location":"Architectural%20Decisions/architecturaldecision_SJ-5mV5msBYt/#derived-requirements","text":"","title":"Derived Requirements"},{"location":"Architectural%20Decisions/architecturaldecision_SJ-5mV5msBYt/#related-decisions","text":"","title":"Related Decisions"},{"location":"Architectural%20Decisions/architecturaldecision_SJ3uX4qQjBYK/","text":"OCP-001 \u00b6 Name \u00b6 Hosting Platform and Managed or Self-Managed Service Status \u00b6 accepted Last Update \u00b6 2022-03-08 Subject Area \u00b6 OCP-Platform Topic \u00b6 Issue or Problem Statement \u00b6 Select which hosting platform should RHOCP cluster be installed on, and what kind of managed service is required (managed or self-managed). While often this is a business decision or a customer requirement, IBM should guide the customer in selecting the right platform and management level. When selecting self-managed options (such as IPI or UPI), you can also position / design managed services from IBM Consulting or 3rd party providers. Consider that more than one platform can be used, in a multi-cloud design. Assumptions \u00b6 Reference: https://cloud.redhat.com/products Motivation \u00b6 OpenShift is available as a managed cloud service (from Azure, AWS or IBM Cloud), as a managed service from Red Hat (OpenShift Dedicated) or can be deployed as a self-managed platform through IPI or UPI installations. Notes \u00b6 Expand all Alternatives \u00b6 Cloud Service: Microsoft Azure Red Hat OpenShift (ARO) Name Cloud Service: Microsoft Azure Red Hat OpenShift (ARO) Description Billed by: Microsoft, managed by Red Hat and Microsoft, Supported by: Red Hat and Microsoft Best Applied When the client indicated a strong preference for Azure and has associated workloads. Contraindications Cloud Service: Red Hat OpenShift Dedicated, Cloud hosted: AWS or GCP, Billed by Red Hat and cloud provider, managed by: Red Hat, supported by Red Hat Name Cloud Service: Red Hat OpenShift Dedicated, Cloud hosted: AWS or GCP, Billed by Red Hat and cloud provider, managed by: Red Hat, supported by Red Hat Description Cloud Service: Red Hat OpenShift Dedicated, Cloud hosted: AWS or GCP, Billed by Red Hat and cloud provider, managed by: Red Hat, supported by Red Hat Best Applied Contraindications Cloud Service: Red Hat OpenShift Service on AWS (ROSA), hosted on AWS, Billed by: AWS, Managed by: Red Hat and AWS, Supported by: Red Hat and AWS Name Cloud Service: Red Hat OpenShift Service on AWS (ROSA), hosted on AWS, Billed by: AWS, Managed by: Red Hat and AWS, Supported by: Red Hat and AWS Description Cloud Service: Red Hat OpenShift Service on AWS (ROSA), hosted on AWS, Billed by: AWS, Managed by: Red Hat and AWS, Supported by: Red Hat and AWS Best Applied Contraindications Cloud Service: Red Hat OpenShift on IBM Cloud Satellite Name Cloud Service: Red Hat OpenShift on IBM Cloud Satellite Description Managed by: IBM Cloud, Billed By: IBM Cloud or Bring Your Own License (BYOL), Supported by: IBM and Red Hat Best Applied On-prem, AWS, Azure or other hyperscalers when IBM Cloud is the lead provider for multi-cloud environment Contraindications When the client refuses to use IBM Cloud Cloud Service: Red Hat OpenShift on IBM Cloud, hosted on IBM Cloud, billed by IBM, Managed by: IBM, supported by: Red Hat and IBM Name Cloud Service: Red Hat OpenShift on IBM Cloud, hosted on IBM Cloud, billed by IBM, Managed by: IBM, supported by: Red Hat and IBM Description Cloud Service: Red Hat OpenShift on IBM Cloud, hosted on IBM Cloud, billed by IBM, Managed by: IBM, supported by: Red Hat and IBM Best Applied Contraindications Cloud Service: Red hat OpenShift on IBM VMware, hosted on IBM IC4RW. self managed by Client or IBM Name Cloud Service: Red hat OpenShift on IBM VMware, hosted on IBM IC4RW. self managed by Client or IBM Description Cloud Service: Red hat OpenShift on IBM VMware, hosted on IBM IC4RW. self managed by Client or IBM Best Applied Contraindications Self Managed (on Bare Metal or Virtual Nodes, see decision 2) Name Self Managed (on Bare Metal or Virtual Nodes, see decision 2) Description See Architecture AD-002 for platform type and installation type. Best Applied Contraindications Decision \u00b6 Justification \u00b6 Implications \u00b6 Derived Requirements \u00b6 Related Decisions \u00b6","title":"Hosting Platform and Managed or Self-Managed Service"},{"location":"Architectural%20Decisions/architecturaldecision_SJ3uX4qQjBYK/#ocp-001","text":"","title":"OCP-001"},{"location":"Architectural%20Decisions/architecturaldecision_SJ3uX4qQjBYK/#name","text":"Hosting Platform and Managed or Self-Managed Service","title":"Name"},{"location":"Architectural%20Decisions/architecturaldecision_SJ3uX4qQjBYK/#status","text":"accepted","title":"Status"},{"location":"Architectural%20Decisions/architecturaldecision_SJ3uX4qQjBYK/#last-update","text":"2022-03-08","title":"Last Update"},{"location":"Architectural%20Decisions/architecturaldecision_SJ3uX4qQjBYK/#subject-area","text":"OCP-Platform","title":"Subject Area"},{"location":"Architectural%20Decisions/architecturaldecision_SJ3uX4qQjBYK/#topic","text":"","title":"Topic"},{"location":"Architectural%20Decisions/architecturaldecision_SJ3uX4qQjBYK/#issue-or-problem-statement","text":"Select which hosting platform should RHOCP cluster be installed on, and what kind of managed service is required (managed or self-managed). While often this is a business decision or a customer requirement, IBM should guide the customer in selecting the right platform and management level. When selecting self-managed options (such as IPI or UPI), you can also position / design managed services from IBM Consulting or 3rd party providers. Consider that more than one platform can be used, in a multi-cloud design.","title":"Issue or Problem Statement"},{"location":"Architectural%20Decisions/architecturaldecision_SJ3uX4qQjBYK/#assumptions","text":"Reference: https://cloud.redhat.com/products","title":"Assumptions"},{"location":"Architectural%20Decisions/architecturaldecision_SJ3uX4qQjBYK/#motivation","text":"OpenShift is available as a managed cloud service (from Azure, AWS or IBM Cloud), as a managed service from Red Hat (OpenShift Dedicated) or can be deployed as a self-managed platform through IPI or UPI installations.","title":"Motivation"},{"location":"Architectural%20Decisions/architecturaldecision_SJ3uX4qQjBYK/#notes","text":"Expand all","title":"Notes"},{"location":"Architectural%20Decisions/architecturaldecision_SJ3uX4qQjBYK/#alternatives","text":"Cloud Service: Microsoft Azure Red Hat OpenShift (ARO) Name Cloud Service: Microsoft Azure Red Hat OpenShift (ARO) Description Billed by: Microsoft, managed by Red Hat and Microsoft, Supported by: Red Hat and Microsoft Best Applied When the client indicated a strong preference for Azure and has associated workloads. Contraindications Cloud Service: Red Hat OpenShift Dedicated, Cloud hosted: AWS or GCP, Billed by Red Hat and cloud provider, managed by: Red Hat, supported by Red Hat Name Cloud Service: Red Hat OpenShift Dedicated, Cloud hosted: AWS or GCP, Billed by Red Hat and cloud provider, managed by: Red Hat, supported by Red Hat Description Cloud Service: Red Hat OpenShift Dedicated, Cloud hosted: AWS or GCP, Billed by Red Hat and cloud provider, managed by: Red Hat, supported by Red Hat Best Applied Contraindications Cloud Service: Red Hat OpenShift Service on AWS (ROSA), hosted on AWS, Billed by: AWS, Managed by: Red Hat and AWS, Supported by: Red Hat and AWS Name Cloud Service: Red Hat OpenShift Service on AWS (ROSA), hosted on AWS, Billed by: AWS, Managed by: Red Hat and AWS, Supported by: Red Hat and AWS Description Cloud Service: Red Hat OpenShift Service on AWS (ROSA), hosted on AWS, Billed by: AWS, Managed by: Red Hat and AWS, Supported by: Red Hat and AWS Best Applied Contraindications Cloud Service: Red Hat OpenShift on IBM Cloud Satellite Name Cloud Service: Red Hat OpenShift on IBM Cloud Satellite Description Managed by: IBM Cloud, Billed By: IBM Cloud or Bring Your Own License (BYOL), Supported by: IBM and Red Hat Best Applied On-prem, AWS, Azure or other hyperscalers when IBM Cloud is the lead provider for multi-cloud environment Contraindications When the client refuses to use IBM Cloud Cloud Service: Red Hat OpenShift on IBM Cloud, hosted on IBM Cloud, billed by IBM, Managed by: IBM, supported by: Red Hat and IBM Name Cloud Service: Red Hat OpenShift on IBM Cloud, hosted on IBM Cloud, billed by IBM, Managed by: IBM, supported by: Red Hat and IBM Description Cloud Service: Red Hat OpenShift on IBM Cloud, hosted on IBM Cloud, billed by IBM, Managed by: IBM, supported by: Red Hat and IBM Best Applied Contraindications Cloud Service: Red hat OpenShift on IBM VMware, hosted on IBM IC4RW. self managed by Client or IBM Name Cloud Service: Red hat OpenShift on IBM VMware, hosted on IBM IC4RW. self managed by Client or IBM Description Cloud Service: Red hat OpenShift on IBM VMware, hosted on IBM IC4RW. self managed by Client or IBM Best Applied Contraindications Self Managed (on Bare Metal or Virtual Nodes, see decision 2) Name Self Managed (on Bare Metal or Virtual Nodes, see decision 2) Description See Architecture AD-002 for platform type and installation type. Best Applied Contraindications","title":"Alternatives"},{"location":"Architectural%20Decisions/architecturaldecision_SJ3uX4qQjBYK/#decision","text":"","title":"Decision"},{"location":"Architectural%20Decisions/architecturaldecision_SJ3uX4qQjBYK/#justification","text":"","title":"Justification"},{"location":"Architectural%20Decisions/architecturaldecision_SJ3uX4qQjBYK/#implications","text":"","title":"Implications"},{"location":"Architectural%20Decisions/architecturaldecision_SJ3uX4qQjBYK/#derived-requirements","text":"","title":"Derived Requirements"},{"location":"Architectural%20Decisions/architecturaldecision_SJ3uX4qQjBYK/#related-decisions","text":"","title":"Related Decisions"},{"location":"Architectural%20Decisions/architecturaldecision_SJB57N57srKF/","text":"OCP-017 \u00b6 Name \u00b6 Load Balancer Selection Status \u00b6 proposed Last Update \u00b6 2022-03-08 Subject Area \u00b6 Platform Topic \u00b6 Issue or Problem Statement \u00b6 Identify the appropriate Load Balancer / Ingress when using OpenShift across various platforms. Assumptions \u00b6 https://docs.openshift.com/container-platform/4.9/networking/configuring_ingress_cluster_traffic/overview-traffic.html Motivation \u00b6 Notes \u00b6 Expand all Alternatives \u00b6 Combination of both Name Combination of both Description Configuration of the router and load-balancer policies is required with either option. Specialized knowledge of vendor load-balancer product is required. GTM (Global Traffic Managers)/LTM (Local Traffic Managers) provide load-balancing and traffic routing capabilities based on the service availability across multiple zones/DCs and/or regions. Best Applied Contraindications External load-balancer Name External load-balancer Description External load-balancers require additional cost. Best Applied Contraindications Red Hat OpenShift routes Name Red Hat OpenShift routes Description Red Hat OpenShift provides a built-in routes service, which provides load-balancing capabilities at no additional cost; however, without external load-balancer it relies on DNS load-balancing which has its own limitations. Best Applied Default option for most cases. Contraindications Decision \u00b6 Justification \u00b6 Implications \u00b6 Derived Requirements \u00b6 Related Decisions \u00b6","title":"Load Balancer Selection"},{"location":"Architectural%20Decisions/architecturaldecision_SJB57N57srKF/#ocp-017","text":"","title":"OCP-017"},{"location":"Architectural%20Decisions/architecturaldecision_SJB57N57srKF/#name","text":"Load Balancer Selection","title":"Name"},{"location":"Architectural%20Decisions/architecturaldecision_SJB57N57srKF/#status","text":"proposed","title":"Status"},{"location":"Architectural%20Decisions/architecturaldecision_SJB57N57srKF/#last-update","text":"2022-03-08","title":"Last Update"},{"location":"Architectural%20Decisions/architecturaldecision_SJB57N57srKF/#subject-area","text":"Platform","title":"Subject Area"},{"location":"Architectural%20Decisions/architecturaldecision_SJB57N57srKF/#topic","text":"","title":"Topic"},{"location":"Architectural%20Decisions/architecturaldecision_SJB57N57srKF/#issue-or-problem-statement","text":"Identify the appropriate Load Balancer / Ingress when using OpenShift across various platforms.","title":"Issue or Problem Statement"},{"location":"Architectural%20Decisions/architecturaldecision_SJB57N57srKF/#assumptions","text":"https://docs.openshift.com/container-platform/4.9/networking/configuring_ingress_cluster_traffic/overview-traffic.html","title":"Assumptions"},{"location":"Architectural%20Decisions/architecturaldecision_SJB57N57srKF/#motivation","text":"","title":"Motivation"},{"location":"Architectural%20Decisions/architecturaldecision_SJB57N57srKF/#notes","text":"Expand all","title":"Notes"},{"location":"Architectural%20Decisions/architecturaldecision_SJB57N57srKF/#alternatives","text":"Combination of both Name Combination of both Description Configuration of the router and load-balancer policies is required with either option. Specialized knowledge of vendor load-balancer product is required. GTM (Global Traffic Managers)/LTM (Local Traffic Managers) provide load-balancing and traffic routing capabilities based on the service availability across multiple zones/DCs and/or regions. Best Applied Contraindications External load-balancer Name External load-balancer Description External load-balancers require additional cost. Best Applied Contraindications Red Hat OpenShift routes Name Red Hat OpenShift routes Description Red Hat OpenShift provides a built-in routes service, which provides load-balancing capabilities at no additional cost; however, without external load-balancer it relies on DNS load-balancing which has its own limitations. Best Applied Default option for most cases. Contraindications","title":"Alternatives"},{"location":"Architectural%20Decisions/architecturaldecision_SJB57N57srKF/#decision","text":"","title":"Decision"},{"location":"Architectural%20Decisions/architecturaldecision_SJB57N57srKF/#justification","text":"","title":"Justification"},{"location":"Architectural%20Decisions/architecturaldecision_SJB57N57srKF/#implications","text":"","title":"Implications"},{"location":"Architectural%20Decisions/architecturaldecision_SJB57N57srKF/#derived-requirements","text":"","title":"Derived Requirements"},{"location":"Architectural%20Decisions/architecturaldecision_SJB57N57srKF/#related-decisions","text":"","title":"Related Decisions"},{"location":"Architectural%20Decisions/architecturaldecision_SJY57NqmjSYK/","text":"OCP-011 \u00b6 Name \u00b6 Control Plane Deployment Topology (Single Region with multiple AZ) Status \u00b6 proposed Last Update \u00b6 2022-03-08 Subject Area \u00b6 Platform Topic \u00b6 Issue or Problem Statement \u00b6 Deployment topology for OpenShift clusters across one or more Regions, with one or more availability zones. Assumptions \u00b6 The workloads should support running across multiple clusters in different regions. OpenShift does not support stretched clusters across multiple regions as the latency requirements for replicating etcd require deploying the control plane across one or more Availability Zones within the same geographic region. Motivation \u00b6 There are different reasons to have multiple regions , which include: - High availability for highly distributed applications - Disaster Recovery set up - Multiple Geo-presence, allowing workloads to be closer to their end consumers - Regulatory compliance. For example data residency requirements; processes that need to run in certain jurisdictions; etc Notes \u00b6 Expand all Alternatives \u00b6 Single Region Deployment Name Single Region Deployment Description OpenShift will be deployed between 1 or more AZ within a region. Best Applied If a workload does not support running across multiple regions and high latency, then a multi availability zone in a single region may be a better option. If high availability requirements include running a workload in multiple DCs, this could be accomplished by using Availability Zones with some Public Cloud providers. You need to check the specific Availability Zone set up for the Hyperscalers where you're looking to install OpenShift. Contraindications Decision \u00b6 Justification \u00b6 Implications \u00b6 Derived Requirements \u00b6 Related Decisions \u00b6","title":"Control Plane Deployment Topology (Single Region with multiple AZ)"},{"location":"Architectural%20Decisions/architecturaldecision_SJY57NqmjSYK/#ocp-011","text":"","title":"OCP-011"},{"location":"Architectural%20Decisions/architecturaldecision_SJY57NqmjSYK/#name","text":"Control Plane Deployment Topology (Single Region with multiple AZ)","title":"Name"},{"location":"Architectural%20Decisions/architecturaldecision_SJY57NqmjSYK/#status","text":"proposed","title":"Status"},{"location":"Architectural%20Decisions/architecturaldecision_SJY57NqmjSYK/#last-update","text":"2022-03-08","title":"Last Update"},{"location":"Architectural%20Decisions/architecturaldecision_SJY57NqmjSYK/#subject-area","text":"Platform","title":"Subject Area"},{"location":"Architectural%20Decisions/architecturaldecision_SJY57NqmjSYK/#topic","text":"","title":"Topic"},{"location":"Architectural%20Decisions/architecturaldecision_SJY57NqmjSYK/#issue-or-problem-statement","text":"Deployment topology for OpenShift clusters across one or more Regions, with one or more availability zones.","title":"Issue or Problem Statement"},{"location":"Architectural%20Decisions/architecturaldecision_SJY57NqmjSYK/#assumptions","text":"The workloads should support running across multiple clusters in different regions. OpenShift does not support stretched clusters across multiple regions as the latency requirements for replicating etcd require deploying the control plane across one or more Availability Zones within the same geographic region.","title":"Assumptions"},{"location":"Architectural%20Decisions/architecturaldecision_SJY57NqmjSYK/#motivation","text":"There are different reasons to have multiple regions , which include: - High availability for highly distributed applications - Disaster Recovery set up - Multiple Geo-presence, allowing workloads to be closer to their end consumers - Regulatory compliance. For example data residency requirements; processes that need to run in certain jurisdictions; etc","title":"Motivation"},{"location":"Architectural%20Decisions/architecturaldecision_SJY57NqmjSYK/#notes","text":"Expand all","title":"Notes"},{"location":"Architectural%20Decisions/architecturaldecision_SJY57NqmjSYK/#alternatives","text":"Single Region Deployment Name Single Region Deployment Description OpenShift will be deployed between 1 or more AZ within a region. Best Applied If a workload does not support running across multiple regions and high latency, then a multi availability zone in a single region may be a better option. If high availability requirements include running a workload in multiple DCs, this could be accomplished by using Availability Zones with some Public Cloud providers. You need to check the specific Availability Zone set up for the Hyperscalers where you're looking to install OpenShift. Contraindications","title":"Alternatives"},{"location":"Architectural%20Decisions/architecturaldecision_SJY57NqmjSYK/#decision","text":"","title":"Decision"},{"location":"Architectural%20Decisions/architecturaldecision_SJY57NqmjSYK/#justification","text":"","title":"Justification"},{"location":"Architectural%20Decisions/architecturaldecision_SJY57NqmjSYK/#implications","text":"","title":"Implications"},{"location":"Architectural%20Decisions/architecturaldecision_SJY57NqmjSYK/#derived-requirements","text":"","title":"Derived Requirements"},{"location":"Architectural%20Decisions/architecturaldecision_SJY57NqmjSYK/#related-decisions","text":"","title":"Related Decisions"},{"location":"Architectural%20Decisions/architecturaldecision_Sy1j7VqQoHFt/","text":"OCP-008 \u00b6 Name \u00b6 Management Service Placement Status \u00b6 accepted Last Update \u00b6 2022-03-08 Subject Area \u00b6 OCP-Platform Topic \u00b6 Infrastructure Nodes Issue or Problem Statement \u00b6 Configure dedicated infrastructure nodes for OpenShift cluster Assumptions \u00b6 Infrastructure nodes: Instances (virtual or physical hosts) of Red Hat Enterprise Linux or Red Hat Enterprise Linux CoreOS that are running pods supporting Red Hat OpenShift\u2019s cluster infrastructure or running the HAProxy-based load balancer for ingress traffic. Infrastructure nodes are included in self-managed Red Hat OpenShift subscriptions. Motivation \u00b6 https://www.redhat.com/en/technologies/cloud-computing/openshift/subscription-guide OpenShift Control Plane and Infrastructure nodes Each self-managed Red Hat OpenShift subscription provides extra entitlements for Red Hat OpenShift, Red Hat Enterprise Linux, and other Red Hat OpenShift-related components. These extra entitlements are included for the purpose of running Red Hat OpenShift control plane and infrastructure nodes. Infrastructure nodes The Red Hat OpenShift installer deploys a highly available Red Hat OpenShift control plane composed of 3 control plane nodes, in addition to Red Hat OpenShift worker nodes to run end user applications. By default, Kubernetes control plane components (e.g., API server, etcd, scheduler) and supporting cluster services (e.g., monitoring, registry) will be deployed on the Red Hat OpenShift control plane nodes. However, customers may decide to move some of these supporting cluster services to dedicated infrastructure nodes. To qualify as an infrastructure node and use the included entitlement, only components that are supporting the cluster, and not part of an end user application, may be running on those instances. Examples include: Red Hat OpenShift registry Red Hat OpenShift Ingress Router (local and global/multicluster ingress) Red Hat OpenShift monitoring Red Hat OpenShift log management HAProxy-based instances used for cluster ingress Red Hat Quay Red Hat OpenShift Data Foundation (previously Red Hat OpenShift Container Storage) Red Hat Advanced Cluster Management for Kubernetes Red Hat Advanced Cluster Security for Kubernetes Red Hat OpenShift GitOps Red Hat OpenShift Pipelines Customers may deploy and run custom and third-party agents and tools for monitoring, log data collection and forwarding, hardware drivers, infrastructure integration such as virtualization agents, etc. to infrastructure nodes without disqualifying the node for infrastructure licensing. However, this is limited only to agents and related components, including controller Pods for Operators. It does not include the custom or third-party software suite. Examples of these may include: Custom and third-party monitoring agents Container network interface (CNI) and container storage interface (CSI) drivers and controllers (plugins) Hardware or virtualization enablement accelerators Controller pods used for Kubernetes CRD or Operators (custom or third-party software) No other end user application instances or types may be run on an infrastructure node using the included entitlement. To run other infrastructure workloads as application instances on Red Hat OpenShift, you must run those instances on regular application nodes. Verify infrastructure status qualifications with Red Hat. Additional approved usage of the infrastructure node As end users increase their usage of Red Hat OpenShift, they may begin using some of the more sophisticated application deployment patterns. As a result, they may need to add additional software components to the platform. As a general principle, Red Hat OpenShift subscriptions are based on the total capacity of the Red Hat OpenShift worker nodes that are required to run the application workloads and supporting application services deployed to those worker nodes. Notes \u00b6 Expand all Alternatives \u00b6 Isolate management function (Add Infrastructure Nodes) Name Isolate management function (Add Infrastructure Nodes) Description Isolating management functions in dedicated nodes is highly recommended. Red Hat OpenShift has multiple infrastructure components[^11.1]: Default router Container image registry Cluster metrics collection, or monitoring service Cluster aggregated logging Service brokers It is recommended to separate the infrastructure nodes for monitoring and logging. Collocating infrastructure functions may be feasible when performance is not a requirement such as in Dev/Test environments. Best Applied Contraindications Management function on control plane node Name Management function on control plane node Description Kubernetes management functions such as monitoring, and logging are memory intensive workloads with a lot of Disk IO. Size a smaller management node when cost is an issue. Best Applied Contraindications Decision \u00b6 Justification \u00b6 Implications \u00b6 Derived Requirements \u00b6 Related Decisions \u00b6","title":"Management Service Placement"},{"location":"Architectural%20Decisions/architecturaldecision_Sy1j7VqQoHFt/#ocp-008","text":"","title":"OCP-008"},{"location":"Architectural%20Decisions/architecturaldecision_Sy1j7VqQoHFt/#name","text":"Management Service Placement","title":"Name"},{"location":"Architectural%20Decisions/architecturaldecision_Sy1j7VqQoHFt/#status","text":"accepted","title":"Status"},{"location":"Architectural%20Decisions/architecturaldecision_Sy1j7VqQoHFt/#last-update","text":"2022-03-08","title":"Last Update"},{"location":"Architectural%20Decisions/architecturaldecision_Sy1j7VqQoHFt/#subject-area","text":"OCP-Platform","title":"Subject Area"},{"location":"Architectural%20Decisions/architecturaldecision_Sy1j7VqQoHFt/#topic","text":"Infrastructure Nodes","title":"Topic"},{"location":"Architectural%20Decisions/architecturaldecision_Sy1j7VqQoHFt/#issue-or-problem-statement","text":"Configure dedicated infrastructure nodes for OpenShift cluster","title":"Issue or Problem Statement"},{"location":"Architectural%20Decisions/architecturaldecision_Sy1j7VqQoHFt/#assumptions","text":"Infrastructure nodes: Instances (virtual or physical hosts) of Red Hat Enterprise Linux or Red Hat Enterprise Linux CoreOS that are running pods supporting Red Hat OpenShift\u2019s cluster infrastructure or running the HAProxy-based load balancer for ingress traffic. Infrastructure nodes are included in self-managed Red Hat OpenShift subscriptions.","title":"Assumptions"},{"location":"Architectural%20Decisions/architecturaldecision_Sy1j7VqQoHFt/#motivation","text":"https://www.redhat.com/en/technologies/cloud-computing/openshift/subscription-guide OpenShift Control Plane and Infrastructure nodes Each self-managed Red Hat OpenShift subscription provides extra entitlements for Red Hat OpenShift, Red Hat Enterprise Linux, and other Red Hat OpenShift-related components. These extra entitlements are included for the purpose of running Red Hat OpenShift control plane and infrastructure nodes. Infrastructure nodes The Red Hat OpenShift installer deploys a highly available Red Hat OpenShift control plane composed of 3 control plane nodes, in addition to Red Hat OpenShift worker nodes to run end user applications. By default, Kubernetes control plane components (e.g., API server, etcd, scheduler) and supporting cluster services (e.g., monitoring, registry) will be deployed on the Red Hat OpenShift control plane nodes. However, customers may decide to move some of these supporting cluster services to dedicated infrastructure nodes. To qualify as an infrastructure node and use the included entitlement, only components that are supporting the cluster, and not part of an end user application, may be running on those instances. Examples include: Red Hat OpenShift registry Red Hat OpenShift Ingress Router (local and global/multicluster ingress) Red Hat OpenShift monitoring Red Hat OpenShift log management HAProxy-based instances used for cluster ingress Red Hat Quay Red Hat OpenShift Data Foundation (previously Red Hat OpenShift Container Storage) Red Hat Advanced Cluster Management for Kubernetes Red Hat Advanced Cluster Security for Kubernetes Red Hat OpenShift GitOps Red Hat OpenShift Pipelines Customers may deploy and run custom and third-party agents and tools for monitoring, log data collection and forwarding, hardware drivers, infrastructure integration such as virtualization agents, etc. to infrastructure nodes without disqualifying the node for infrastructure licensing. However, this is limited only to agents and related components, including controller Pods for Operators. It does not include the custom or third-party software suite. Examples of these may include: Custom and third-party monitoring agents Container network interface (CNI) and container storage interface (CSI) drivers and controllers (plugins) Hardware or virtualization enablement accelerators Controller pods used for Kubernetes CRD or Operators (custom or third-party software) No other end user application instances or types may be run on an infrastructure node using the included entitlement. To run other infrastructure workloads as application instances on Red Hat OpenShift, you must run those instances on regular application nodes. Verify infrastructure status qualifications with Red Hat. Additional approved usage of the infrastructure node As end users increase their usage of Red Hat OpenShift, they may begin using some of the more sophisticated application deployment patterns. As a result, they may need to add additional software components to the platform. As a general principle, Red Hat OpenShift subscriptions are based on the total capacity of the Red Hat OpenShift worker nodes that are required to run the application workloads and supporting application services deployed to those worker nodes.","title":"Motivation"},{"location":"Architectural%20Decisions/architecturaldecision_Sy1j7VqQoHFt/#notes","text":"Expand all","title":"Notes"},{"location":"Architectural%20Decisions/architecturaldecision_Sy1j7VqQoHFt/#alternatives","text":"Isolate management function (Add Infrastructure Nodes) Name Isolate management function (Add Infrastructure Nodes) Description Isolating management functions in dedicated nodes is highly recommended. Red Hat OpenShift has multiple infrastructure components[^11.1]: Default router Container image registry Cluster metrics collection, or monitoring service Cluster aggregated logging Service brokers It is recommended to separate the infrastructure nodes for monitoring and logging. Collocating infrastructure functions may be feasible when performance is not a requirement such as in Dev/Test environments. Best Applied Contraindications Management function on control plane node Name Management function on control plane node Description Kubernetes management functions such as monitoring, and logging are memory intensive workloads with a lot of Disk IO. Size a smaller management node when cost is an issue. Best Applied Contraindications","title":"Alternatives"},{"location":"Architectural%20Decisions/architecturaldecision_Sy1j7VqQoHFt/#decision","text":"","title":"Decision"},{"location":"Architectural%20Decisions/architecturaldecision_Sy1j7VqQoHFt/#justification","text":"","title":"Justification"},{"location":"Architectural%20Decisions/architecturaldecision_Sy1j7VqQoHFt/#implications","text":"","title":"Implications"},{"location":"Architectural%20Decisions/architecturaldecision_Sy1j7VqQoHFt/#derived-requirements","text":"","title":"Derived Requirements"},{"location":"Architectural%20Decisions/architecturaldecision_Sy1j7VqQoHFt/#related-decisions","text":"","title":"Related Decisions"},{"location":"Architectural%20Decisions/architecturaldecision_rJgYm49QiHFt/","text":"OCP-003 \u00b6 Name \u00b6 OpenShift Self Managed - IPI or UPI installation Status \u00b6 accepted Last Update \u00b6 2022-03-08 Subject Area \u00b6 OCP-Platform Topic \u00b6 Issue or Problem Statement \u00b6 Deploy OpenShift as a IPI or UPI installation. When designing an IPI or UPI deployment, consider if additional 'managed services' are provided to the customer (ex: NordCloud, IBM Consulting Platform Engineering Services, etc). and ensure they are supported across the platform design. Assumptions \u00b6 Choosing IPI over UPI will provide additional capabilities for OpenShift to auto-scale and manage infrastructure elements. IPI installation is not supported across all platforms, please check the documentation for the specific OpenShift version you plan to deploy. Ex: https://docs.openshift.com/container-platform/4.9/installing/installing-preparing.html Motivation \u00b6 https://docs.openshift.com/container-platform/4.9/installing/installing-preparing.html Notes \u00b6 Expand all Alternatives \u00b6 IPI - Installer Provisioned Infrastructure Name IPI - Installer Provisioned Infrastructure Description IPI Best Applied When IPI installation is supported Contraindications UPI - User Provisioned Infrastructure Name UPI - User Provisioned Infrastructure Description UPI Best Applied When IPI is not supported, or requires certain customizations. Contraindications Decision \u00b6 Justification \u00b6 Implications \u00b6 Derived Requirements \u00b6 Related Decisions \u00b6","title":"OpenShift Self Managed - IPI or UPI installation"},{"location":"Architectural%20Decisions/architecturaldecision_rJgYm49QiHFt/#ocp-003","text":"","title":"OCP-003"},{"location":"Architectural%20Decisions/architecturaldecision_rJgYm49QiHFt/#name","text":"OpenShift Self Managed - IPI or UPI installation","title":"Name"},{"location":"Architectural%20Decisions/architecturaldecision_rJgYm49QiHFt/#status","text":"accepted","title":"Status"},{"location":"Architectural%20Decisions/architecturaldecision_rJgYm49QiHFt/#last-update","text":"2022-03-08","title":"Last Update"},{"location":"Architectural%20Decisions/architecturaldecision_rJgYm49QiHFt/#subject-area","text":"OCP-Platform","title":"Subject Area"},{"location":"Architectural%20Decisions/architecturaldecision_rJgYm49QiHFt/#topic","text":"","title":"Topic"},{"location":"Architectural%20Decisions/architecturaldecision_rJgYm49QiHFt/#issue-or-problem-statement","text":"Deploy OpenShift as a IPI or UPI installation. When designing an IPI or UPI deployment, consider if additional 'managed services' are provided to the customer (ex: NordCloud, IBM Consulting Platform Engineering Services, etc). and ensure they are supported across the platform design.","title":"Issue or Problem Statement"},{"location":"Architectural%20Decisions/architecturaldecision_rJgYm49QiHFt/#assumptions","text":"Choosing IPI over UPI will provide additional capabilities for OpenShift to auto-scale and manage infrastructure elements. IPI installation is not supported across all platforms, please check the documentation for the specific OpenShift version you plan to deploy. Ex: https://docs.openshift.com/container-platform/4.9/installing/installing-preparing.html","title":"Assumptions"},{"location":"Architectural%20Decisions/architecturaldecision_rJgYm49QiHFt/#motivation","text":"https://docs.openshift.com/container-platform/4.9/installing/installing-preparing.html","title":"Motivation"},{"location":"Architectural%20Decisions/architecturaldecision_rJgYm49QiHFt/#notes","text":"Expand all","title":"Notes"},{"location":"Architectural%20Decisions/architecturaldecision_rJgYm49QiHFt/#alternatives","text":"IPI - Installer Provisioned Infrastructure Name IPI - Installer Provisioned Infrastructure Description IPI Best Applied When IPI installation is supported Contraindications UPI - User Provisioned Infrastructure Name UPI - User Provisioned Infrastructure Description UPI Best Applied When IPI is not supported, or requires certain customizations. Contraindications","title":"Alternatives"},{"location":"Architectural%20Decisions/architecturaldecision_rJgYm49QiHFt/#decision","text":"","title":"Decision"},{"location":"Architectural%20Decisions/architecturaldecision_rJgYm49QiHFt/#justification","text":"","title":"Justification"},{"location":"Architectural%20Decisions/architecturaldecision_rJgYm49QiHFt/#implications","text":"","title":"Implications"},{"location":"Architectural%20Decisions/architecturaldecision_rJgYm49QiHFt/#derived-requirements","text":"","title":"Derived Requirements"},{"location":"Architectural%20Decisions/architecturaldecision_rJgYm49QiHFt/#related-decisions","text":"","title":"Related Decisions"},{"location":"Architectural%20Decisions/architecturaldecision_rkrtQ4qXoSKt/","text":"OCP-004 \u00b6 Name \u00b6 Red Hat OpenShift Container Platform Life Cycle Policy (EUS Support) Status \u00b6 accepted Last Update \u00b6 2022-03-08 Subject Area \u00b6 OCP-Platform Topic \u00b6 Issue or Problem Statement \u00b6 Identity the release support lifecycle for the selected OpenShift version, and ensure it's supported across the desired products (ex: Cloud Paks), platform (ex: ROSA, ARO, IBM Cloud). Assumptions \u00b6 Commencing with OCS 4.8, Red Hat will denote all even numbered minor releases (eg 4.8, 4.10, 4.12) as Extended Update Support (EUS) releases. Motivation \u00b6 Red Hat OpenShift Container Platform Life Cycle Policy - https://access.redhat.com/support/policy/updates/openshift-eus https://access.redhat.com/support/policy/updates/openshift For Cloud Pak supported RHOCP versions - https://www.ibm.com/docs/en/cloud-paks/1.0?topic=clusters-openshift-platform-compatibility Notes \u00b6 Expand all Alternatives \u00b6 Extended Update Support Name Extended Update Support Description EUS Best Applied Contraindications non-EUS Name non-EUS Description non-EUS Best Applied Contraindications Decision \u00b6 Justification \u00b6 Implications \u00b6 Commencing with OCS 4.8, Red Hat will denote all even numbered minor releases (eg 4.8, 4.10, 4.12) as Extended Update Support (EUS) releases. Derived Requirements \u00b6 Related Decisions \u00b6","title":"Red Hat OpenShift Container Platform Life Cycle Policy (EUS Support)"},{"location":"Architectural%20Decisions/architecturaldecision_rkrtQ4qXoSKt/#ocp-004","text":"","title":"OCP-004"},{"location":"Architectural%20Decisions/architecturaldecision_rkrtQ4qXoSKt/#name","text":"Red Hat OpenShift Container Platform Life Cycle Policy (EUS Support)","title":"Name"},{"location":"Architectural%20Decisions/architecturaldecision_rkrtQ4qXoSKt/#status","text":"accepted","title":"Status"},{"location":"Architectural%20Decisions/architecturaldecision_rkrtQ4qXoSKt/#last-update","text":"2022-03-08","title":"Last Update"},{"location":"Architectural%20Decisions/architecturaldecision_rkrtQ4qXoSKt/#subject-area","text":"OCP-Platform","title":"Subject Area"},{"location":"Architectural%20Decisions/architecturaldecision_rkrtQ4qXoSKt/#topic","text":"","title":"Topic"},{"location":"Architectural%20Decisions/architecturaldecision_rkrtQ4qXoSKt/#issue-or-problem-statement","text":"Identity the release support lifecycle for the selected OpenShift version, and ensure it's supported across the desired products (ex: Cloud Paks), platform (ex: ROSA, ARO, IBM Cloud).","title":"Issue or Problem Statement"},{"location":"Architectural%20Decisions/architecturaldecision_rkrtQ4qXoSKt/#assumptions","text":"Commencing with OCS 4.8, Red Hat will denote all even numbered minor releases (eg 4.8, 4.10, 4.12) as Extended Update Support (EUS) releases.","title":"Assumptions"},{"location":"Architectural%20Decisions/architecturaldecision_rkrtQ4qXoSKt/#motivation","text":"Red Hat OpenShift Container Platform Life Cycle Policy - https://access.redhat.com/support/policy/updates/openshift-eus https://access.redhat.com/support/policy/updates/openshift For Cloud Pak supported RHOCP versions - https://www.ibm.com/docs/en/cloud-paks/1.0?topic=clusters-openshift-platform-compatibility","title":"Motivation"},{"location":"Architectural%20Decisions/architecturaldecision_rkrtQ4qXoSKt/#notes","text":"Expand all","title":"Notes"},{"location":"Architectural%20Decisions/architecturaldecision_rkrtQ4qXoSKt/#alternatives","text":"Extended Update Support Name Extended Update Support Description EUS Best Applied Contraindications non-EUS Name non-EUS Description non-EUS Best Applied Contraindications","title":"Alternatives"},{"location":"Architectural%20Decisions/architecturaldecision_rkrtQ4qXoSKt/#decision","text":"","title":"Decision"},{"location":"Architectural%20Decisions/architecturaldecision_rkrtQ4qXoSKt/#justification","text":"","title":"Justification"},{"location":"Architectural%20Decisions/architecturaldecision_rkrtQ4qXoSKt/#implications","text":"Commencing with OCS 4.8, Red Hat will denote all even numbered minor releases (eg 4.8, 4.10, 4.12) as Extended Update Support (EUS) releases.","title":"Implications"},{"location":"Architectural%20Decisions/architecturaldecision_rkrtQ4qXoSKt/#derived-requirements","text":"","title":"Derived Requirements"},{"location":"Architectural%20Decisions/architecturaldecision_rkrtQ4qXoSKt/#related-decisions","text":"","title":"Related Decisions"},{"location":"Architectural%20Decisions/architecturaldecision_ryf2QV5mjSYF/","text":"OCP-020 \u00b6 Name \u00b6 Persistent Storage Options for Applications Status \u00b6 proposed Last Update \u00b6 2022-03-08 Subject Area \u00b6 Storage Topic \u00b6 Workload storage Issue or Problem Statement \u00b6 Select the storage providers available to OpenShift, that match the application workloads and required replication / availability of the data. Note that various Cloud Paks support different storage providers, and different Cloud Providers / platforms have varying support for these storage providers. For this AD, please check against the latest Cloud Pak / workload documentation, as well as the platform documentation (ex: AWS) to ensure you have a supported combination. Assumptions \u00b6 Storage requirements vary from application to application. Development teams should select best storage option for their application. For the best etcd reliability, the lowest consistent latency storage technology is preferable. Documented Red Hat OpenShift Reference Architectures provides several potential options based on defined solution requirements. Motivation \u00b6 https://docs.openshift.com/container-platform/4.9/storage/understanding-persistent-storage.html https://ibm.seismic.com/Link/Content/DCMgg8H37dqfG8qPhMFg3XWH2BdG for more details on supported storage drivers for IBM Cloud Paks https://ibm.seismic.com/Link/Content/DCPWVTpXb4m228mMQ9QR2MPf72MV for hyperscaler options https://pages.github.ibm.com/UDF/UDF-Guide/t/T101385/ - other details on storage ADs Notes \u00b6 Expand all Alternatives \u00b6 Block Storage Name Block Storage Description Block storage does not support concurrent access. Databases tend to perform best with dedicated, block storage Best Applied Contraindications File Storage (NAS) Name File Storage (NAS) Description N/A Best Applied Contraindications Local Volumes Name Local Volumes Description Red Hat OpenShift PVs can be provisioned using local volumes[^18.2]. Local volumes are subject to the availability of the underlying node and are not suitable for all applications. Best Applied Contraindications NetApp Trident Name NetApp Trident Description N/A Best Applied Contraindications Object Storage Name Object Storage Description Object storage is not consumed through Red Hat OpenShift PVs/ PVCs. Object storage must have drivers built into the application and/or container. Best Applied Contraindications Portworx Name Portworx Description For IBM Cloud Paks, you need to check which storage solution is supported for each IBM Cloud Pak. For example the disaster recovery of IBM Cloud Pak for Data depends on Portworx Asynchronous replication. Some IBM Cloud Paks gives limited entitlements for some storage solutions. For example, IBM Cloud Pak for Integration gives entitlement to Storage Suite for IBM Cloud Paks (to be used for up to 12 TB of Red Hat OpenShift Data Foundation and an additional capacity of 12 TB across the rest of the storage offerings) while IBM Cloud Pak for Data gives entitlement for Portworx Essential (up to 128 VPC or 8 worker nodes whatever is lower). However, IBM doesn't recommend to use Portworx Essential on Production. Refer to the license document information for the specific terms and conditions related to these entitlements. Best Applied Contraindications Red Hat OpenShift Data Foundation Name Red Hat OpenShift Data Foundation Description Red Hat OpenShift Data Foundation is available as a persistent storage options as of Red Hat OpenShift V4.3[^18.3]. Red Hat OpenShift Data Foundation is completely integrated with Red Hat OpenShift Container Platform for deployment, management, and monitoring. Best Applied Contraindications vSphere Volumes Name vSphere Volumes Description vSphere Volumes provide RWO access-modes. So it cannot be used in case the application requires RWX. Best Applied Contraindications Decision \u00b6 Justification \u00b6 Implications \u00b6 Derived Requirements \u00b6 Related Decisions \u00b6","title":"Persistent Storage Options for Applications"},{"location":"Architectural%20Decisions/architecturaldecision_ryf2QV5mjSYF/#ocp-020","text":"","title":"OCP-020"},{"location":"Architectural%20Decisions/architecturaldecision_ryf2QV5mjSYF/#name","text":"Persistent Storage Options for Applications","title":"Name"},{"location":"Architectural%20Decisions/architecturaldecision_ryf2QV5mjSYF/#status","text":"proposed","title":"Status"},{"location":"Architectural%20Decisions/architecturaldecision_ryf2QV5mjSYF/#last-update","text":"2022-03-08","title":"Last Update"},{"location":"Architectural%20Decisions/architecturaldecision_ryf2QV5mjSYF/#subject-area","text":"Storage","title":"Subject Area"},{"location":"Architectural%20Decisions/architecturaldecision_ryf2QV5mjSYF/#topic","text":"Workload storage","title":"Topic"},{"location":"Architectural%20Decisions/architecturaldecision_ryf2QV5mjSYF/#issue-or-problem-statement","text":"Select the storage providers available to OpenShift, that match the application workloads and required replication / availability of the data. Note that various Cloud Paks support different storage providers, and different Cloud Providers / platforms have varying support for these storage providers. For this AD, please check against the latest Cloud Pak / workload documentation, as well as the platform documentation (ex: AWS) to ensure you have a supported combination.","title":"Issue or Problem Statement"},{"location":"Architectural%20Decisions/architecturaldecision_ryf2QV5mjSYF/#assumptions","text":"Storage requirements vary from application to application. Development teams should select best storage option for their application. For the best etcd reliability, the lowest consistent latency storage technology is preferable. Documented Red Hat OpenShift Reference Architectures provides several potential options based on defined solution requirements.","title":"Assumptions"},{"location":"Architectural%20Decisions/architecturaldecision_ryf2QV5mjSYF/#motivation","text":"https://docs.openshift.com/container-platform/4.9/storage/understanding-persistent-storage.html https://ibm.seismic.com/Link/Content/DCMgg8H37dqfG8qPhMFg3XWH2BdG for more details on supported storage drivers for IBM Cloud Paks https://ibm.seismic.com/Link/Content/DCPWVTpXb4m228mMQ9QR2MPf72MV for hyperscaler options https://pages.github.ibm.com/UDF/UDF-Guide/t/T101385/ - other details on storage ADs","title":"Motivation"},{"location":"Architectural%20Decisions/architecturaldecision_ryf2QV5mjSYF/#notes","text":"Expand all","title":"Notes"},{"location":"Architectural%20Decisions/architecturaldecision_ryf2QV5mjSYF/#alternatives","text":"Block Storage Name Block Storage Description Block storage does not support concurrent access. Databases tend to perform best with dedicated, block storage Best Applied Contraindications File Storage (NAS) Name File Storage (NAS) Description N/A Best Applied Contraindications Local Volumes Name Local Volumes Description Red Hat OpenShift PVs can be provisioned using local volumes[^18.2]. Local volumes are subject to the availability of the underlying node and are not suitable for all applications. Best Applied Contraindications NetApp Trident Name NetApp Trident Description N/A Best Applied Contraindications Object Storage Name Object Storage Description Object storage is not consumed through Red Hat OpenShift PVs/ PVCs. Object storage must have drivers built into the application and/or container. Best Applied Contraindications Portworx Name Portworx Description For IBM Cloud Paks, you need to check which storage solution is supported for each IBM Cloud Pak. For example the disaster recovery of IBM Cloud Pak for Data depends on Portworx Asynchronous replication. Some IBM Cloud Paks gives limited entitlements for some storage solutions. For example, IBM Cloud Pak for Integration gives entitlement to Storage Suite for IBM Cloud Paks (to be used for up to 12 TB of Red Hat OpenShift Data Foundation and an additional capacity of 12 TB across the rest of the storage offerings) while IBM Cloud Pak for Data gives entitlement for Portworx Essential (up to 128 VPC or 8 worker nodes whatever is lower). However, IBM doesn't recommend to use Portworx Essential on Production. Refer to the license document information for the specific terms and conditions related to these entitlements. Best Applied Contraindications Red Hat OpenShift Data Foundation Name Red Hat OpenShift Data Foundation Description Red Hat OpenShift Data Foundation is available as a persistent storage options as of Red Hat OpenShift V4.3[^18.3]. Red Hat OpenShift Data Foundation is completely integrated with Red Hat OpenShift Container Platform for deployment, management, and monitoring. Best Applied Contraindications vSphere Volumes Name vSphere Volumes Description vSphere Volumes provide RWO access-modes. So it cannot be used in case the application requires RWX. Best Applied Contraindications","title":"Alternatives"},{"location":"Architectural%20Decisions/architecturaldecision_ryf2QV5mjSYF/#decision","text":"","title":"Decision"},{"location":"Architectural%20Decisions/architecturaldecision_ryf2QV5mjSYF/#justification","text":"","title":"Justification"},{"location":"Architectural%20Decisions/architecturaldecision_ryf2QV5mjSYF/#implications","text":"","title":"Implications"},{"location":"Architectural%20Decisions/architecturaldecision_ryf2QV5mjSYF/#derived-requirements","text":"","title":"Derived Requirements"},{"location":"Architectural%20Decisions/architecturaldecision_ryf2QV5mjSYF/#related-decisions","text":"","title":"Related Decisions"},{"location":"Functional%20Requirements/functionalrequirement_BJxSIxl8KF/","text":"Automation tools \u00b6 ID \u00b6 FR-009 Name \u00b6 Automation tools Description \u00b6 Many tools are available for automation including Ansible, Chef, Puppet, etc. Impact \u00b6 Weight \u00b6 Low Owner \u00b6 Expand all Logical Components \u00b6 Review Date \u00b6","title":"Automation tools"},{"location":"Functional%20Requirements/functionalrequirement_BJxSIxl8KF/#automation-tools","text":"","title":"Automation tools"},{"location":"Functional%20Requirements/functionalrequirement_BJxSIxl8KF/#id","text":"FR-009","title":"ID"},{"location":"Functional%20Requirements/functionalrequirement_BJxSIxl8KF/#name","text":"Automation tools","title":"Name"},{"location":"Functional%20Requirements/functionalrequirement_BJxSIxl8KF/#description","text":"Many tools are available for automation including Ansible, Chef, Puppet, etc.","title":"Description"},{"location":"Functional%20Requirements/functionalrequirement_BJxSIxl8KF/#impact","text":"","title":"Impact"},{"location":"Functional%20Requirements/functionalrequirement_BJxSIxl8KF/#weight","text":"Low","title":"Weight"},{"location":"Functional%20Requirements/functionalrequirement_BJxSIxl8KF/#owner","text":"Expand all","title":"Owner"},{"location":"Functional%20Requirements/functionalrequirement_BJxSIxl8KF/#logical-components","text":"","title":"Logical Components"},{"location":"Functional%20Requirements/functionalrequirement_BJxSIxl8KF/#review-date","text":"","title":"Review Date"},{"location":"Functional%20Requirements/functionalrequirement_H1PRQV57iSFY/","text":"Cloud integration \u00b6 ID \u00b6 FR-004 Name \u00b6 Cloud integration Description \u00b6 OpenShift supports an integrated container registry, the Quay container registry, or public registries which allow users to pull down container images from other places. In addition, building container images on OpenShift platform allows portability to other clouds such as Google container engine Impact \u00b6 Weight \u00b6 Low Owner \u00b6 Expand all Logical Components \u00b6 Review Date \u00b6","title":"Cloud integration"},{"location":"Functional%20Requirements/functionalrequirement_H1PRQV57iSFY/#cloud-integration","text":"","title":"Cloud integration"},{"location":"Functional%20Requirements/functionalrequirement_H1PRQV57iSFY/#id","text":"FR-004","title":"ID"},{"location":"Functional%20Requirements/functionalrequirement_H1PRQV57iSFY/#name","text":"Cloud integration","title":"Name"},{"location":"Functional%20Requirements/functionalrequirement_H1PRQV57iSFY/#description","text":"OpenShift supports an integrated container registry, the Quay container registry, or public registries which allow users to pull down container images from other places. In addition, building container images on OpenShift platform allows portability to other clouds such as Google container engine","title":"Description"},{"location":"Functional%20Requirements/functionalrequirement_H1PRQV57iSFY/#impact","text":"","title":"Impact"},{"location":"Functional%20Requirements/functionalrequirement_H1PRQV57iSFY/#weight","text":"Low","title":"Weight"},{"location":"Functional%20Requirements/functionalrequirement_H1PRQV57iSFY/#owner","text":"Expand all","title":"Owner"},{"location":"Functional%20Requirements/functionalrequirement_H1PRQV57iSFY/#logical-components","text":"","title":"Logical Components"},{"location":"Functional%20Requirements/functionalrequirement_H1PRQV57iSFY/#review-date","text":"","title":"Review Date"},{"location":"Functional%20Requirements/functionalrequirement_HJU0mV5XsSKt/","text":"Policy management \u00b6 ID \u00b6 FR-003 Name \u00b6 Policy management Description \u00b6 Impact \u00b6 OpenShift allows administrators to configure role-based authorization to manage the system resources such as compute, networking, and storage, and application workloads. Weight \u00b6 Low Owner \u00b6 Expand all Logical Components \u00b6 Review Date \u00b6","title":"Policy management"},{"location":"Functional%20Requirements/functionalrequirement_HJU0mV5XsSKt/#policy-management","text":"","title":"Policy management"},{"location":"Functional%20Requirements/functionalrequirement_HJU0mV5XsSKt/#id","text":"FR-003","title":"ID"},{"location":"Functional%20Requirements/functionalrequirement_HJU0mV5XsSKt/#name","text":"Policy management","title":"Name"},{"location":"Functional%20Requirements/functionalrequirement_HJU0mV5XsSKt/#description","text":"","title":"Description"},{"location":"Functional%20Requirements/functionalrequirement_HJU0mV5XsSKt/#impact","text":"OpenShift allows administrators to configure role-based authorization to manage the system resources such as compute, networking, and storage, and application workloads.","title":"Impact"},{"location":"Functional%20Requirements/functionalrequirement_HJU0mV5XsSKt/#weight","text":"Low","title":"Weight"},{"location":"Functional%20Requirements/functionalrequirement_HJU0mV5XsSKt/#owner","text":"Expand all","title":"Owner"},{"location":"Functional%20Requirements/functionalrequirement_HJU0mV5XsSKt/#logical-components","text":"","title":"Logical Components"},{"location":"Functional%20Requirements/functionalrequirement_HJU0mV5XsSKt/#review-date","text":"","title":"Review Date"},{"location":"Functional%20Requirements/functionalrequirement_HJg6weg8KY/","text":"CI/CD tools \u00b6 ID \u00b6 FR-007 Name \u00b6 CI/CD tools Description \u00b6 A variety of open source and commercial tools are available such as Jenkins build server and integration with GitHub source code repository to implement CI/CD pipelines Impact \u00b6 Weight \u00b6 Low Owner \u00b6 Expand all Logical Components \u00b6 Review Date \u00b6","title":"CI/CD tools"},{"location":"Functional%20Requirements/functionalrequirement_HJg6weg8KY/#cicd-tools","text":"","title":"CI/CD tools"},{"location":"Functional%20Requirements/functionalrequirement_HJg6weg8KY/#id","text":"FR-007","title":"ID"},{"location":"Functional%20Requirements/functionalrequirement_HJg6weg8KY/#name","text":"CI/CD tools","title":"Name"},{"location":"Functional%20Requirements/functionalrequirement_HJg6weg8KY/#description","text":"A variety of open source and commercial tools are available such as Jenkins build server and integration with GitHub source code repository to implement CI/CD pipelines","title":"Description"},{"location":"Functional%20Requirements/functionalrequirement_HJg6weg8KY/#impact","text":"","title":"Impact"},{"location":"Functional%20Requirements/functionalrequirement_HJg6weg8KY/#weight","text":"Low","title":"Weight"},{"location":"Functional%20Requirements/functionalrequirement_HJg6weg8KY/#owner","text":"Expand all","title":"Owner"},{"location":"Functional%20Requirements/functionalrequirement_HJg6weg8KY/#logical-components","text":"","title":"Logical Components"},{"location":"Functional%20Requirements/functionalrequirement_HJg6weg8KY/#review-date","text":"","title":"Review Date"},{"location":"Functional%20Requirements/functionalrequirement_Hkx58gl8KK/","text":"Command line tools \u00b6 ID \u00b6 FR-006 Name \u00b6 Command line tools Description \u00b6 OpenShift container platform provides CLI tools for almost all cluster operations and for container image operations. In addition, administrators can use Kubernetes CLI tools to directly access its services Impact \u00b6 Weight \u00b6 Low Owner \u00b6 Expand all Logical Components \u00b6 Review Date \u00b6","title":"Command line tools"},{"location":"Functional%20Requirements/functionalrequirement_Hkx58gl8KK/#command-line-tools","text":"","title":"Command line tools"},{"location":"Functional%20Requirements/functionalrequirement_Hkx58gl8KK/#id","text":"FR-006","title":"ID"},{"location":"Functional%20Requirements/functionalrequirement_Hkx58gl8KK/#name","text":"Command line tools","title":"Name"},{"location":"Functional%20Requirements/functionalrequirement_Hkx58gl8KK/#description","text":"OpenShift container platform provides CLI tools for almost all cluster operations and for container image operations. In addition, administrators can use Kubernetes CLI tools to directly access its services","title":"Description"},{"location":"Functional%20Requirements/functionalrequirement_Hkx58gl8KK/#impact","text":"","title":"Impact"},{"location":"Functional%20Requirements/functionalrequirement_Hkx58gl8KK/#weight","text":"Low","title":"Weight"},{"location":"Functional%20Requirements/functionalrequirement_Hkx58gl8KK/#owner","text":"Expand all","title":"Owner"},{"location":"Functional%20Requirements/functionalrequirement_Hkx58gl8KK/#logical-components","text":"","title":"Logical Components"},{"location":"Functional%20Requirements/functionalrequirement_Hkx58gl8KK/#review-date","text":"","title":"Review Date"},{"location":"Functional%20Requirements/functionalrequirement_S1xZHel8tY/","text":"Network and Storage virtualization \u00b6 ID \u00b6 FR-005 Name \u00b6 Network and Storage virtualization Description \u00b6 Through built-in OpenShift networking and storage services for Kubernetes, users can access these abstracted resources through their container applications. In addition, OpenShift provides network infrastructure services through open protocols such as VXLAN. A variety of storage facilities can be exposed to container applications via the Kubernetes persistent volume plug-ins and stateful sets Impact \u00b6 Weight \u00b6 Low Owner \u00b6 Expand all Logical Components \u00b6 Review Date \u00b6","title":"Network and Storage virtualization"},{"location":"Functional%20Requirements/functionalrequirement_S1xZHel8tY/#network-and-storage-virtualization","text":"","title":"Network and Storage virtualization"},{"location":"Functional%20Requirements/functionalrequirement_S1xZHel8tY/#id","text":"FR-005","title":"ID"},{"location":"Functional%20Requirements/functionalrequirement_S1xZHel8tY/#name","text":"Network and Storage virtualization","title":"Name"},{"location":"Functional%20Requirements/functionalrequirement_S1xZHel8tY/#description","text":"Through built-in OpenShift networking and storage services for Kubernetes, users can access these abstracted resources through their container applications. In addition, OpenShift provides network infrastructure services through open protocols such as VXLAN. A variety of storage facilities can be exposed to container applications via the Kubernetes persistent volume plug-ins and stateful sets","title":"Description"},{"location":"Functional%20Requirements/functionalrequirement_S1xZHel8tY/#impact","text":"","title":"Impact"},{"location":"Functional%20Requirements/functionalrequirement_S1xZHel8tY/#weight","text":"Low","title":"Weight"},{"location":"Functional%20Requirements/functionalrequirement_S1xZHel8tY/#owner","text":"Expand all","title":"Owner"},{"location":"Functional%20Requirements/functionalrequirement_S1xZHel8tY/#logical-components","text":"","title":"Logical Components"},{"location":"Functional%20Requirements/functionalrequirement_S1xZHel8tY/#review-date","text":"","title":"Review Date"},{"location":"Functional%20Requirements/functionalrequirement_SkHRmNcmjSKK/","text":"User self-service \u00b6 ID \u00b6 FR-002 Name \u00b6 User self-service Description \u00b6 OpenShift supports a Web based UI console that allows users to login and manage their containerized workloads. Impact \u00b6 Weight \u00b6 Low Owner \u00b6 Expand all Logical Components \u00b6 Review Date \u00b6","title":"User self-service"},{"location":"Functional%20Requirements/functionalrequirement_SkHRmNcmjSKK/#user-self-service","text":"","title":"User self-service"},{"location":"Functional%20Requirements/functionalrequirement_SkHRmNcmjSKK/#id","text":"FR-002","title":"ID"},{"location":"Functional%20Requirements/functionalrequirement_SkHRmNcmjSKK/#name","text":"User self-service","title":"Name"},{"location":"Functional%20Requirements/functionalrequirement_SkHRmNcmjSKK/#description","text":"OpenShift supports a Web based UI console that allows users to login and manage their containerized workloads.","title":"Description"},{"location":"Functional%20Requirements/functionalrequirement_SkHRmNcmjSKK/#impact","text":"","title":"Impact"},{"location":"Functional%20Requirements/functionalrequirement_SkHRmNcmjSKK/#weight","text":"Low","title":"Weight"},{"location":"Functional%20Requirements/functionalrequirement_SkHRmNcmjSKK/#owner","text":"Expand all","title":"Owner"},{"location":"Functional%20Requirements/functionalrequirement_SkHRmNcmjSKK/#logical-components","text":"","title":"Logical Components"},{"location":"Functional%20Requirements/functionalrequirement_SkHRmNcmjSKK/#review-date","text":"","title":"Review Date"},{"location":"Functional%20Requirements/functionalrequirement_SyEAQ49QjBYK/","text":"Container orchestration services \u00b6 ID \u00b6 FR-001 Name \u00b6 Container orchestration services Description \u00b6 Red Hat OpenShift Container Platform is designed to run workload container images at scale using the Kubernetes container orchestrator, Docker container runtime, and container runtime interface (CRI-O). Impact \u00b6 Weight \u00b6 Low Owner \u00b6 Expand all Logical Components \u00b6 Review Date \u00b6","title":"Container orchestration services"},{"location":"Functional%20Requirements/functionalrequirement_SyEAQ49QjBYK/#container-orchestration-services","text":"","title":"Container orchestration services"},{"location":"Functional%20Requirements/functionalrequirement_SyEAQ49QjBYK/#id","text":"FR-001","title":"ID"},{"location":"Functional%20Requirements/functionalrequirement_SyEAQ49QjBYK/#name","text":"Container orchestration services","title":"Name"},{"location":"Functional%20Requirements/functionalrequirement_SyEAQ49QjBYK/#description","text":"Red Hat OpenShift Container Platform is designed to run workload container images at scale using the Kubernetes container orchestrator, Docker container runtime, and container runtime interface (CRI-O).","title":"Description"},{"location":"Functional%20Requirements/functionalrequirement_SyEAQ49QjBYK/#impact","text":"","title":"Impact"},{"location":"Functional%20Requirements/functionalrequirement_SyEAQ49QjBYK/#weight","text":"Low","title":"Weight"},{"location":"Functional%20Requirements/functionalrequirement_SyEAQ49QjBYK/#owner","text":"Expand all","title":"Owner"},{"location":"Functional%20Requirements/functionalrequirement_SyEAQ49QjBYK/#logical-components","text":"","title":"Logical Components"},{"location":"Functional%20Requirements/functionalrequirement_SyEAQ49QjBYK/#review-date","text":"","title":"Review Date"},{"location":"Functional%20Requirements/functionalrequirement_SygxBgeItK/","text":"Open source tools \u00b6 ID \u00b6 FR-008 Name \u00b6 Open source tools Description \u00b6 Red Hat container registry and other open container registries such as dockerhub are available to OpenShift users to access open source tools such as nginx, apache httpd, mysql, postgres, cassandra, etc Impact \u00b6 Weight \u00b6 Low Owner \u00b6 Expand all Logical Components \u00b6 Review Date \u00b6","title":"Open source tools"},{"location":"Functional%20Requirements/functionalrequirement_SygxBgeItK/#open-source-tools","text":"","title":"Open source tools"},{"location":"Functional%20Requirements/functionalrequirement_SygxBgeItK/#id","text":"FR-008","title":"ID"},{"location":"Functional%20Requirements/functionalrequirement_SygxBgeItK/#name","text":"Open source tools","title":"Name"},{"location":"Functional%20Requirements/functionalrequirement_SygxBgeItK/#description","text":"Red Hat container registry and other open container registries such as dockerhub are available to OpenShift users to access open source tools such as nginx, apache httpd, mysql, postgres, cassandra, etc","title":"Description"},{"location":"Functional%20Requirements/functionalrequirement_SygxBgeItK/#impact","text":"","title":"Impact"},{"location":"Functional%20Requirements/functionalrequirement_SygxBgeItK/#weight","text":"Low","title":"Weight"},{"location":"Functional%20Requirements/functionalrequirement_SygxBgeItK/#owner","text":"Expand all","title":"Owner"},{"location":"Functional%20Requirements/functionalrequirement_SygxBgeItK/#logical-components","text":"","title":"Logical Components"},{"location":"Functional%20Requirements/functionalrequirement_SygxBgeItK/#review-date","text":"","title":"Review Date"},{"location":"IT%20System%20View/aoditsystem_B1r5OjHFF/","text":"Diagram \u00b6 Name \u00b6 03 On-premises cluster Description \u00b6 Cluster is deployed in one availability zone. Number of nodes: 3 master1 nodes 3 worker nodes 3 infrastructure nodes (Elasticsearch requires 3 instances, one per node) 3 storage nodes Note: The number of nodes and their sizing can be adjusted depending on the workload target. See the capacity sizing chapter. Typical use cases: Development Test Integration Production with limited SLA Element \u00b6 Expand all Actor \u00b6 External Storage Name External Storage Description Storage for persistent volumes is provided by an external tier solution. Not embedded into the Red Hat OpenShift Container Platform cluster. It could be, but not limited to: NFS server (not recommended for production) VMware\u00ae Vsphere\u00ae Volumes https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture Type IT System Generic Group Subsystem \u00b6 Compute Plane Name Compute Plane Description A physical server that acts as a hypervisor and contains the processing capabilities required to run virtual machines in the environment. A basic RHOSP environment requires at least one Compute node. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.0/html/director_installation_and_usage/planning-your-overcloud Control Plane Name Control Plane Description The control plane, which is composed of master machines, manages the OpenShift Container Platform cluster. https://docs.openshift.com/container-platform/4.1/architecture/control-plane.html Infrastructure Plane Name Infrastructure Plane Description You can use infrastructure machine sets to create machines that host only infrastructure components, such as the default router, the integrated container image registry, and the components for cluster metrics and monitoring. These infrastructure machines are not counted toward the total number of subscriptions that are required to run the environment. https://docs.openshift.com/container-platform/4.7/machine_management/creating-infrastructure-machinesets.html Red Hat OpenShift Container Platform Name Red Hat OpenShift Container Platform Description Red Hat\u00ae OpenShift\u00ae offers a consistent hybrid cloud foundation for building and scaling containerized applications. Benefit from streamlined platform installation and upgrades from one of the enterprise Kubernetes leaders. https://cloud.redhat.com/products/container-platform Storage Plane Name Storage Plane Description It provides file, block, and object storage classes, enabling a wide range of data modalities and workloads, including: Data at rest, such as databases and data warehouses. Data in motion, automating data pipelines. Data in action, providing services for continuous deployment models, analytics, artificial intelligence (AI), and machine learning (ML). https://www.redhat.com/en/resources/openshift-data-foundation-datasheet Location \u00b6 Cloud Name Cloud Description Logical Connection \u00b6 Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Logical Node \u00b6 Compute node 1 Name Compute node 1 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 2 Name Compute node 2 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 3 Name Compute node 3 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements container image Compute plane load balancer Name Compute plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_38v3qxufxWL network routing Control plane load balancer Name Control plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_37sFycoSa3m network routing Control Plane node 1 Name Control Plane node 1 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control plane node sizing Control Plane Deployment Topology Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 2 Name Control Plane node 2 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 3 Name Control Plane node 3 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability application runtime Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Infra node 1 Name Infra node 1 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 2 Name Infra node 2 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 3 Name Infra node 3 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 1 Name Storage node 1 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 2 Name Storage node 2 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Persistent Storage Options for Applications Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 3 Name Storage node 3 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Storage Technology for Metrics & Logging Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform","title":"03 On-premises cluster"},{"location":"IT%20System%20View/aoditsystem_B1r5OjHFF/#diagram","text":"","title":"Diagram"},{"location":"IT%20System%20View/aoditsystem_B1r5OjHFF/#name","text":"03 On-premises cluster","title":"Name"},{"location":"IT%20System%20View/aoditsystem_B1r5OjHFF/#description","text":"Cluster is deployed in one availability zone. Number of nodes: 3 master1 nodes 3 worker nodes 3 infrastructure nodes (Elasticsearch requires 3 instances, one per node) 3 storage nodes Note: The number of nodes and their sizing can be adjusted depending on the workload target. See the capacity sizing chapter. Typical use cases: Development Test Integration Production with limited SLA","title":"Description"},{"location":"IT%20System%20View/aoditsystem_B1r5OjHFF/#element","text":"Expand all","title":"Element"},{"location":"IT%20System%20View/aoditsystem_B1r5OjHFF/#actor","text":"External Storage Name External Storage Description Storage for persistent volumes is provided by an external tier solution. Not embedded into the Red Hat OpenShift Container Platform cluster. It could be, but not limited to: NFS server (not recommended for production) VMware\u00ae Vsphere\u00ae Volumes https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture Type IT System Generic Group","title":"Actor"},{"location":"IT%20System%20View/aoditsystem_B1r5OjHFF/#subsystem","text":"Compute Plane Name Compute Plane Description A physical server that acts as a hypervisor and contains the processing capabilities required to run virtual machines in the environment. A basic RHOSP environment requires at least one Compute node. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.0/html/director_installation_and_usage/planning-your-overcloud Control Plane Name Control Plane Description The control plane, which is composed of master machines, manages the OpenShift Container Platform cluster. https://docs.openshift.com/container-platform/4.1/architecture/control-plane.html Infrastructure Plane Name Infrastructure Plane Description You can use infrastructure machine sets to create machines that host only infrastructure components, such as the default router, the integrated container image registry, and the components for cluster metrics and monitoring. These infrastructure machines are not counted toward the total number of subscriptions that are required to run the environment. https://docs.openshift.com/container-platform/4.7/machine_management/creating-infrastructure-machinesets.html Red Hat OpenShift Container Platform Name Red Hat OpenShift Container Platform Description Red Hat\u00ae OpenShift\u00ae offers a consistent hybrid cloud foundation for building and scaling containerized applications. Benefit from streamlined platform installation and upgrades from one of the enterprise Kubernetes leaders. https://cloud.redhat.com/products/container-platform Storage Plane Name Storage Plane Description It provides file, block, and object storage classes, enabling a wide range of data modalities and workloads, including: Data at rest, such as databases and data warehouses. Data in motion, automating data pipelines. Data in action, providing services for continuous deployment models, analytics, artificial intelligence (AI), and machine learning (ML). https://www.redhat.com/en/resources/openshift-data-foundation-datasheet","title":"Subsystem"},{"location":"IT%20System%20View/aoditsystem_B1r5OjHFF/#location","text":"Cloud Name Cloud Description","title":"Location"},{"location":"IT%20System%20View/aoditsystem_B1r5OjHFF/#logical-connection","text":"Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description","title":"Logical Connection"},{"location":"IT%20System%20View/aoditsystem_B1r5OjHFF/#logical-node","text":"Compute node 1 Name Compute node 1 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 2 Name Compute node 2 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 3 Name Compute node 3 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements container image Compute plane load balancer Name Compute plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_38v3qxufxWL network routing Control plane load balancer Name Control plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_37sFycoSa3m network routing Control Plane node 1 Name Control Plane node 1 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control plane node sizing Control Plane Deployment Topology Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 2 Name Control Plane node 2 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 3 Name Control Plane node 3 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability application runtime Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Infra node 1 Name Infra node 1 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 2 Name Infra node 2 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 3 Name Infra node 3 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 1 Name Storage node 1 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 2 Name Storage node 2 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Persistent Storage Options for Applications Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 3 Name Storage node 3 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Storage Technology for Metrics & Logging Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform","title":"Logical Node"},{"location":"IT%20System%20View/aoditsystem_By7NIorFt/","text":"Diagram \u00b6 Name \u00b6 02 Three nodes cluster Description \u00b6 This reference architecture is available since Red Hat OpenShift Container Platform 4.5. Currently is only supported for deployment on bare metal. Masters1 and workers are colocated on the same physical nodes. The typical use case is: Deployment with limited small footprint requirement Element \u00b6 Expand all Actor \u00b6 Subsystem \u00b6 Red Hat OpenShift Container Platform Name Red Hat OpenShift Container Platform Description Red Hat\u00ae OpenShift\u00ae offers a consistent hybrid cloud foundation for building and scaling containerized applications. Benefit from streamlined platform installation and upgrades from one of the enterprise Kubernetes leaders. https://cloud.redhat.com/products/container-platform Location \u00b6 Cloud Name Cloud Description Logical Connection \u00b6 Name Description Name Description Name Description Name Description Name Description Logical Node \u00b6 Load balance Name Load balance Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 02 Three nodes cluster Related Elements Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment network routing SYS_DU_38nvGc6SBOL Node 1 Name Node 1 Description Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 02 Three nodes cluster Related Elements container image Node 2 Name Node 2 Description Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 02 Three nodes cluster Related Elements container image Node 3 Name Node 3 Description Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 02 Three nodes cluster Related Elements container image","title":"02 Three nodes cluster"},{"location":"IT%20System%20View/aoditsystem_By7NIorFt/#diagram","text":"","title":"Diagram"},{"location":"IT%20System%20View/aoditsystem_By7NIorFt/#name","text":"02 Three nodes cluster","title":"Name"},{"location":"IT%20System%20View/aoditsystem_By7NIorFt/#description","text":"This reference architecture is available since Red Hat OpenShift Container Platform 4.5. Currently is only supported for deployment on bare metal. Masters1 and workers are colocated on the same physical nodes. The typical use case is: Deployment with limited small footprint requirement","title":"Description"},{"location":"IT%20System%20View/aoditsystem_By7NIorFt/#element","text":"Expand all","title":"Element"},{"location":"IT%20System%20View/aoditsystem_By7NIorFt/#actor","text":"","title":"Actor"},{"location":"IT%20System%20View/aoditsystem_By7NIorFt/#subsystem","text":"Red Hat OpenShift Container Platform Name Red Hat OpenShift Container Platform Description Red Hat\u00ae OpenShift\u00ae offers a consistent hybrid cloud foundation for building and scaling containerized applications. Benefit from streamlined platform installation and upgrades from one of the enterprise Kubernetes leaders. https://cloud.redhat.com/products/container-platform","title":"Subsystem"},{"location":"IT%20System%20View/aoditsystem_By7NIorFt/#location","text":"Cloud Name Cloud Description","title":"Location"},{"location":"IT%20System%20View/aoditsystem_By7NIorFt/#logical-connection","text":"Name Description Name Description Name Description Name Description Name Description","title":"Logical Connection"},{"location":"IT%20System%20View/aoditsystem_By7NIorFt/#logical-node","text":"Load balance Name Load balance Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 02 Three nodes cluster Related Elements Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment network routing SYS_DU_38nvGc6SBOL Node 1 Name Node 1 Description Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 02 Three nodes cluster Related Elements container image Node 2 Name Node 2 Description Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 02 Three nodes cluster Related Elements container image Node 3 Name Node 3 Description Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 02 Three nodes cluster Related Elements container image","title":"Logical Node"},{"location":"IT%20System%20View/aoditsystem_BydIlEc7sHFF/","text":"Diagram \u00b6 Name \u00b6 Deployment View Description \u00b6 Element \u00b6 Expand all Actor \u00b6 Hybrid Cloud Name Hybrid Cloud Description Hybrid cloud integrates public cloud services, private cloud services and on-premises infrastructure and provides orchestration, management and application portability across all three. The result is a single, unified and flexible distributed computing environment where an organization can run and scale its traditional or cloud-native workloads on the most appropriate computing model. Hybrid multicloud is hybrid cloud that includes public cloud services from more than one cloud service provider. By enabling a company to * combine best-of-breed cloud services and functionality from multiple cloud computing vendors * choose the optimal cloud computing environment for each workload, and * move workloads freely between public and private cloud as circumstances change hybrid cloud - and particularly hybrid multicloud - helps a company achieve its technical and business objectives more effectively and cost-efficiently than public cloud or private cloud alone. In fact, according to one recent study, companies derive up to 2.5x the value from hybrid cloud than from a single-cloud, single-vendor approach. https://www.ibm.com/cloud/learn/hybrid-cloud Type IT System Generic Group IBM Power Name IBM Power Description IBM Power is specifically architected for data rich applications and workloads, delivering enterprise-class compute with the flexibility of hybrid cloud deployment \u2013 traditional on premise, private cloud and public cloud. https://www.ibm.com/partnerworld/systems/power Type IT System Generic Group IBM Z Name IBM Z Description IBM Z is a family name that\u2019s used by IBM for all of its z/Architecture mainframe computers, beginning with the z900 released in 2000 to today\u2019s IBM z15 released in September 2019. (The \u201cZ\u201d stands for \u201czero downtime,\u201d which reflects the reliability of the system.) IBM Z uses the IBM S/390 chip architecture. Data that\u2019s handled by IBM Z is encrypted by dedicated encryption processors over the complete ecosystem, and encryption keys are handled with the most secure hardware security module (HSM) in the industry \u2014 which means it is highly secured. https://developer.ibm.com/articles/what-is-ibm-z/ Type IT System Generic Group Private Cloud / On-Premises Name Private Cloud / On-Premises Description Private cloud (also known as an internal cloud or corporate cloud) is a cloud computing environment in which all hardware and software resources are dedicated exclusively to, and accessible only by, a single customer. Private cloud combines many of the benefits of cloud computing\u2014including elasticity, scalability, and ease of service delivery\u2014with the access control, security, and resource customization of on-premises infrastructure. https://www.ibm.com/cloud/learn/introduction-to-private-cloud Type IT System Generic Group Public Cloud Name Public Cloud Description The rise and adoption of public cloud services is one of the most important shifts in the history of enterprise computing. A public cloud is a type of cloud computing in which a third-party service provider makes computing resources\u2014which can include anything from ready-to-use software applications, to individual virtual machines (VMs), to complete enterprise-grade infrastructures and development platforms\u2014available to users over the public Internet. These resources might be accessible for free, or access might be sold according to subscription-based or pay-per-usage pricing models. https://www.ibm.com/cloud/learn/public-cloud Type IT System Generic Group Subsystem \u00b6 OpenShift Worker Nodes [N] Name OpenShift Worker Nodes [N] Description In a Kubernetes cluster, the worker nodes are where the actual workloads requested by Kubernetes users run and are managed. The worker nodes advertise their capacity and the scheduler, which is part of the master services, determines on which nodes to start containers and Pods. Important services run on each worker node, including CRI-O, which is the container engine, Kubelet, which is the service that accepts and fulfills requests for running and stopping container workloads, and a service proxy, which manages communication for pods across workers. https://docs.openshift.com/container-platform/4.1/architecture/control-plane.html Cloud Pak for Business Automation Name Cloud Pak for Business Automation Description IBM Cloud Pak for Business Automation is a set of integrated market-leading software designed to help you solve your toughest operational challenges. With AI-generated recommendations, analytics to measure impact, and business-friendly low-code tooling, we've helped clients reduce the amount of time spent on manual processes by 90% and decreased customer wait times by half. You can now better comply with regulations to reduce risk and save thousands of work hours that can then be reallocated to higher value work. https://www.ibm.com/cloud/cloud-pak-for-business-automation Cloud Pak for Data Name Cloud Pak for Data Description IBM\u00ae Cloud Pak for Data is a cloud-native solution that enables you to put your data to work quickly and efficiently. Your enterprise has lots of data. You need to use your data to generate meaningful insights that can help you avoid problems and reach your goals. But your data is useless if you can't trust it or access it. Cloud Pak for Data lets you do both by enabling you to connect to your data, govern it, find it, and use it for analysis. Cloud Pak for Data also enables all of your data users to collaborate from a single, unified interface that supports many services that are designed to work together. Cloud Pak for Data fosters productivity by enabling users to find existing data or to request access to data. With modern tools that facilitate analytics and remove barriers to collaboration, users can spend less time finding data and more time using it effectively. And with Cloud Pak for Data, your IT department doesn't need to deploy multiple applications on disparate systems and then try to figure out how to get them to connect. https://www.ibm.com/support/producthub/icpdata/docs/content/SSQNUZ_latest/cpd/overview/overview.html Cloud Pak for Integration Name Cloud Pak for Integration Description IBM Cloud Pak for Integration is the solution to deliver both speed and quality, improving your integrations and your applications by extending AI-powered automation across the integration lifecycle. With it, companies are able to speed their integration development by 300%, reduce costs of integration by over 33% and increase overall operational efficiency while maintaining enhanced security, governance and availability. https://www.ibm.com/downloads/cas/M103EDOO Customer Container Workload Name Customer Container Workload Description OpenShift Control Plane Name OpenShift Control Plane Description The control plane, which is composed of master machines, manages the OpenShift Container Platform cluster. The control plane machines manage workloads on the compute machines, which are also known as worker machines. The cluster itself manages all upgrades to the machines by the actions of the Cluster Version Operator, the Machine Config Operator, and set of individual Operators. https://docs.openshift.com/container-platform/4.1/architecture/control-plane.html WebSphere Hybrid Edition Name WebSphere Hybrid Edition Description IBM\u00ae WebSphere\u00ae Hybrid Edition is designed for on-premises, cloud, and hybrid cloud deployments and includes all of the major IBM WebSphere Application Server editions: * IBM WebSphere Application Server Network Deployment * IBM WebSphere Application Server * IBM WebSphere Application Server Liberty Core IBM WebSphere Hybrid Edition is the solution of choice for existing on-premises WebSphere Application Server deployments, which are the WebSphere deployments that have powered a good portion of the world's economy for the last 20 years. With IBM WebSphere Hybrid Edition 5.0, existing applications can remain in place or make a gradual transition to the cloud. IBM WebSphere Hybrid Edition gives you the flexibility to move between WebSphere editions over time without additional entitlements. https://www.ibm.com/docs/en/websphere-hybrid?topic=overview Location \u00b6 Enterprise Applications Name Enterprise Applications Description It is a prevalent scenario to propose a hybrid solution to the customer. This is mainly because there are customer's monolithic applications hosted on regular virtual machines or regular physical systems. The following are examples of IBM products that are not containerized and can be hosted on traditional virtual machines: IBM WebSphere Network Deployment IBM Security Access Manager Another example of non-containerized enterprise systems is some traditional database used by the customer. Hosting Providers Name Hosting Providers Description Selected Hosting Provider Name Selected Hosting Provider Description Logical Connection \u00b6 Logical Node \u00b6 App Connect [N] Name App Connect [N] Description Type Primary Capability network routing Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams Deployment View Related Elements network routing App Microservices [N] Name App Microservices [N] Description Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Deployment View Related Elements container image Control Plane Nodes [3] Name Control Plane Nodes [3] Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Deployment View Related Elements container image Dedicated Storage Nodes [N] Name Dedicated Storage Nodes [N] Description You need to design the storage solution based on your workload requirements and infrastructure design. You should evaluate all the storage options that satisfy the requirements, i.e. IBM Cloud Block Storage, Red Hat OpenShift Container Storage, Portworx, NetApp, .. or others. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams Deployment View Related Elements container image IBM Security Access Manager Name IBM Security Access Manager Description IBM Security Access Manager is a complete authorization and network security policy management solution. It provides end-to-end protection of resources over geographically dispersed intranets and extranets. In addition to state-of-the-art security policy management, IBM Security Access Manager provides authentication, authorization, data security, and centralized resource management capabilities. IBM Security Access Manager offers the following features: * AuthenticationProvides a wide range of built-in authenticators and supports external authenticators. * AuthorizationProvides permit and deny decisions for protected resources requests in the secure domain through the authorization API. * Data security and centralized resource managementManages secure access to private internal network-based resources by using the public Internet's broad connectivity and ease of use with a corporate firewall system. https://www.ibm.com/docs/en/sva/9.0.4?topic=overview-introduction-security-access-manager Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams Deployment View Related Elements Infrastructure Nodes [3] Name Infrastructure Nodes [3] Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Deployment View Related Elements container image MQ [N] Name MQ [N] Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams Deployment View Related Elements ODM [N] Name ODM [N] Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams Deployment View Related Elements Traditional Database Name Traditional Database Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams Deployment View Related Elements Watson Assistant [N] Name Watson Assistant [N] Description Watson Assistant lets you build conversational interfaces into any application, device, or channel. Add a natural language interface to your application to automate interactions with your end users. Common applications include virtual agents and chat bots that can integrate and communicate on any channel or device. Train Watson Conversation service through an easy-to-use web application, designed so you can quickly build natural conversation flows between your apps and users, and deploy scalable, cost effective solutions. https://cloud.ibm.com/catalog/services/watson-assistant#about Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams Deployment View Related Elements container image WebShpere Network Deployment Name WebShpere Network Deployment Description WebSphere Application Server Network Deployment provides a flexible, secure server runtime environment for large-scale and mission-critical application deployments. It is available on premises or for public, private, or hybrid cloud. Whether you are seeking to reduce costs, unlock new value from your investment in WebSphere, or speed time to market, this product has the correct fit for every business need. WebSphere Application Server Network Deployment is a bundled application. For more information about bundled applications, see Bundled applications. https://www.ibm.com/docs/en/cloud-private/3.2.0?topic=paks-websphere-application-server-network-deployment Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams Deployment View Related Elements WebSphere Liberty Name WebSphere Liberty Description IBM\u00ae WebSphere\u00ae Liberty is a Java EE application server with a low-overhead Java runtime environment for cloud-native apps and microservices. WebSphere Liberty was created to be highly composable, start fast, use less memory and scale easily. Using the open-sourced IBM Open Liberty (link resides outside IBM) code base provides low-cost experimentation, customization and seamless migration from open source to production. https://www.ibm.com/cloud/websphere-liberty#:~:text=IBM%C2%AE%20WebSphere%C2%AE%20Liberty,Using%20the%20open%2Dsourced Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams Deployment View Related Elements","title":"Deployment View"},{"location":"IT%20System%20View/aoditsystem_BydIlEc7sHFF/#diagram","text":"","title":"Diagram"},{"location":"IT%20System%20View/aoditsystem_BydIlEc7sHFF/#name","text":"Deployment View","title":"Name"},{"location":"IT%20System%20View/aoditsystem_BydIlEc7sHFF/#description","text":"","title":"Description"},{"location":"IT%20System%20View/aoditsystem_BydIlEc7sHFF/#element","text":"Expand all","title":"Element"},{"location":"IT%20System%20View/aoditsystem_BydIlEc7sHFF/#actor","text":"Hybrid Cloud Name Hybrid Cloud Description Hybrid cloud integrates public cloud services, private cloud services and on-premises infrastructure and provides orchestration, management and application portability across all three. The result is a single, unified and flexible distributed computing environment where an organization can run and scale its traditional or cloud-native workloads on the most appropriate computing model. Hybrid multicloud is hybrid cloud that includes public cloud services from more than one cloud service provider. By enabling a company to * combine best-of-breed cloud services and functionality from multiple cloud computing vendors * choose the optimal cloud computing environment for each workload, and * move workloads freely between public and private cloud as circumstances change hybrid cloud - and particularly hybrid multicloud - helps a company achieve its technical and business objectives more effectively and cost-efficiently than public cloud or private cloud alone. In fact, according to one recent study, companies derive up to 2.5x the value from hybrid cloud than from a single-cloud, single-vendor approach. https://www.ibm.com/cloud/learn/hybrid-cloud Type IT System Generic Group IBM Power Name IBM Power Description IBM Power is specifically architected for data rich applications and workloads, delivering enterprise-class compute with the flexibility of hybrid cloud deployment \u2013 traditional on premise, private cloud and public cloud. https://www.ibm.com/partnerworld/systems/power Type IT System Generic Group IBM Z Name IBM Z Description IBM Z is a family name that\u2019s used by IBM for all of its z/Architecture mainframe computers, beginning with the z900 released in 2000 to today\u2019s IBM z15 released in September 2019. (The \u201cZ\u201d stands for \u201czero downtime,\u201d which reflects the reliability of the system.) IBM Z uses the IBM S/390 chip architecture. Data that\u2019s handled by IBM Z is encrypted by dedicated encryption processors over the complete ecosystem, and encryption keys are handled with the most secure hardware security module (HSM) in the industry \u2014 which means it is highly secured. https://developer.ibm.com/articles/what-is-ibm-z/ Type IT System Generic Group Private Cloud / On-Premises Name Private Cloud / On-Premises Description Private cloud (also known as an internal cloud or corporate cloud) is a cloud computing environment in which all hardware and software resources are dedicated exclusively to, and accessible only by, a single customer. Private cloud combines many of the benefits of cloud computing\u2014including elasticity, scalability, and ease of service delivery\u2014with the access control, security, and resource customization of on-premises infrastructure. https://www.ibm.com/cloud/learn/introduction-to-private-cloud Type IT System Generic Group Public Cloud Name Public Cloud Description The rise and adoption of public cloud services is one of the most important shifts in the history of enterprise computing. A public cloud is a type of cloud computing in which a third-party service provider makes computing resources\u2014which can include anything from ready-to-use software applications, to individual virtual machines (VMs), to complete enterprise-grade infrastructures and development platforms\u2014available to users over the public Internet. These resources might be accessible for free, or access might be sold according to subscription-based or pay-per-usage pricing models. https://www.ibm.com/cloud/learn/public-cloud Type IT System Generic Group","title":"Actor"},{"location":"IT%20System%20View/aoditsystem_BydIlEc7sHFF/#subsystem","text":"OpenShift Worker Nodes [N] Name OpenShift Worker Nodes [N] Description In a Kubernetes cluster, the worker nodes are where the actual workloads requested by Kubernetes users run and are managed. The worker nodes advertise their capacity and the scheduler, which is part of the master services, determines on which nodes to start containers and Pods. Important services run on each worker node, including CRI-O, which is the container engine, Kubelet, which is the service that accepts and fulfills requests for running and stopping container workloads, and a service proxy, which manages communication for pods across workers. https://docs.openshift.com/container-platform/4.1/architecture/control-plane.html Cloud Pak for Business Automation Name Cloud Pak for Business Automation Description IBM Cloud Pak for Business Automation is a set of integrated market-leading software designed to help you solve your toughest operational challenges. With AI-generated recommendations, analytics to measure impact, and business-friendly low-code tooling, we've helped clients reduce the amount of time spent on manual processes by 90% and decreased customer wait times by half. You can now better comply with regulations to reduce risk and save thousands of work hours that can then be reallocated to higher value work. https://www.ibm.com/cloud/cloud-pak-for-business-automation Cloud Pak for Data Name Cloud Pak for Data Description IBM\u00ae Cloud Pak for Data is a cloud-native solution that enables you to put your data to work quickly and efficiently. Your enterprise has lots of data. You need to use your data to generate meaningful insights that can help you avoid problems and reach your goals. But your data is useless if you can't trust it or access it. Cloud Pak for Data lets you do both by enabling you to connect to your data, govern it, find it, and use it for analysis. Cloud Pak for Data also enables all of your data users to collaborate from a single, unified interface that supports many services that are designed to work together. Cloud Pak for Data fosters productivity by enabling users to find existing data or to request access to data. With modern tools that facilitate analytics and remove barriers to collaboration, users can spend less time finding data and more time using it effectively. And with Cloud Pak for Data, your IT department doesn't need to deploy multiple applications on disparate systems and then try to figure out how to get them to connect. https://www.ibm.com/support/producthub/icpdata/docs/content/SSQNUZ_latest/cpd/overview/overview.html Cloud Pak for Integration Name Cloud Pak for Integration Description IBM Cloud Pak for Integration is the solution to deliver both speed and quality, improving your integrations and your applications by extending AI-powered automation across the integration lifecycle. With it, companies are able to speed their integration development by 300%, reduce costs of integration by over 33% and increase overall operational efficiency while maintaining enhanced security, governance and availability. https://www.ibm.com/downloads/cas/M103EDOO Customer Container Workload Name Customer Container Workload Description OpenShift Control Plane Name OpenShift Control Plane Description The control plane, which is composed of master machines, manages the OpenShift Container Platform cluster. The control plane machines manage workloads on the compute machines, which are also known as worker machines. The cluster itself manages all upgrades to the machines by the actions of the Cluster Version Operator, the Machine Config Operator, and set of individual Operators. https://docs.openshift.com/container-platform/4.1/architecture/control-plane.html WebSphere Hybrid Edition Name WebSphere Hybrid Edition Description IBM\u00ae WebSphere\u00ae Hybrid Edition is designed for on-premises, cloud, and hybrid cloud deployments and includes all of the major IBM WebSphere Application Server editions: * IBM WebSphere Application Server Network Deployment * IBM WebSphere Application Server * IBM WebSphere Application Server Liberty Core IBM WebSphere Hybrid Edition is the solution of choice for existing on-premises WebSphere Application Server deployments, which are the WebSphere deployments that have powered a good portion of the world's economy for the last 20 years. With IBM WebSphere Hybrid Edition 5.0, existing applications can remain in place or make a gradual transition to the cloud. IBM WebSphere Hybrid Edition gives you the flexibility to move between WebSphere editions over time without additional entitlements. https://www.ibm.com/docs/en/websphere-hybrid?topic=overview","title":"Subsystem"},{"location":"IT%20System%20View/aoditsystem_BydIlEc7sHFF/#location","text":"Enterprise Applications Name Enterprise Applications Description It is a prevalent scenario to propose a hybrid solution to the customer. This is mainly because there are customer's monolithic applications hosted on regular virtual machines or regular physical systems. The following are examples of IBM products that are not containerized and can be hosted on traditional virtual machines: IBM WebSphere Network Deployment IBM Security Access Manager Another example of non-containerized enterprise systems is some traditional database used by the customer. Hosting Providers Name Hosting Providers Description Selected Hosting Provider Name Selected Hosting Provider Description","title":"Location"},{"location":"IT%20System%20View/aoditsystem_BydIlEc7sHFF/#logical-connection","text":"","title":"Logical Connection"},{"location":"IT%20System%20View/aoditsystem_BydIlEc7sHFF/#logical-node","text":"App Connect [N] Name App Connect [N] Description Type Primary Capability network routing Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams Deployment View Related Elements network routing App Microservices [N] Name App Microservices [N] Description Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Deployment View Related Elements container image Control Plane Nodes [3] Name Control Plane Nodes [3] Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Deployment View Related Elements container image Dedicated Storage Nodes [N] Name Dedicated Storage Nodes [N] Description You need to design the storage solution based on your workload requirements and infrastructure design. You should evaluate all the storage options that satisfy the requirements, i.e. IBM Cloud Block Storage, Red Hat OpenShift Container Storage, Portworx, NetApp, .. or others. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams Deployment View Related Elements container image IBM Security Access Manager Name IBM Security Access Manager Description IBM Security Access Manager is a complete authorization and network security policy management solution. It provides end-to-end protection of resources over geographically dispersed intranets and extranets. In addition to state-of-the-art security policy management, IBM Security Access Manager provides authentication, authorization, data security, and centralized resource management capabilities. IBM Security Access Manager offers the following features: * AuthenticationProvides a wide range of built-in authenticators and supports external authenticators. * AuthorizationProvides permit and deny decisions for protected resources requests in the secure domain through the authorization API. * Data security and centralized resource managementManages secure access to private internal network-based resources by using the public Internet's broad connectivity and ease of use with a corporate firewall system. https://www.ibm.com/docs/en/sva/9.0.4?topic=overview-introduction-security-access-manager Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams Deployment View Related Elements Infrastructure Nodes [3] Name Infrastructure Nodes [3] Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Deployment View Related Elements container image MQ [N] Name MQ [N] Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams Deployment View Related Elements ODM [N] Name ODM [N] Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams Deployment View Related Elements Traditional Database Name Traditional Database Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams Deployment View Related Elements Watson Assistant [N] Name Watson Assistant [N] Description Watson Assistant lets you build conversational interfaces into any application, device, or channel. Add a natural language interface to your application to automate interactions with your end users. Common applications include virtual agents and chat bots that can integrate and communicate on any channel or device. Train Watson Conversation service through an easy-to-use web application, designed so you can quickly build natural conversation flows between your apps and users, and deploy scalable, cost effective solutions. https://cloud.ibm.com/catalog/services/watson-assistant#about Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams Deployment View Related Elements container image WebShpere Network Deployment Name WebShpere Network Deployment Description WebSphere Application Server Network Deployment provides a flexible, secure server runtime environment for large-scale and mission-critical application deployments. It is available on premises or for public, private, or hybrid cloud. Whether you are seeking to reduce costs, unlock new value from your investment in WebSphere, or speed time to market, this product has the correct fit for every business need. WebSphere Application Server Network Deployment is a bundled application. For more information about bundled applications, see Bundled applications. https://www.ibm.com/docs/en/cloud-private/3.2.0?topic=paks-websphere-application-server-network-deployment Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams Deployment View Related Elements WebSphere Liberty Name WebSphere Liberty Description IBM\u00ae WebSphere\u00ae Liberty is a Java EE application server with a low-overhead Java runtime environment for cloud-native apps and microservices. WebSphere Liberty was created to be highly composable, start fast, use less memory and scale easily. Using the open-sourced IBM Open Liberty (link resides outside IBM) code base provides low-cost experimentation, customization and seamless migration from open source to production. https://www.ibm.com/cloud/websphere-liberty#:~:text=IBM%C2%AE%20WebSphere%C2%AE%20Liberty,Using%20the%20open%2Dsourced Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams Deployment View Related Elements","title":"Logical Node"},{"location":"IT%20System%20View/aoditsystem_ByreAoBFK/","text":"Diagram \u00b6 Name \u00b6 04 Cloud cluster Description \u00b6 Requirement: Higher availability solution. Deploy cluster over availability zones (AZ). Number of AZ: 3 This topology has been tested and validated on public cloud: Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform, and IBM Cloud\u00ae. Nodes are spread over the 3 AZ. Number of nodes: 3 master1 nodes 3 worker nodes 3 infrastructure nodes Note: The number of nodes and their sizing can be adjusted depending on the workload target. See the capacity sizing chapter. Typical use cases: Development Test Integration Production with limited SLA Element \u00b6 Expand all Actor \u00b6 Cloud Storage Name Cloud Storage Description Storage for persistent volumes is provided by an external tier solution. Not embedded into the Red Hat OpenShift Container Platform cluster. It could be, but not limited to: NFS server (not recommended for production) VMware\u00ae Vsphere\u00ae Volumes https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture Type IT System Generic Group Subsystem \u00b6 Compute Plane Name Compute Plane Description A physical server that acts as a hypervisor and contains the processing capabilities required to run virtual machines in the environment. A basic RHOSP environment requires at least one Compute node. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.0/html/director_installation_and_usage/planning-your-overcloud Control Plane Name Control Plane Description The control plane, which is composed of master machines, manages the OpenShift Container Platform cluster. https://docs.openshift.com/container-platform/4.1/architecture/control-plane.html Infrastructure Plane Name Infrastructure Plane Description You can use infrastructure machine sets to create machines that host only infrastructure components, such as the default router, the integrated container image registry, and the components for cluster metrics and monitoring. These infrastructure machines are not counted toward the total number of subscriptions that are required to run the environment. https://docs.openshift.com/container-platform/4.7/machine_management/creating-infrastructure-machinesets.html Red Hat OpenShift Container Platform Name Red Hat OpenShift Container Platform Description Red Hat\u00ae OpenShift\u00ae offers a consistent hybrid cloud foundation for building and scaling containerized applications. Benefit from streamlined platform installation and upgrades from one of the enterprise Kubernetes leaders. https://cloud.redhat.com/products/container-platform Storage Plane Name Storage Plane Description It provides file, block, and object storage classes, enabling a wide range of data modalities and workloads, including: Data at rest, such as databases and data warehouses. Data in motion, automating data pipelines. Data in action, providing services for continuous deployment models, analytics, artificial intelligence (AI), and machine learning (ML). https://www.redhat.com/en/resources/openshift-data-foundation-datasheet Location \u00b6 AZ1 Name AZ1 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ2 Name AZ2 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ3 Name AZ3 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture Location Name Location Description Region Name Region Description Logical Connection \u00b6 Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Logical Node \u00b6 Compute node 1 Name Compute node 1 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 2 Name Compute node 2 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 3 Name Compute node 3 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements container image Compute plane load balancer Name Compute plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_38v3qxufxWL network routing Control plane load balancer Name Control plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_37sFycoSa3m network routing Control Plane node 1 Name Control Plane node 1 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control plane node sizing Control Plane Deployment Topology Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 2 Name Control Plane node 2 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 3 Name Control Plane node 3 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability application runtime Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Infra node 1 Name Infra node 1 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 2 Name Infra node 2 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 3 Name Infra node 3 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 1 Name Storage node 1 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 2 Name Storage node 2 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Persistent Storage Options for Applications Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 3 Name Storage node 3 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Storage Technology for Metrics & Logging Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform","title":"04 Cloud cluster"},{"location":"IT%20System%20View/aoditsystem_ByreAoBFK/#diagram","text":"","title":"Diagram"},{"location":"IT%20System%20View/aoditsystem_ByreAoBFK/#name","text":"04 Cloud cluster","title":"Name"},{"location":"IT%20System%20View/aoditsystem_ByreAoBFK/#description","text":"Requirement: Higher availability solution. Deploy cluster over availability zones (AZ). Number of AZ: 3 This topology has been tested and validated on public cloud: Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform, and IBM Cloud\u00ae. Nodes are spread over the 3 AZ. Number of nodes: 3 master1 nodes 3 worker nodes 3 infrastructure nodes Note: The number of nodes and their sizing can be adjusted depending on the workload target. See the capacity sizing chapter. Typical use cases: Development Test Integration Production with limited SLA","title":"Description"},{"location":"IT%20System%20View/aoditsystem_ByreAoBFK/#element","text":"Expand all","title":"Element"},{"location":"IT%20System%20View/aoditsystem_ByreAoBFK/#actor","text":"Cloud Storage Name Cloud Storage Description Storage for persistent volumes is provided by an external tier solution. Not embedded into the Red Hat OpenShift Container Platform cluster. It could be, but not limited to: NFS server (not recommended for production) VMware\u00ae Vsphere\u00ae Volumes https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture Type IT System Generic Group","title":"Actor"},{"location":"IT%20System%20View/aoditsystem_ByreAoBFK/#subsystem","text":"Compute Plane Name Compute Plane Description A physical server that acts as a hypervisor and contains the processing capabilities required to run virtual machines in the environment. A basic RHOSP environment requires at least one Compute node. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.0/html/director_installation_and_usage/planning-your-overcloud Control Plane Name Control Plane Description The control plane, which is composed of master machines, manages the OpenShift Container Platform cluster. https://docs.openshift.com/container-platform/4.1/architecture/control-plane.html Infrastructure Plane Name Infrastructure Plane Description You can use infrastructure machine sets to create machines that host only infrastructure components, such as the default router, the integrated container image registry, and the components for cluster metrics and monitoring. These infrastructure machines are not counted toward the total number of subscriptions that are required to run the environment. https://docs.openshift.com/container-platform/4.7/machine_management/creating-infrastructure-machinesets.html Red Hat OpenShift Container Platform Name Red Hat OpenShift Container Platform Description Red Hat\u00ae OpenShift\u00ae offers a consistent hybrid cloud foundation for building and scaling containerized applications. Benefit from streamlined platform installation and upgrades from one of the enterprise Kubernetes leaders. https://cloud.redhat.com/products/container-platform Storage Plane Name Storage Plane Description It provides file, block, and object storage classes, enabling a wide range of data modalities and workloads, including: Data at rest, such as databases and data warehouses. Data in motion, automating data pipelines. Data in action, providing services for continuous deployment models, analytics, artificial intelligence (AI), and machine learning (ML). https://www.redhat.com/en/resources/openshift-data-foundation-datasheet","title":"Subsystem"},{"location":"IT%20System%20View/aoditsystem_ByreAoBFK/#location","text":"AZ1 Name AZ1 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ2 Name AZ2 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ3 Name AZ3 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture Location Name Location Description Region Name Region Description","title":"Location"},{"location":"IT%20System%20View/aoditsystem_ByreAoBFK/#logical-connection","text":"Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description","title":"Logical Connection"},{"location":"IT%20System%20View/aoditsystem_ByreAoBFK/#logical-node","text":"Compute node 1 Name Compute node 1 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 2 Name Compute node 2 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 3 Name Compute node 3 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements container image Compute plane load balancer Name Compute plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_38v3qxufxWL network routing Control plane load balancer Name Control plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_37sFycoSa3m network routing Control Plane node 1 Name Control Plane node 1 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control plane node sizing Control Plane Deployment Topology Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 2 Name Control Plane node 2 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 3 Name Control Plane node 3 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability application runtime Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Infra node 1 Name Infra node 1 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 2 Name Infra node 2 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 3 Name Infra node 3 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 1 Name Storage node 1 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 2 Name Storage node 2 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Persistent Storage Options for Applications Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 3 Name Storage node 3 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Storage Technology for Metrics & Logging Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform","title":"Logical Node"},{"location":"IT%20System%20View/aoditsystem_HJ4nuWvtF/","text":"Diagram \u00b6 Name \u00b6 08 Red Hat OpenShift on IBM Cloud on VPC Description \u00b6 Requirement: Higher availability solution. Deploy cluster over availability zones (AZ). Number of AZ: 3 This topology has been tested and validated on public cloud: Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform, and IBM Cloud\u00ae. Nodes are spread over the 3 AZ. Number of nodes: 3 master1 nodes 3 worker nodes 3 infrastructure nodes Note: The number of nodes and their sizing can be adjusted depending on the workload target. See the capacity sizing chapter. Typical use cases: Development Test Integration Production with limited SLA Element \u00b6 Expand all Actor \u00b6 Subsystem \u00b6 Client managd Name Client managd Description Cloud Services Name Cloud Services Description Managed by IBM Name Managed by IBM Description Location \u00b6 AZ1 Name AZ1 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ2 Name AZ2 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ3 Name AZ3 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ4 Name AZ4 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ5 Name AZ5 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ6 Name AZ6 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture IBM Cloud Name IBM Cloud Description Region Name Region Description VPC Name VPC Description Logical Connection \u00b6 Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Logical Node \u00b6 Block Storage Name Block Storage Description Block storage, sometimes referred to as block-level storage, is a technology that is used to store data files on Storage Area Networks (SANs) or cloud-based storage environments. Developers favor block storage for computing situations where they require fast, efficient, and reliable data transportation. Block storage breaks up data into blocks and then stores those blocks as separate pieces, each with a unique identifier. The SAN places those blocks of data wherever it is most efficient. That means it can store those blocks across different systems and each block can be configured (or partitioned) to work with different operating systems. Block storage also decouples data from user environments, allowing that data to be spread across multiple environments. This creates multiple paths to the data and allows the user to retrieve it quickly. When a user or application requests data from a block storage system, the underlying storage system reassembles the data blocks and presents the data to the user or application. https://www.ibm.com/cloud/learn/block-storage Type Primary Capability data lake Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC Related Elements Cloud object storage Name Cloud object storage Description Object storage, often referred to as object-based storage, is a data storage architecture for handling large amounts of unstructured data. This is data that does not conform to, or cannot be organized easily into, a traditional relational database with rows and columns. Today\u2019s Internet communications data is largely unstructured. This includes email, videos, photos, web pages, audio files, sensor data, and other types of media and web content (textual or non-textual). This content streams continuously from social media, search engines, mobile, and \u201csmart\u201d devices. https://www.ibm.com/cloud/learn/object-storage Type Primary Capability object store Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC Related Elements Compute node 1 Name Compute node 1 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 2 Name Compute node 2 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 3 Name Compute node 3 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements container image Control Plane node 1 Name Control Plane node 1 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control plane node sizing Control Plane Deployment Topology Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 2 Name Control Plane node 2 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 3 Name Control Plane node 3 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability application runtime Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Infra node 1 Name Infra node 1 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 2 Name Infra node 2 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 3 Name Infra node 3 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Load Balance for *.apps endpoint Name Load Balance for *.apps endpoint Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC Related Elements Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment network routing SYS_DU_38v4HSo3KHC Load Balancer for API endpoint Name Load Balancer for API endpoint Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC Related Elements Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment network routing SYS_DU_38v4NekGlHK Private endpoint Name Private endpoint Description A deployment with a service endpoint on the private network gets an endpoint that is not accessible from the public internet. All traffic is routed to hardware dedicated to Cloud Databases deployments and remains on the IBM Cloud Private network. All traffic to and from this endpoint is free and unmetered on the condition that the traffic remains in IBM Cloud. After your environment has access to the IBM Cloud Private network, an internet connection is not required to connect to your deployment. https://cloud.ibm.com/docs/cloud-databases?topic=cloud-databases-service-endpoints Type Primary Capability network routing Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC Related Elements network routing Public endpoint Name Public endpoint Description Public endpoints provide a connection to your deployment on the public network. At provision time, a public endpoint is the default option for all deployments. Your environment needs to have internet access to connect to a deployment. https://cloud.ibm.com/docs/cloud-databases?topic=cloud-databases-service-endpoints Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC Related Elements Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment network routing SYS_DU_38v4OttZ8X7 Public Gateway 1 Name Public Gateway 1 Description Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC Related Elements Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment network routing SYS_DU_38v57pMSlMf Public Gateway 2 Name Public Gateway 2 Description Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC Related Elements Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment network routing SYS_DU_38v58Kl6GAD Public Gateway 3 Name Public Gateway 3 Description Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC Related Elements Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment network routing SYS_DU_38v59UaV9p8 Storage node 1 Name Storage node 1 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 2 Name Storage node 2 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Persistent Storage Options for Applications Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 3 Name Storage node 3 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Storage Technology for Metrics & Logging Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform","title":"08 Red Hat OpenShift on IBM Cloud on VPC"},{"location":"IT%20System%20View/aoditsystem_HJ4nuWvtF/#diagram","text":"","title":"Diagram"},{"location":"IT%20System%20View/aoditsystem_HJ4nuWvtF/#name","text":"08 Red Hat OpenShift on IBM Cloud on VPC","title":"Name"},{"location":"IT%20System%20View/aoditsystem_HJ4nuWvtF/#description","text":"Requirement: Higher availability solution. Deploy cluster over availability zones (AZ). Number of AZ: 3 This topology has been tested and validated on public cloud: Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform, and IBM Cloud\u00ae. Nodes are spread over the 3 AZ. Number of nodes: 3 master1 nodes 3 worker nodes 3 infrastructure nodes Note: The number of nodes and their sizing can be adjusted depending on the workload target. See the capacity sizing chapter. Typical use cases: Development Test Integration Production with limited SLA","title":"Description"},{"location":"IT%20System%20View/aoditsystem_HJ4nuWvtF/#element","text":"Expand all","title":"Element"},{"location":"IT%20System%20View/aoditsystem_HJ4nuWvtF/#actor","text":"","title":"Actor"},{"location":"IT%20System%20View/aoditsystem_HJ4nuWvtF/#subsystem","text":"Client managd Name Client managd Description Cloud Services Name Cloud Services Description Managed by IBM Name Managed by IBM Description","title":"Subsystem"},{"location":"IT%20System%20View/aoditsystem_HJ4nuWvtF/#location","text":"AZ1 Name AZ1 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ2 Name AZ2 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ3 Name AZ3 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ4 Name AZ4 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ5 Name AZ5 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ6 Name AZ6 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture IBM Cloud Name IBM Cloud Description Region Name Region Description VPC Name VPC Description","title":"Location"},{"location":"IT%20System%20View/aoditsystem_HJ4nuWvtF/#logical-connection","text":"Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description","title":"Logical Connection"},{"location":"IT%20System%20View/aoditsystem_HJ4nuWvtF/#logical-node","text":"Block Storage Name Block Storage Description Block storage, sometimes referred to as block-level storage, is a technology that is used to store data files on Storage Area Networks (SANs) or cloud-based storage environments. Developers favor block storage for computing situations where they require fast, efficient, and reliable data transportation. Block storage breaks up data into blocks and then stores those blocks as separate pieces, each with a unique identifier. The SAN places those blocks of data wherever it is most efficient. That means it can store those blocks across different systems and each block can be configured (or partitioned) to work with different operating systems. Block storage also decouples data from user environments, allowing that data to be spread across multiple environments. This creates multiple paths to the data and allows the user to retrieve it quickly. When a user or application requests data from a block storage system, the underlying storage system reassembles the data blocks and presents the data to the user or application. https://www.ibm.com/cloud/learn/block-storage Type Primary Capability data lake Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC Related Elements Cloud object storage Name Cloud object storage Description Object storage, often referred to as object-based storage, is a data storage architecture for handling large amounts of unstructured data. This is data that does not conform to, or cannot be organized easily into, a traditional relational database with rows and columns. Today\u2019s Internet communications data is largely unstructured. This includes email, videos, photos, web pages, audio files, sensor data, and other types of media and web content (textual or non-textual). This content streams continuously from social media, search engines, mobile, and \u201csmart\u201d devices. https://www.ibm.com/cloud/learn/object-storage Type Primary Capability object store Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC Related Elements Compute node 1 Name Compute node 1 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 2 Name Compute node 2 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 3 Name Compute node 3 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements container image Control Plane node 1 Name Control Plane node 1 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control plane node sizing Control Plane Deployment Topology Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 2 Name Control Plane node 2 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 3 Name Control Plane node 3 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability application runtime Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Infra node 1 Name Infra node 1 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 2 Name Infra node 2 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 3 Name Infra node 3 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Load Balance for *.apps endpoint Name Load Balance for *.apps endpoint Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC Related Elements Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment network routing SYS_DU_38v4HSo3KHC Load Balancer for API endpoint Name Load Balancer for API endpoint Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC Related Elements Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment network routing SYS_DU_38v4NekGlHK Private endpoint Name Private endpoint Description A deployment with a service endpoint on the private network gets an endpoint that is not accessible from the public internet. All traffic is routed to hardware dedicated to Cloud Databases deployments and remains on the IBM Cloud Private network. All traffic to and from this endpoint is free and unmetered on the condition that the traffic remains in IBM Cloud. After your environment has access to the IBM Cloud Private network, an internet connection is not required to connect to your deployment. https://cloud.ibm.com/docs/cloud-databases?topic=cloud-databases-service-endpoints Type Primary Capability network routing Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC Related Elements network routing Public endpoint Name Public endpoint Description Public endpoints provide a connection to your deployment on the public network. At provision time, a public endpoint is the default option for all deployments. Your environment needs to have internet access to connect to a deployment. https://cloud.ibm.com/docs/cloud-databases?topic=cloud-databases-service-endpoints Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC Related Elements Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment network routing SYS_DU_38v4OttZ8X7 Public Gateway 1 Name Public Gateway 1 Description Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC Related Elements Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment network routing SYS_DU_38v57pMSlMf Public Gateway 2 Name Public Gateway 2 Description Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC Related Elements Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment network routing SYS_DU_38v58Kl6GAD Public Gateway 3 Name Public Gateway 3 Description Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC Related Elements Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment network routing SYS_DU_38v59UaV9p8 Storage node 1 Name Storage node 1 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 2 Name Storage node 2 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Persistent Storage Options for Applications Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 3 Name Storage node 3 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Storage Technology for Metrics & Logging Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform","title":"Logical Node"},{"location":"IT%20System%20View/aoditsystem_HJGd7N9QjHFt/","text":"Diagram \u00b6 Name \u00b6 Diagram Legend Description \u00b6 Element \u00b6 Expand all Actor \u00b6 Subsystem \u00b6 Location \u00b6 Logical Connection \u00b6 Logical Node \u00b6","title":"Diagram Legend"},{"location":"IT%20System%20View/aoditsystem_HJGd7N9QjHFt/#diagram","text":"","title":"Diagram"},{"location":"IT%20System%20View/aoditsystem_HJGd7N9QjHFt/#name","text":"Diagram Legend","title":"Name"},{"location":"IT%20System%20View/aoditsystem_HJGd7N9QjHFt/#description","text":"","title":"Description"},{"location":"IT%20System%20View/aoditsystem_HJGd7N9QjHFt/#element","text":"Expand all","title":"Element"},{"location":"IT%20System%20View/aoditsystem_HJGd7N9QjHFt/#actor","text":"","title":"Actor"},{"location":"IT%20System%20View/aoditsystem_HJGd7N9QjHFt/#subsystem","text":"","title":"Subsystem"},{"location":"IT%20System%20View/aoditsystem_HJGd7N9QjHFt/#location","text":"","title":"Location"},{"location":"IT%20System%20View/aoditsystem_HJGd7N9QjHFt/#logical-connection","text":"","title":"Logical Connection"},{"location":"IT%20System%20View/aoditsystem_HJGd7N9QjHFt/#logical-node","text":"","title":"Logical Node"},{"location":"IT%20System%20View/aoditsystem_HkaCNxvtF/","text":"Diagram \u00b6 Name \u00b6 07 AWS Description \u00b6 Requirement: Higher availability solution. Deploy cluster over availability zones (AZ). Number of AZ: 3 This topology has been tested and validated on public cloud: Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform, and IBM Cloud\u00ae. Nodes are spread over the 3 AZ. Number of nodes: 3 master1 nodes 3 worker nodes 3 infrastructure nodes Note: The number of nodes and their sizing can be adjusted depending on the workload target. See the capacity sizing chapter. Typical use cases: Development Test Integration Production with limited SLA Element \u00b6 Expand all Actor \u00b6 Subsystem \u00b6 Private subnet 1 Name Private subnet 1 Description The configuration for this scenario includes a virtual private cloud (VPC) with a public subnet and a private subnet. We recommend this scenario if you want to run a public-facing web application, while maintaining back-end servers that aren't publicly accessible. A common example is a multi-tier website, with the web servers in a public subnet and the database servers in a private subnet. You can set up security and routing so that the web servers can communicate with the database servers. https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Scenario2.html Private subnet 2 Name Private subnet 2 Description The configuration for this scenario includes a virtual private cloud (VPC) with a public subnet and a private subnet. We recommend this scenario if you want to run a public-facing web application, while maintaining back-end servers that aren't publicly accessible. A common example is a multi-tier website, with the web servers in a public subnet and the database servers in a private subnet. You can set up security and routing so that the web servers can communicate with the database servers. https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Scenario2.html Private subnet 3 Name Private subnet 3 Description The configuration for this scenario includes a virtual private cloud (VPC) with a public subnet and a private subnet. We recommend this scenario if you want to run a public-facing web application, while maintaining back-end servers that aren't publicly accessible. A common example is a multi-tier website, with the web servers in a public subnet and the database servers in a private subnet. You can set up security and routing so that the web servers can communicate with the database servers. https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Scenario2.html Public subnet 1 Name Public subnet 1 Description The configuration for this scenario includes a virtual private cloud (VPC) with a public subnet and a private subnet. We recommend this scenario if you want to run a public-facing web application, while maintaining back-end servers that aren't publicly accessible. A common example is a multi-tier website, with the web servers in a public subnet and the database servers in a private subnet. You can set up security and routing so that the web servers can communicate with the database servers. https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Scenario2.html Public subnet 2 Name Public subnet 2 Description The configuration for this scenario includes a virtual private cloud (VPC) with a public subnet and a private subnet. We recommend this scenario if you want to run a public-facing web application, while maintaining back-end servers that aren't publicly accessible. A common example is a multi-tier website, with the web servers in a public subnet and the database servers in a private subnet. You can set up security and routing so that the web servers can communicate with the database servers. https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Scenario2.html Public subnet 3 Name Public subnet 3 Description The configuration for this scenario includes a virtual private cloud (VPC) with a public subnet and a private subnet. We recommend this scenario if you want to run a public-facing web application, while maintaining back-end servers that aren't publicly accessible. A common example is a multi-tier website, with the web servers in a public subnet and the database servers in a private subnet. You can set up security and routing so that the web servers can communicate with the database servers. https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Scenario2.html Location \u00b6 AWS Name AWS Description AZ1 Name AZ1 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ2 Name AZ2 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ3 Name AZ3 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture Region Name Region Description VPC Name VPC Description Logical Connection \u00b6 Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Logical Node \u00b6 Application load balancer Name Application load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 07 AWS Related Elements network routing Compute node 1 Name Compute node 1 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 2 Name Compute node 2 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 3 Name Compute node 3 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements container image Control plane load balancer Name Control plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_37sFycoSa3m network routing Control plane load balancer(internal) Name Control plane load balancer(internal) Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 07 AWS Related Elements network routing SYS_DU_38twwkHbyx3 Copy of SYS_DU_37sFycoSa3m Control Plane node 1 Name Control Plane node 1 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control plane node sizing Control Plane Deployment Topology Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 2 Name Control Plane node 2 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 3 Name Control Plane node 3 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability application runtime Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment EBS Name EBS Description Amazon Elastic Block Store (Amazon EBS) is an easy-to-use, scalable, high-performance block-storage service designed for Amazon Elastic Compute Cloud (Amazon EC2). https://aws.amazon.com/ebs/ Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 07 AWS Related Elements Infra node 1 Name Infra node 1 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 2 Name Infra node 2 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 3 Name Infra node 3 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Internet Gateway Name Internet Gateway Description An internet gateway is a horizontally scaled, redundant, and highly available VPC component that allows communication between your VPC and the internet. An internet gateway serves two purposes: to provide a target in your VPC route tables for internet-routable traffic, and to perform network address translation (NAT) for instances that have been assigned public IPv4 addresses. For more information, see Enable internet access. An internet gateway supports IPv4 and IPv6 traffic. It does not cause availability risks or bandwidth constraints on your network traffic. There's no additional charge for having an internet gateway in your account. https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Internet_Gateway.html Type Primary Capability network routing Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 07 AWS Related Elements network routing NAT Gateway 1 Name NAT Gateway 1 Description A NAT gateway is a Network Address Translation (NAT) service. You can use a NAT gateway so that instances in a private subnet can connect to services outside your VPC but external services cannot initiate a connection with those instances. https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 07 AWS Related Elements NAT Gateway 2 Name NAT Gateway 2 Description A NAT gateway is a Network Address Translation (NAT) service. You can use a NAT gateway so that instances in a private subnet can connect to services outside your VPC but external services cannot initiate a connection with those instances. https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 07 AWS Related Elements NAT Gateway 3 Name NAT Gateway 3 Description A NAT gateway is a Network Address Translation (NAT) service. You can use a NAT gateway so that instances in a private subnet can connect to services outside your VPC but external services cannot initiate a connection with those instances. https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 07 AWS Related Elements Storage node 1 Name Storage node 1 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 2 Name Storage node 2 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Persistent Storage Options for Applications Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 3 Name Storage node 3 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Storage Technology for Metrics & Logging Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform","title":"07 AWS"},{"location":"IT%20System%20View/aoditsystem_HkaCNxvtF/#diagram","text":"","title":"Diagram"},{"location":"IT%20System%20View/aoditsystem_HkaCNxvtF/#name","text":"07 AWS","title":"Name"},{"location":"IT%20System%20View/aoditsystem_HkaCNxvtF/#description","text":"Requirement: Higher availability solution. Deploy cluster over availability zones (AZ). Number of AZ: 3 This topology has been tested and validated on public cloud: Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform, and IBM Cloud\u00ae. Nodes are spread over the 3 AZ. Number of nodes: 3 master1 nodes 3 worker nodes 3 infrastructure nodes Note: The number of nodes and their sizing can be adjusted depending on the workload target. See the capacity sizing chapter. Typical use cases: Development Test Integration Production with limited SLA","title":"Description"},{"location":"IT%20System%20View/aoditsystem_HkaCNxvtF/#element","text":"Expand all","title":"Element"},{"location":"IT%20System%20View/aoditsystem_HkaCNxvtF/#actor","text":"","title":"Actor"},{"location":"IT%20System%20View/aoditsystem_HkaCNxvtF/#subsystem","text":"Private subnet 1 Name Private subnet 1 Description The configuration for this scenario includes a virtual private cloud (VPC) with a public subnet and a private subnet. We recommend this scenario if you want to run a public-facing web application, while maintaining back-end servers that aren't publicly accessible. A common example is a multi-tier website, with the web servers in a public subnet and the database servers in a private subnet. You can set up security and routing so that the web servers can communicate with the database servers. https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Scenario2.html Private subnet 2 Name Private subnet 2 Description The configuration for this scenario includes a virtual private cloud (VPC) with a public subnet and a private subnet. We recommend this scenario if you want to run a public-facing web application, while maintaining back-end servers that aren't publicly accessible. A common example is a multi-tier website, with the web servers in a public subnet and the database servers in a private subnet. You can set up security and routing so that the web servers can communicate with the database servers. https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Scenario2.html Private subnet 3 Name Private subnet 3 Description The configuration for this scenario includes a virtual private cloud (VPC) with a public subnet and a private subnet. We recommend this scenario if you want to run a public-facing web application, while maintaining back-end servers that aren't publicly accessible. A common example is a multi-tier website, with the web servers in a public subnet and the database servers in a private subnet. You can set up security and routing so that the web servers can communicate with the database servers. https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Scenario2.html Public subnet 1 Name Public subnet 1 Description The configuration for this scenario includes a virtual private cloud (VPC) with a public subnet and a private subnet. We recommend this scenario if you want to run a public-facing web application, while maintaining back-end servers that aren't publicly accessible. A common example is a multi-tier website, with the web servers in a public subnet and the database servers in a private subnet. You can set up security and routing so that the web servers can communicate with the database servers. https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Scenario2.html Public subnet 2 Name Public subnet 2 Description The configuration for this scenario includes a virtual private cloud (VPC) with a public subnet and a private subnet. We recommend this scenario if you want to run a public-facing web application, while maintaining back-end servers that aren't publicly accessible. A common example is a multi-tier website, with the web servers in a public subnet and the database servers in a private subnet. You can set up security and routing so that the web servers can communicate with the database servers. https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Scenario2.html Public subnet 3 Name Public subnet 3 Description The configuration for this scenario includes a virtual private cloud (VPC) with a public subnet and a private subnet. We recommend this scenario if you want to run a public-facing web application, while maintaining back-end servers that aren't publicly accessible. A common example is a multi-tier website, with the web servers in a public subnet and the database servers in a private subnet. You can set up security and routing so that the web servers can communicate with the database servers. https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Scenario2.html","title":"Subsystem"},{"location":"IT%20System%20View/aoditsystem_HkaCNxvtF/#location","text":"AWS Name AWS Description AZ1 Name AZ1 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ2 Name AZ2 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ3 Name AZ3 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture Region Name Region Description VPC Name VPC Description","title":"Location"},{"location":"IT%20System%20View/aoditsystem_HkaCNxvtF/#logical-connection","text":"Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description","title":"Logical Connection"},{"location":"IT%20System%20View/aoditsystem_HkaCNxvtF/#logical-node","text":"Application load balancer Name Application load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 07 AWS Related Elements network routing Compute node 1 Name Compute node 1 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 2 Name Compute node 2 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 3 Name Compute node 3 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements container image Control plane load balancer Name Control plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_37sFycoSa3m network routing Control plane load balancer(internal) Name Control plane load balancer(internal) Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 07 AWS Related Elements network routing SYS_DU_38twwkHbyx3 Copy of SYS_DU_37sFycoSa3m Control Plane node 1 Name Control Plane node 1 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control plane node sizing Control Plane Deployment Topology Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 2 Name Control Plane node 2 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 3 Name Control Plane node 3 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability application runtime Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment EBS Name EBS Description Amazon Elastic Block Store (Amazon EBS) is an easy-to-use, scalable, high-performance block-storage service designed for Amazon Elastic Compute Cloud (Amazon EC2). https://aws.amazon.com/ebs/ Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 07 AWS Related Elements Infra node 1 Name Infra node 1 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 2 Name Infra node 2 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 3 Name Infra node 3 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Internet Gateway Name Internet Gateway Description An internet gateway is a horizontally scaled, redundant, and highly available VPC component that allows communication between your VPC and the internet. An internet gateway serves two purposes: to provide a target in your VPC route tables for internet-routable traffic, and to perform network address translation (NAT) for instances that have been assigned public IPv4 addresses. For more information, see Enable internet access. An internet gateway supports IPv4 and IPv6 traffic. It does not cause availability risks or bandwidth constraints on your network traffic. There's no additional charge for having an internet gateway in your account. https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Internet_Gateway.html Type Primary Capability network routing Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 07 AWS Related Elements network routing NAT Gateway 1 Name NAT Gateway 1 Description A NAT gateway is a Network Address Translation (NAT) service. You can use a NAT gateway so that instances in a private subnet can connect to services outside your VPC but external services cannot initiate a connection with those instances. https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 07 AWS Related Elements NAT Gateway 2 Name NAT Gateway 2 Description A NAT gateway is a Network Address Translation (NAT) service. You can use a NAT gateway so that instances in a private subnet can connect to services outside your VPC but external services cannot initiate a connection with those instances. https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 07 AWS Related Elements NAT Gateway 3 Name NAT Gateway 3 Description A NAT gateway is a Network Address Translation (NAT) service. You can use a NAT gateway so that instances in a private subnet can connect to services outside your VPC but external services cannot initiate a connection with those instances. https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 07 AWS Related Elements Storage node 1 Name Storage node 1 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 2 Name Storage node 2 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Persistent Storage Options for Applications Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 3 Name Storage node 3 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Storage Technology for Metrics & Logging Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform","title":"Logical Node"},{"location":"IT%20System%20View/aoditsystem_SJAvxVcQjStY/","text":"Diagram \u00b6 Name \u00b6 OM - Prescribed View Description \u00b6 Element \u00b6 Expand all Actor \u00b6 Admin User Name Admin User Description Type Human Generic Group Traditional Applications Name Traditional Applications Description Type IT System Generic Group User Name User Description Type Human Generic Group Subsystem \u00b6 Location \u00b6 DMZ Name DMZ Description Private Network Name Private Network Description Public Network Name Public Network Description Logical Connection \u00b6 Logical Node \u00b6 API Server Name API Server Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements App Microservices [N] Name App Microservices [N] Description Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Deployment View Related Elements container image Control Plane Nodes [3] Name Control Plane Nodes [3] Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Deployment View Related Elements container image Controller Manager Name Controller Manager Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements Dedicated Storage Nodes [3] Name Dedicated Storage Nodes [3] Description You need to design the storage solution based on your workload requirements and infrastructure design. You should evaluate all the storage options that satisfy the requirements, i.e. IBM Cloud Block Storage, Red Hat OpenShift Container Storage, Portworx, NetApp, .. or others. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements DMZ Worker Nodes [3] Name DMZ Worker Nodes [3] Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements EFK Monitoring Name EFK Monitoring Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements etcd Name etcd Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements Infrastructure Nodes [3] Name Infrastructure Nodes [3] Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Deployment View Related Elements container image Internal LB Name Internal LB Description Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements SYS_DU_38qFixOCoFo network routing Network LB Name Network LB Description Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements network routing SYS_DU_38qFgvSNGN6 Registry Name Registry Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements Router Name Router Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements Router Nodes [3] Name Router Nodes [3] Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements Scheduler Name Scheduler Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements Worker Node [N] Name Worker Node [N] Description In a Kubernetes cluster, the worker nodes are where the actual workloads requested by Kubernetes users run and are managed. The worker nodes advertise their capacity and the scheduler, which is part of the control plane services, determines on which nodes to start containers and Pods. Important services run on each worker node, including CRI-O, which is the container engine, Kubelet, which is the service that accepts and fulfills requests for running and stopping container workloads, and a service proxy, which manages communication for pods across workers. https://docs.openshift.com/container-platform/4.1/architecture/control-plane.html Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements","title":"OM - Prescribed View"},{"location":"IT%20System%20View/aoditsystem_SJAvxVcQjStY/#diagram","text":"","title":"Diagram"},{"location":"IT%20System%20View/aoditsystem_SJAvxVcQjStY/#name","text":"OM - Prescribed View","title":"Name"},{"location":"IT%20System%20View/aoditsystem_SJAvxVcQjStY/#description","text":"","title":"Description"},{"location":"IT%20System%20View/aoditsystem_SJAvxVcQjStY/#element","text":"Expand all","title":"Element"},{"location":"IT%20System%20View/aoditsystem_SJAvxVcQjStY/#actor","text":"Admin User Name Admin User Description Type Human Generic Group Traditional Applications Name Traditional Applications Description Type IT System Generic Group User Name User Description Type Human Generic Group","title":"Actor"},{"location":"IT%20System%20View/aoditsystem_SJAvxVcQjStY/#subsystem","text":"","title":"Subsystem"},{"location":"IT%20System%20View/aoditsystem_SJAvxVcQjStY/#location","text":"DMZ Name DMZ Description Private Network Name Private Network Description Public Network Name Public Network Description","title":"Location"},{"location":"IT%20System%20View/aoditsystem_SJAvxVcQjStY/#logical-connection","text":"","title":"Logical Connection"},{"location":"IT%20System%20View/aoditsystem_SJAvxVcQjStY/#logical-node","text":"API Server Name API Server Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements App Microservices [N] Name App Microservices [N] Description Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Deployment View Related Elements container image Control Plane Nodes [3] Name Control Plane Nodes [3] Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Deployment View Related Elements container image Controller Manager Name Controller Manager Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements Dedicated Storage Nodes [3] Name Dedicated Storage Nodes [3] Description You need to design the storage solution based on your workload requirements and infrastructure design. You should evaluate all the storage options that satisfy the requirements, i.e. IBM Cloud Block Storage, Red Hat OpenShift Container Storage, Portworx, NetApp, .. or others. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements DMZ Worker Nodes [3] Name DMZ Worker Nodes [3] Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements EFK Monitoring Name EFK Monitoring Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements etcd Name etcd Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements Infrastructure Nodes [3] Name Infrastructure Nodes [3] Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Deployment View Related Elements container image Internal LB Name Internal LB Description Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements SYS_DU_38qFixOCoFo network routing Network LB Name Network LB Description Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements network routing SYS_DU_38qFgvSNGN6 Registry Name Registry Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements Router Name Router Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements Router Nodes [3] Name Router Nodes [3] Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements Scheduler Name Scheduler Description Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements Worker Node [N] Name Worker Node [N] Description In a Kubernetes cluster, the worker nodes are where the actual workloads requested by Kubernetes users run and are managed. The worker nodes advertise their capacity and the scheduler, which is part of the control plane services, determines on which nodes to start containers and Pods. Important services run on each worker node, including CRI-O, which is the container engine, Kubelet, which is the service that accepts and fulfills requests for running and stopping container workloads, and a service proxy, which manages communication for pods across workers. https://docs.openshift.com/container-platform/4.1/architecture/control-plane.html Type Primary Capability Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams OM - Prescribed View Related Elements","title":"Logical Node"},{"location":"IT%20System%20View/aoditsystem_Sy-F43rKt/","text":"Diagram \u00b6 Name \u00b6 06 Two clusters on two regions Description \u00b6 Requirement: Higher availability of the solution by addressing regional failure. => Deploy the solution in at least two regions. Deploy one cluster per region. Do not spread cluster over region (latency can generate issues). Use the previous architecture reference (4) for cluster(s) on each region. Need of a global load balancer infrastructure to route application traffic between the two regions. Typical use case: Production Element \u00b6 Expand all Actor \u00b6 External Storage Name External Storage Description Storage for persistent volumes is provided by an external tier solution. Not embedded into the Red Hat OpenShift Container Platform cluster. It could be, but not limited to: NFS server (not recommended for production) VMware\u00ae Vsphere\u00ae Volumes https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture Type IT System Generic Group Subsystem \u00b6 Compute Plane A Name Compute Plane A Description A physical server that acts as a hypervisor and contains the processing capabilities required to run virtual machines in the environment. A basic RHOSP environment requires at least one Compute node. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.0/html/director_installation_and_usage/planning-your-overcloud Compute Plane B Name Compute Plane B Description A physical server that acts as a hypervisor and contains the processing capabilities required to run virtual machines in the environment. A basic RHOSP environment requires at least one Compute node. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.0/html/director_installation_and_usage/planning-your-overcloud Control Plane A Name Control Plane A Description The control plane, which is composed of master machines, manages the OpenShift Container Platform cluster. https://docs.openshift.com/container-platform/4.1/architecture/control-plane.html Control Plane B Name Control Plane B Description The control plane, which is composed of master machines, manages the OpenShift Container Platform cluster. https://docs.openshift.com/container-platform/4.1/architecture/control-plane.html Infrastructure Plane A Name Infrastructure Plane A Description You can use infrastructure machine sets to create machines that host only infrastructure components, such as the default router, the integrated container image registry, and the components for cluster metrics and monitoring. These infrastructure machines are not counted toward the total number of subscriptions that are required to run the environment. https://docs.openshift.com/container-platform/4.7/machine_management/creating-infrastructure-machinesets.html Infrastructure Plane B Name Infrastructure Plane B Description You can use infrastructure machine sets to create machines that host only infrastructure components, such as the default router, the integrated container image registry, and the components for cluster metrics and monitoring. These infrastructure machines are not counted toward the total number of subscriptions that are required to run the environment. https://docs.openshift.com/container-platform/4.7/machine_management/creating-infrastructure-machinesets.html Red Hat OpenShift Container Platform A Name Red Hat OpenShift Container Platform A Description Red Hat\u00ae OpenShift\u00ae offers a consistent hybrid cloud foundation for building and scaling containerized applications. Benefit from streamlined platform installation and upgrades from one of the enterprise Kubernetes leaders. https://cloud.redhat.com/products/container-platform Red Hat OpenShift Container Platform B Name Red Hat OpenShift Container Platform B Description Red Hat\u00ae OpenShift\u00ae offers a consistent hybrid cloud foundation for building and scaling containerized applications. Benefit from streamlined platform installation and upgrades from one of the enterprise Kubernetes leaders. https://cloud.redhat.com/products/container-platform Storage Plane B Name Storage Plane B Description It provides file, block, and object storage classes, enabling a wide range of data modalities and workloads, including: Data at rest, such as databases and data warehouses. Data in motion, automating data pipelines. Data in action, providing services for continuous deployment models, analytics, artificial intelligence (AI), and machine learning (ML). https://www.redhat.com/en/resources/openshift-data-foundation-datasheet Stroage Plane A Name Stroage Plane A Description It provides file, block, and object storage classes, enabling a wide range of data modalities and workloads, including: Data at rest, such as databases and data warehouses. Data in motion, automating data pipelines. Data in action, providing services for continuous deployment models, analytics, artificial intelligence (AI), and machine learning (ML). https://www.redhat.com/en/resources/openshift-data-foundation-datasheet Location \u00b6 AZ1_A Name AZ1_A Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ1_B Name AZ1_B Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ2_A Name AZ2_A Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ2_B Name AZ2_B Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ3_A Name AZ3_A Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ3_B Name AZ3_B Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture Cloud Provider Name Cloud Provider Description Region A Name Region A Description Region B Name Region B Description Logical Connection \u00b6 Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Logical Node \u00b6 Compute node 1 Name Compute node 1 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 2 Name Compute node 2 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 3 Name Compute node 3 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements container image Compute plane load balancer Name Compute plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_38v3qxufxWL network routing Control plane load balancer Name Control plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_37sFycoSa3m network routing Control Plane node 1 Name Control Plane node 1 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control plane node sizing Control Plane Deployment Topology Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 2 Name Control Plane node 2 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 3 Name Control Plane node 3 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability application runtime Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Global load Balancer Name Global load Balancer Description A global load balancer is a DNS server that makes load balancing decisions based on a number of factors. As we know, DNS servers resolve a Fully Qualified Domain Name (FQDN) to one or more IP addresses that represent the location for the service. If the service exists in multiple locations, normally a DNS request will return a list of IPs leaving the choice of which IP address to use up to the client. A global load balancer differs from a standard DNS server as it makes a load balancing decision by returning only one of the available IP addresses. https://cloud.redhat.com/blog/global-load-balancer-for-openshift-clusters-an-operator-based-approach Type Primary Capability network routing Implementation IBM Cloud Internet Services Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 06 Two clusters on two regions 05 Two clusters on-premises Related Elements network routing SYS_DU_37sI4BO5I63 Infra node 1 Name Infra node 1 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 2 Name Infra node 2 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 3 Name Infra node 3 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 1 Name Storage node 1 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 2 Name Storage node 2 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Persistent Storage Options for Applications Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 3 Name Storage node 3 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Storage Technology for Metrics & Logging Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform","title":"06 Two clusters on two regions"},{"location":"IT%20System%20View/aoditsystem_Sy-F43rKt/#diagram","text":"","title":"Diagram"},{"location":"IT%20System%20View/aoditsystem_Sy-F43rKt/#name","text":"06 Two clusters on two regions","title":"Name"},{"location":"IT%20System%20View/aoditsystem_Sy-F43rKt/#description","text":"Requirement: Higher availability of the solution by addressing regional failure. => Deploy the solution in at least two regions. Deploy one cluster per region. Do not spread cluster over region (latency can generate issues). Use the previous architecture reference (4) for cluster(s) on each region. Need of a global load balancer infrastructure to route application traffic between the two regions. Typical use case: Production","title":"Description"},{"location":"IT%20System%20View/aoditsystem_Sy-F43rKt/#element","text":"Expand all","title":"Element"},{"location":"IT%20System%20View/aoditsystem_Sy-F43rKt/#actor","text":"External Storage Name External Storage Description Storage for persistent volumes is provided by an external tier solution. Not embedded into the Red Hat OpenShift Container Platform cluster. It could be, but not limited to: NFS server (not recommended for production) VMware\u00ae Vsphere\u00ae Volumes https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture Type IT System Generic Group","title":"Actor"},{"location":"IT%20System%20View/aoditsystem_Sy-F43rKt/#subsystem","text":"Compute Plane A Name Compute Plane A Description A physical server that acts as a hypervisor and contains the processing capabilities required to run virtual machines in the environment. A basic RHOSP environment requires at least one Compute node. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.0/html/director_installation_and_usage/planning-your-overcloud Compute Plane B Name Compute Plane B Description A physical server that acts as a hypervisor and contains the processing capabilities required to run virtual machines in the environment. A basic RHOSP environment requires at least one Compute node. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.0/html/director_installation_and_usage/planning-your-overcloud Control Plane A Name Control Plane A Description The control plane, which is composed of master machines, manages the OpenShift Container Platform cluster. https://docs.openshift.com/container-platform/4.1/architecture/control-plane.html Control Plane B Name Control Plane B Description The control plane, which is composed of master machines, manages the OpenShift Container Platform cluster. https://docs.openshift.com/container-platform/4.1/architecture/control-plane.html Infrastructure Plane A Name Infrastructure Plane A Description You can use infrastructure machine sets to create machines that host only infrastructure components, such as the default router, the integrated container image registry, and the components for cluster metrics and monitoring. These infrastructure machines are not counted toward the total number of subscriptions that are required to run the environment. https://docs.openshift.com/container-platform/4.7/machine_management/creating-infrastructure-machinesets.html Infrastructure Plane B Name Infrastructure Plane B Description You can use infrastructure machine sets to create machines that host only infrastructure components, such as the default router, the integrated container image registry, and the components for cluster metrics and monitoring. These infrastructure machines are not counted toward the total number of subscriptions that are required to run the environment. https://docs.openshift.com/container-platform/4.7/machine_management/creating-infrastructure-machinesets.html Red Hat OpenShift Container Platform A Name Red Hat OpenShift Container Platform A Description Red Hat\u00ae OpenShift\u00ae offers a consistent hybrid cloud foundation for building and scaling containerized applications. Benefit from streamlined platform installation and upgrades from one of the enterprise Kubernetes leaders. https://cloud.redhat.com/products/container-platform Red Hat OpenShift Container Platform B Name Red Hat OpenShift Container Platform B Description Red Hat\u00ae OpenShift\u00ae offers a consistent hybrid cloud foundation for building and scaling containerized applications. Benefit from streamlined platform installation and upgrades from one of the enterprise Kubernetes leaders. https://cloud.redhat.com/products/container-platform Storage Plane B Name Storage Plane B Description It provides file, block, and object storage classes, enabling a wide range of data modalities and workloads, including: Data at rest, such as databases and data warehouses. Data in motion, automating data pipelines. Data in action, providing services for continuous deployment models, analytics, artificial intelligence (AI), and machine learning (ML). https://www.redhat.com/en/resources/openshift-data-foundation-datasheet Stroage Plane A Name Stroage Plane A Description It provides file, block, and object storage classes, enabling a wide range of data modalities and workloads, including: Data at rest, such as databases and data warehouses. Data in motion, automating data pipelines. Data in action, providing services for continuous deployment models, analytics, artificial intelligence (AI), and machine learning (ML). https://www.redhat.com/en/resources/openshift-data-foundation-datasheet","title":"Subsystem"},{"location":"IT%20System%20View/aoditsystem_Sy-F43rKt/#location","text":"AZ1_A Name AZ1_A Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ1_B Name AZ1_B Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ2_A Name AZ2_A Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ2_B Name AZ2_B Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ3_A Name AZ3_A Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ3_B Name AZ3_B Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture Cloud Provider Name Cloud Provider Description Region A Name Region A Description Region B Name Region B Description","title":"Location"},{"location":"IT%20System%20View/aoditsystem_Sy-F43rKt/#logical-connection","text":"Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description","title":"Logical Connection"},{"location":"IT%20System%20View/aoditsystem_Sy-F43rKt/#logical-node","text":"Compute node 1 Name Compute node 1 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 2 Name Compute node 2 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 3 Name Compute node 3 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements container image Compute plane load balancer Name Compute plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_38v3qxufxWL network routing Control plane load balancer Name Control plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_37sFycoSa3m network routing Control Plane node 1 Name Control Plane node 1 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control plane node sizing Control Plane Deployment Topology Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 2 Name Control Plane node 2 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 3 Name Control Plane node 3 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability application runtime Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Global load Balancer Name Global load Balancer Description A global load balancer is a DNS server that makes load balancing decisions based on a number of factors. As we know, DNS servers resolve a Fully Qualified Domain Name (FQDN) to one or more IP addresses that represent the location for the service. If the service exists in multiple locations, normally a DNS request will return a list of IPs leaving the choice of which IP address to use up to the client. A global load balancer differs from a standard DNS server as it makes a load balancing decision by returning only one of the available IP addresses. https://cloud.redhat.com/blog/global-load-balancer-for-openshift-clusters-an-operator-based-approach Type Primary Capability network routing Implementation IBM Cloud Internet Services Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 06 Two clusters on two regions 05 Two clusters on-premises Related Elements network routing SYS_DU_37sI4BO5I63 Infra node 1 Name Infra node 1 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 2 Name Infra node 2 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 3 Name Infra node 3 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 1 Name Storage node 1 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 2 Name Storage node 2 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Persistent Storage Options for Applications Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 3 Name Storage node 3 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Storage Technology for Metrics & Logging Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform","title":"Logical Node"},{"location":"IT%20System%20View/aoditsystem_r18uxVqXsBFK/","text":"Diagram \u00b6 Name \u00b6 01 Starter environment Description \u00b6 This is the minimal topology for a Red Hat\u00ae OpenShift\u00ae Container Platform v4.x: 3 master1 nodes 2 worker nodes There is no persistent storage solution, as this is focused on stateless and ephemeral workloads. The typical use cases are: Development Test Element \u00b6 Expand all Actor \u00b6 Subsystem \u00b6 Compute Plane Name Compute Plane Description A physical server that acts as a hypervisor and contains the processing capabilities required to run virtual machines in the environment. A basic RHOSP environment requires at least one Compute node. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.0/html/director_installation_and_usage/planning-your-overcloud Control Plane Name Control Plane Description The control plane, which is composed of control plane machines, manages the OpenShift Container Platform cluster. The control plane machines manage workloads on the compute machines, which are also known as worker machines. The cluster itself manages all upgrades to the machines by the actions of the Cluster Version Operator, the Machine Config Operator, and a set of individual Operators. https://docs.openshift.com/container-platform/4.1/architecture/control-plane.html Red Hat OpenShift Container Platform Name Red Hat OpenShift Container Platform Description Red Hat\u00ae OpenShift\u00ae offers a consistent hybrid cloud foundation for building and scaling containerized applications. Benefit from streamlined platform installation and upgrades from one of the enterprise Kubernetes leaders. https://cloud.redhat.com/products/container-platform Location \u00b6 Cloud Name Cloud Description Logical Connection \u00b6 Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Logical Node \u00b6 Compute node 1 Name Compute node 1 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 2 Name Compute node 2 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute plane load balancer Name Compute plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_38v3qxufxWL network routing Control plane load balancer Name Control plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_37sFycoSa3m network routing Control Plane node 1 Name Control Plane node 1 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control plane node sizing Control Plane Deployment Topology Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 2 Name Control Plane node 2 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 3 Name Control Plane node 3 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability application runtime Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment","title":"01 Starter environment"},{"location":"IT%20System%20View/aoditsystem_r18uxVqXsBFK/#diagram","text":"","title":"Diagram"},{"location":"IT%20System%20View/aoditsystem_r18uxVqXsBFK/#name","text":"01 Starter environment","title":"Name"},{"location":"IT%20System%20View/aoditsystem_r18uxVqXsBFK/#description","text":"This is the minimal topology for a Red Hat\u00ae OpenShift\u00ae Container Platform v4.x: 3 master1 nodes 2 worker nodes There is no persistent storage solution, as this is focused on stateless and ephemeral workloads. The typical use cases are: Development Test","title":"Description"},{"location":"IT%20System%20View/aoditsystem_r18uxVqXsBFK/#element","text":"Expand all","title":"Element"},{"location":"IT%20System%20View/aoditsystem_r18uxVqXsBFK/#actor","text":"","title":"Actor"},{"location":"IT%20System%20View/aoditsystem_r18uxVqXsBFK/#subsystem","text":"Compute Plane Name Compute Plane Description A physical server that acts as a hypervisor and contains the processing capabilities required to run virtual machines in the environment. A basic RHOSP environment requires at least one Compute node. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.0/html/director_installation_and_usage/planning-your-overcloud Control Plane Name Control Plane Description The control plane, which is composed of control plane machines, manages the OpenShift Container Platform cluster. The control plane machines manage workloads on the compute machines, which are also known as worker machines. The cluster itself manages all upgrades to the machines by the actions of the Cluster Version Operator, the Machine Config Operator, and a set of individual Operators. https://docs.openshift.com/container-platform/4.1/architecture/control-plane.html Red Hat OpenShift Container Platform Name Red Hat OpenShift Container Platform Description Red Hat\u00ae OpenShift\u00ae offers a consistent hybrid cloud foundation for building and scaling containerized applications. Benefit from streamlined platform installation and upgrades from one of the enterprise Kubernetes leaders. https://cloud.redhat.com/products/container-platform","title":"Subsystem"},{"location":"IT%20System%20View/aoditsystem_r18uxVqXsBFK/#location","text":"Cloud Name Cloud Description","title":"Location"},{"location":"IT%20System%20View/aoditsystem_r18uxVqXsBFK/#logical-connection","text":"Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description","title":"Logical Connection"},{"location":"IT%20System%20View/aoditsystem_r18uxVqXsBFK/#logical-node","text":"Compute node 1 Name Compute node 1 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 2 Name Compute node 2 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute plane load balancer Name Compute plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_38v3qxufxWL network routing Control plane load balancer Name Control plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_37sFycoSa3m network routing Control Plane node 1 Name Control Plane node 1 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control plane node sizing Control Plane Deployment Topology Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 2 Name Control Plane node 2 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 3 Name Control Plane node 3 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability application runtime Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment","title":"Logical Node"},{"location":"IT%20System%20View/aoditsystem_rk9c-3BtF/","text":"Diagram \u00b6 Name \u00b6 05 Two clusters on-premises Description \u00b6 Requirement: Higher availability of the on-premises solution. => Deploy clusters in different data centers. Number of nodes per clusters: 3 master1 nodes 3 worker nodes 3 infrastructure nodes (Elasticsearch requires 3 instances, one per node) 3 storage nodes Note: The number of nodes and their sizing can be adjusted depending on the workload target. See the capacity sizing chapter. Minimum 2 clusters, one per DC. Use the previous architecture reference (3) for cluster(s) on each region. Typical use case: On-premises Production. Element \u00b6 Expand all Actor \u00b6 External Storage Name External Storage Description Storage for persistent volumes is provided by an external tier solution. Not embedded into the Red Hat OpenShift Container Platform cluster. It could be, but not limited to: NFS server (not recommended for production) VMware\u00ae Vsphere\u00ae Volumes https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture Type IT System Generic Group Subsystem \u00b6 Compute Plane A Name Compute Plane A Description A physical server that acts as a hypervisor and contains the processing capabilities required to run virtual machines in the environment. A basic RHOSP environment requires at least one Compute node. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.0/html/director_installation_and_usage/planning-your-overcloud Compute Plane B Name Compute Plane B Description A physical server that acts as a hypervisor and contains the processing capabilities required to run virtual machines in the environment. A basic RHOSP environment requires at least one Compute node. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.0/html/director_installation_and_usage/planning-your-overcloud Control Plane A Name Control Plane A Description The control plane, which is composed of master machines, manages the OpenShift Container Platform cluster. https://docs.openshift.com/container-platform/4.1/architecture/control-plane.html Control Plane B Name Control Plane B Description The control plane, which is composed of master machines, manages the OpenShift Container Platform cluster. https://docs.openshift.com/container-platform/4.1/architecture/control-plane.html Infrastructure Plane A Name Infrastructure Plane A Description You can use infrastructure machine sets to create machines that host only infrastructure components, such as the default router, the integrated container image registry, and the components for cluster metrics and monitoring. These infrastructure machines are not counted toward the total number of subscriptions that are required to run the environment. https://docs.openshift.com/container-platform/4.7/machine_management/creating-infrastructure-machinesets.html Infrastructure Plane B Name Infrastructure Plane B Description You can use infrastructure machine sets to create machines that host only infrastructure components, such as the default router, the integrated container image registry, and the components for cluster metrics and monitoring. These infrastructure machines are not counted toward the total number of subscriptions that are required to run the environment. https://docs.openshift.com/container-platform/4.7/machine_management/creating-infrastructure-machinesets.html Red Hat OpenShift Container Platform A Name Red Hat OpenShift Container Platform A Description Red Hat\u00ae OpenShift\u00ae offers a consistent hybrid cloud foundation for building and scaling containerized applications. Benefit from streamlined platform installation and upgrades from one of the enterprise Kubernetes leaders. https://cloud.redhat.com/products/container-platform Red Hat OpenShift Container Platform B Name Red Hat OpenShift Container Platform B Description Red Hat\u00ae OpenShift\u00ae offers a consistent hybrid cloud foundation for building and scaling containerized applications. Benefit from streamlined platform installation and upgrades from one of the enterprise Kubernetes leaders. https://cloud.redhat.com/products/container-platform Storage Plane B Name Storage Plane B Description It provides file, block, and object storage classes, enabling a wide range of data modalities and workloads, including: Data at rest, such as databases and data warehouses. Data in motion, automating data pipelines. Data in action, providing services for continuous deployment models, analytics, artificial intelligence (AI), and machine learning (ML). https://www.redhat.com/en/resources/openshift-data-foundation-datasheet Stroage Plane A Name Stroage Plane A Description It provides file, block, and object storage classes, enabling a wide range of data modalities and workloads, including: Data at rest, such as databases and data warehouses. Data in motion, automating data pipelines. Data in action, providing services for continuous deployment models, analytics, artificial intelligence (AI), and machine learning (ML). https://www.redhat.com/en/resources/openshift-data-foundation-datasheet Location \u00b6 Data Center 1 Name Data Center 1 Description Data Center 2 Name Data Center 2 Description Enterprise Network Name Enterprise Network Description Logical Connection \u00b6 Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Logical Node \u00b6 Compute node 1 Name Compute node 1 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 2 Name Compute node 2 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 3 Name Compute node 3 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements container image Compute plane load balancer Name Compute plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_38v3qxufxWL network routing Control plane load balancer Name Control plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_37sFycoSa3m network routing Control Plane node 1 Name Control Plane node 1 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control plane node sizing Control Plane Deployment Topology Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 2 Name Control Plane node 2 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 3 Name Control Plane node 3 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability application runtime Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Global load Balancer Name Global load Balancer Description A global load balancer is a DNS server that makes load balancing decisions based on a number of factors. As we know, DNS servers resolve a Fully Qualified Domain Name (FQDN) to one or more IP addresses that represent the location for the service. If the service exists in multiple locations, normally a DNS request will return a list of IPs leaving the choice of which IP address to use up to the client. A global load balancer differs from a standard DNS server as it makes a load balancing decision by returning only one of the available IP addresses. https://cloud.redhat.com/blog/global-load-balancer-for-openshift-clusters-an-operator-based-approach Type Primary Capability network routing Implementation IBM Cloud Internet Services Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 06 Two clusters on two regions 05 Two clusters on-premises Related Elements network routing SYS_DU_37sI4BO5I63 Infra node 1 Name Infra node 1 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 2 Name Infra node 2 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 3 Name Infra node 3 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 1 Name Storage node 1 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 2 Name Storage node 2 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Persistent Storage Options for Applications Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 3 Name Storage node 3 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Storage Technology for Metrics & Logging Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform","title":"05 Two clusters on-premises"},{"location":"IT%20System%20View/aoditsystem_rk9c-3BtF/#diagram","text":"","title":"Diagram"},{"location":"IT%20System%20View/aoditsystem_rk9c-3BtF/#name","text":"05 Two clusters on-premises","title":"Name"},{"location":"IT%20System%20View/aoditsystem_rk9c-3BtF/#description","text":"Requirement: Higher availability of the on-premises solution. => Deploy clusters in different data centers. Number of nodes per clusters: 3 master1 nodes 3 worker nodes 3 infrastructure nodes (Elasticsearch requires 3 instances, one per node) 3 storage nodes Note: The number of nodes and their sizing can be adjusted depending on the workload target. See the capacity sizing chapter. Minimum 2 clusters, one per DC. Use the previous architecture reference (3) for cluster(s) on each region. Typical use case: On-premises Production.","title":"Description"},{"location":"IT%20System%20View/aoditsystem_rk9c-3BtF/#element","text":"Expand all","title":"Element"},{"location":"IT%20System%20View/aoditsystem_rk9c-3BtF/#actor","text":"External Storage Name External Storage Description Storage for persistent volumes is provided by an external tier solution. Not embedded into the Red Hat OpenShift Container Platform cluster. It could be, but not limited to: NFS server (not recommended for production) VMware\u00ae Vsphere\u00ae Volumes https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture Type IT System Generic Group","title":"Actor"},{"location":"IT%20System%20View/aoditsystem_rk9c-3BtF/#subsystem","text":"Compute Plane A Name Compute Plane A Description A physical server that acts as a hypervisor and contains the processing capabilities required to run virtual machines in the environment. A basic RHOSP environment requires at least one Compute node. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.0/html/director_installation_and_usage/planning-your-overcloud Compute Plane B Name Compute Plane B Description A physical server that acts as a hypervisor and contains the processing capabilities required to run virtual machines in the environment. A basic RHOSP environment requires at least one Compute node. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.0/html/director_installation_and_usage/planning-your-overcloud Control Plane A Name Control Plane A Description The control plane, which is composed of master machines, manages the OpenShift Container Platform cluster. https://docs.openshift.com/container-platform/4.1/architecture/control-plane.html Control Plane B Name Control Plane B Description The control plane, which is composed of master machines, manages the OpenShift Container Platform cluster. https://docs.openshift.com/container-platform/4.1/architecture/control-plane.html Infrastructure Plane A Name Infrastructure Plane A Description You can use infrastructure machine sets to create machines that host only infrastructure components, such as the default router, the integrated container image registry, and the components for cluster metrics and monitoring. These infrastructure machines are not counted toward the total number of subscriptions that are required to run the environment. https://docs.openshift.com/container-platform/4.7/machine_management/creating-infrastructure-machinesets.html Infrastructure Plane B Name Infrastructure Plane B Description You can use infrastructure machine sets to create machines that host only infrastructure components, such as the default router, the integrated container image registry, and the components for cluster metrics and monitoring. These infrastructure machines are not counted toward the total number of subscriptions that are required to run the environment. https://docs.openshift.com/container-platform/4.7/machine_management/creating-infrastructure-machinesets.html Red Hat OpenShift Container Platform A Name Red Hat OpenShift Container Platform A Description Red Hat\u00ae OpenShift\u00ae offers a consistent hybrid cloud foundation for building and scaling containerized applications. Benefit from streamlined platform installation and upgrades from one of the enterprise Kubernetes leaders. https://cloud.redhat.com/products/container-platform Red Hat OpenShift Container Platform B Name Red Hat OpenShift Container Platform B Description Red Hat\u00ae OpenShift\u00ae offers a consistent hybrid cloud foundation for building and scaling containerized applications. Benefit from streamlined platform installation and upgrades from one of the enterprise Kubernetes leaders. https://cloud.redhat.com/products/container-platform Storage Plane B Name Storage Plane B Description It provides file, block, and object storage classes, enabling a wide range of data modalities and workloads, including: Data at rest, such as databases and data warehouses. Data in motion, automating data pipelines. Data in action, providing services for continuous deployment models, analytics, artificial intelligence (AI), and machine learning (ML). https://www.redhat.com/en/resources/openshift-data-foundation-datasheet Stroage Plane A Name Stroage Plane A Description It provides file, block, and object storage classes, enabling a wide range of data modalities and workloads, including: Data at rest, such as databases and data warehouses. Data in motion, automating data pipelines. Data in action, providing services for continuous deployment models, analytics, artificial intelligence (AI), and machine learning (ML). https://www.redhat.com/en/resources/openshift-data-foundation-datasheet","title":"Subsystem"},{"location":"IT%20System%20View/aoditsystem_rk9c-3BtF/#location","text":"Data Center 1 Name Data Center 1 Description Data Center 2 Name Data Center 2 Description Enterprise Network Name Enterprise Network Description","title":"Location"},{"location":"IT%20System%20View/aoditsystem_rk9c-3BtF/#logical-connection","text":"Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description","title":"Logical Connection"},{"location":"IT%20System%20View/aoditsystem_rk9c-3BtF/#logical-node","text":"Compute node 1 Name Compute node 1 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 2 Name Compute node 2 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 3 Name Compute node 3 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements container image Compute plane load balancer Name Compute plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_38v3qxufxWL network routing Control plane load balancer Name Control plane load balancer Description Use a load balancer service to distribute traffic among your application servers residing locally within data center. https://cloud.ibm.com/catalog/infrastructure/load-balancer-group Type Primary Capability network routing Implementation IBM Cloud Load Balancers Architectural Decision Load Balancer Selection Non Functional Requirement Load balancing Generic Group Sub-level Diagram Related Diagrams 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Load balancing 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Load Balancer Selection 08 Red Hat OpenShift on IBM Cloud on VPC 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 02 Three nodes cluster 01 Starter environment SYS_DU_37sFycoSa3m network routing Control Plane node 1 Name Control Plane node 1 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control plane node sizing Control Plane Deployment Topology Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 2 Name Control Plane node 2 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 3 Name Control Plane node 3 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability application runtime Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Global load Balancer Name Global load Balancer Description A global load balancer is a DNS server that makes load balancing decisions based on a number of factors. As we know, DNS servers resolve a Fully Qualified Domain Name (FQDN) to one or more IP addresses that represent the location for the service. If the service exists in multiple locations, normally a DNS request will return a list of IPs leaving the choice of which IP address to use up to the client. A global load balancer differs from a standard DNS server as it makes a load balancing decision by returning only one of the available IP addresses. https://cloud.redhat.com/blog/global-load-balancer-for-openshift-clusters-an-operator-based-approach Type Primary Capability network routing Implementation IBM Cloud Internet Services Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 06 Two clusters on two regions 05 Two clusters on-premises Related Elements network routing SYS_DU_37sI4BO5I63 Infra node 1 Name Infra node 1 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 2 Name Infra node 2 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 3 Name Infra node 3 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 1 Name Storage node 1 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 2 Name Storage node 2 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Persistent Storage Options for Applications Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 3 Name Storage node 3 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Storage Technology for Metrics & Logging Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform","title":"Logical Node"},{"location":"IT%20System%20View/aoditsystem_rkfCxWPYY/","text":"Diagram \u00b6 Name \u00b6 09 Azure Description \u00b6 Requirement: Higher availability solution. Deploy cluster over availability zones (AZ). Number of AZ: 3 This topology has been tested and validated on public cloud: Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform, and IBM Cloud\u00ae. Nodes are spread over the 3 AZ. Number of nodes: 3 master1 nodes 3 worker nodes 3 infrastructure nodes Note: The number of nodes and their sizing can be adjusted depending on the workload target. See the capacity sizing chapter. Typical use cases: Development Test Integration Production with limited SLA Element \u00b6 Expand all Actor \u00b6 Subsystem \u00b6 Subnet:Master Name Subnet:Master Description A subnet is a range of IP addresses in the virtual network. You can divide a virtual network into multiple subnets for organization and security. https://docs.microsoft.com/en-us/azure/virtual-network/network-overview Subnet:Worker Name Subnet:Worker Description A subnet is a range of IP addresses in the virtual network. You can divide a virtual network into multiple subnets for organization and security. https://docs.microsoft.com/en-us/azure/virtual-network/network-overview Location \u00b6 AZ1 Name AZ1 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ2 Name AZ2 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ3 Name AZ3 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture Azure Name Azure Description Region Name Region Description Logical Connection \u00b6 Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Logical Node \u00b6 *.apps.cluster.domain Name *.apps.cluster.domain Description Type Primary Capability network routing Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 09 Azure Related Elements network routing api-int.cluster.domain Name api-int.cluster.domain Description Type Primary Capability network routing Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 09 Azure Related Elements network routing api.cluster.domain Name api.cluster.domain Description Type Primary Capability network routing Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 09 Azure Related Elements network routing Azure disk Name Azure disk Description Azure managed disks are block-level storage volumes that are managed by Azure and used with Azure Virtual Machines. Managed disks are like a physical disk in an on-premises server but, virtualized. With managed disks, all you have to do is specify the disk size, the disk type, and provision the disk. Once you provision the disk, Azure handles the rest. The available types of disks are ultra disks, premium solid-state drives (SSD), standard SSDs, and standard hard disk drives (HDD). https://docs.microsoft.com/en-us/azure/virtual-machines/managed-disks-overview Type Primary Capability virtualization Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 09 Azure Related Elements Azure Files Name Azure Files Description Azure Files offers fully managed file shares in the cloud that are accessible via the industry standard Server Message Block (SMB) protocol or Network File System (NFS) protocol. Azure Files file shares can be mounted concurrently by cloud or on-premises deployments. SMB Azure file shares are accessible from Windows, Linux, and macOS clients. NFS Azure Files shares are accessible from Linux or macOS clients. Additionally, SMB Azure file shares can be cached on Windows Servers with Azure File Sync for fast access near where the data is being used. https://docs.microsoft.com/en-us/azure/storage/files/storage-files-introduction Type Primary Capability collect Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 09 Azure Related Elements Compute node 1 Name Compute node 1 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 2 Name Compute node 2 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 3 Name Compute node 3 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements container image Control Plane node 1 Name Control Plane node 1 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control plane node sizing Control Plane Deployment Topology Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 2 Name Control Plane node 2 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 3 Name Control Plane node 3 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability application runtime Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Infra node 1 Name Infra node 1 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 2 Name Infra node 2 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 3 Name Infra node 3 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 1 Name Storage node 1 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 2 Name Storage node 2 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Persistent Storage Options for Applications Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 3 Name Storage node 3 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Storage Technology for Metrics & Logging Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform VNET Name VNET Description Azure Virtual Network (VNet) is the fundamental building block for your private network in Azure. VNet enables many types of Azure resources, such as Azure Virtual Machines (VM), to securely communicate with each other, the internet, and on-premises networks. VNet is similar to a traditional network that you'd operate in your own data center, but brings with it additional benefits of Azure's infrastructure such as scale, availability, and isolation. https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview Type Primary Capability network routing Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 09 Azure Related Elements network routing","title":"09 Azure"},{"location":"IT%20System%20View/aoditsystem_rkfCxWPYY/#diagram","text":"","title":"Diagram"},{"location":"IT%20System%20View/aoditsystem_rkfCxWPYY/#name","text":"09 Azure","title":"Name"},{"location":"IT%20System%20View/aoditsystem_rkfCxWPYY/#description","text":"Requirement: Higher availability solution. Deploy cluster over availability zones (AZ). Number of AZ: 3 This topology has been tested and validated on public cloud: Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform, and IBM Cloud\u00ae. Nodes are spread over the 3 AZ. Number of nodes: 3 master1 nodes 3 worker nodes 3 infrastructure nodes Note: The number of nodes and their sizing can be adjusted depending on the workload target. See the capacity sizing chapter. Typical use cases: Development Test Integration Production with limited SLA","title":"Description"},{"location":"IT%20System%20View/aoditsystem_rkfCxWPYY/#element","text":"Expand all","title":"Element"},{"location":"IT%20System%20View/aoditsystem_rkfCxWPYY/#actor","text":"","title":"Actor"},{"location":"IT%20System%20View/aoditsystem_rkfCxWPYY/#subsystem","text":"Subnet:Master Name Subnet:Master Description A subnet is a range of IP addresses in the virtual network. You can divide a virtual network into multiple subnets for organization and security. https://docs.microsoft.com/en-us/azure/virtual-network/network-overview Subnet:Worker Name Subnet:Worker Description A subnet is a range of IP addresses in the virtual network. You can divide a virtual network into multiple subnets for organization and security. https://docs.microsoft.com/en-us/azure/virtual-network/network-overview","title":"Subsystem"},{"location":"IT%20System%20View/aoditsystem_rkfCxWPYY/#location","text":"AZ1 Name AZ1 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ2 Name AZ2 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture AZ3 Name AZ3 Description The requirement is a high-available solution. Deploy cluster over availability zones (AZ). Storage solution is managed by Cloud provider across AZ. This topology has been tested and validated on public cloud, such as Amazon Web Services (AWS), Microsoft\u00ae Azure\u00ae, Google Cloud Platform (GCP), and IBM Cloud\u00ae. Candidate storage solutions: IBM Cloud Storage, Amazon Elastic Block Store, Azure Files https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-reference-architecture Azure Name Azure Description Region Name Region Description","title":"Location"},{"location":"IT%20System%20View/aoditsystem_rkfCxWPYY/#logical-connection","text":"Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description Name Description","title":"Logical Connection"},{"location":"IT%20System%20View/aoditsystem_rkfCxWPYY/#logical-node","text":"*.apps.cluster.domain Name *.apps.cluster.domain Description Type Primary Capability network routing Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 09 Azure Related Elements network routing api-int.cluster.domain Name api-int.cluster.domain Description Type Primary Capability network routing Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 09 Azure Related Elements network routing api.cluster.domain Name api.cluster.domain Description Type Primary Capability network routing Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 09 Azure Related Elements network routing Azure disk Name Azure disk Description Azure managed disks are block-level storage volumes that are managed by Azure and used with Azure Virtual Machines. Managed disks are like a physical disk in an on-premises server but, virtualized. With managed disks, all you have to do is specify the disk size, the disk type, and provision the disk. Once you provision the disk, Azure handles the rest. The available types of disks are ultra disks, premium solid-state drives (SSD), standard SSDs, and standard hard disk drives (HDD). https://docs.microsoft.com/en-us/azure/virtual-machines/managed-disks-overview Type Primary Capability virtualization Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 09 Azure Related Elements Azure Files Name Azure Files Description Azure Files offers fully managed file shares in the cloud that are accessible via the industry standard Server Message Block (SMB) protocol or Network File System (NFS) protocol. Azure Files file shares can be mounted concurrently by cloud or on-premises deployments. SMB Azure file shares are accessible from Windows, Linux, and macOS clients. NFS Azure Files shares are accessible from Linux or macOS clients. Additionally, SMB Azure file shares can be cached on Windows Servers with Azure File Sync for fast access near where the data is being used. https://docs.microsoft.com/en-us/azure/storage/files/storage-files-introduction Type Primary Capability collect Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 09 Azure Related Elements Compute node 1 Name Compute node 1 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 2 Name Compute node 2 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements container image Compute node 3 Name Compute node 3 Description Compute nodes are responsible for running virtual machine instances after they are launched. Compute nodes require bare metal systems that support hardware virtualization. Compute nodes must also have enough memory and disk space to support the requirements of the virtual machine instances that they host. https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/10/html/director_installation_and_usage/chap-requirements Type Primary Capability container image Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements container image Control Plane node 1 Name Control Plane node 1 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control plane node sizing Control Plane Deployment Topology Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 2 Name Control Plane node 2 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability container platform Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment container platform Control Plane node 3 Name Control Plane node 3 Description In a Kubernetes cluster, the control plane nodes run services that are required to control the Kubernetes cluster. They contain more than just the Kubernetes services for managing the OpenShift Container Platform cluster. Instead of being grouped into a MachineSet, control plane machines are defined by a series of standalone machine API resources. Extra controls apply to control plane machines to prevent you from deleting all control plane machines and breaking your cluster. https://docs.openshift.com/container-platform/4.9/architecture/control-plane.html Type Primary Capability application runtime Implementation Architectural Decision Control Plane Deployment Topology Hosting Platform and Managed or Self-Managed Service Control plane node sizing Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Related Elements Control Plane Deployment Topology 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Hosting Platform and Managed or Self-Managed Service 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Control plane node sizing 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster 01 Starter environment Infra node 1 Name Infra node 1 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 2 Name Infra node 2 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Infra node 3 Name Infra node 3 Description It is recommended to separate the infrastructure nodes for monitoring, logging, metrics, registry, and router components. Therefore, the recommendation is to dedicate three infrastructure nodes for these functionalities. See this link from Red Hat Documentation for more details about Creating Infrastructure Machine Set. Separating these functionalities in a dedicated infrastructure machine set will free up more space in your worker nodes for your workload to run. Additionally, these infrastructure nodes don't consume from the customer's Red Hat OpenShift subscription, which is why you should consider having them separated. Collocating management functions may be feasible when performance is not required, such as in Dev/Test environments, to save the infrastructure-related costs. https://www.ibm.com/cloud/architecture/articles/ibmaot-redhat-openshift/02-solutions-guide-solution-design-solution-architecture Type Primary Capability container platform Implementation Architectural Decision Management Service Placement Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Management Service Placement 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 1 Name Storage node 1 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 2 Name Storage node 2 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Persistent Storage Options for Applications Storage Technology for Metrics & Logging Storage Technology for Red Hat OpenShift Cluster Platform Registry Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform Storage node 3 Name Storage node 3 Description Storage for persistent volumes is embedded into the cluster and managed as containers. Some examples are: Rook Ceph Red Hat OpenShift Data Foundation Portworx Dedication of storage nodes. Isolate storage workload on specific nodes. There are pods, deployed on the cluster that are managing access to storage resource. Alternative: storage nodes could be merged with compute nodes (min 3 worker nodes) but it could have impacts on performance. Type Primary Capability container platform Implementation Architectural Decision Storage Technology for Red Hat OpenShift Cluster Platform Registry Persistent Storage Options for Applications Storage Technology for Metrics & Logging Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Related Elements Storage Technology for Red Hat OpenShift Cluster Platform Registry 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Persistent Storage Options for Applications 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster Storage Technology for Metrics & Logging 08 Red Hat OpenShift on IBM Cloud on VPC 09 Azure 07 AWS 06 Two clusters on two regions 05 Two clusters on-premises 04 Cloud cluster 03 On-premises cluster container platform VNET Name VNET Description Azure Virtual Network (VNet) is the fundamental building block for your private network in Azure. VNet enables many types of Azure resources, such as Azure Virtual Machines (VM), to securely communicate with each other, the internet, and on-premises networks. VNet is similar to a traditional network that you'd operate in your own data center, but brings with it additional benefits of Azure's infrastructure such as scale, availability, and isolation. https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview Type Primary Capability network routing Implementation Architectural Decision Non Functional Requirement Generic Group Sub-level Diagram Related Diagrams 09 Azure Related Elements network routing","title":"Logical Node"},{"location":"Misc%20Diagram/miscdiagram_BkpSgVq7iHFF/","text":"Diagram \u00b6 Name \u00b6 On-prem-multi-sites-environment Description \u00b6 Label \u00b6","title":"On-prem-multi-sites-environment"},{"location":"Misc%20Diagram/miscdiagram_BkpSgVq7iHFF/#diagram","text":"","title":"Diagram"},{"location":"Misc%20Diagram/miscdiagram_BkpSgVq7iHFF/#name","text":"On-prem-multi-sites-environment","title":"Name"},{"location":"Misc%20Diagram/miscdiagram_BkpSgVq7iHFF/#description","text":"","title":"Description"},{"location":"Misc%20Diagram/miscdiagram_BkpSgVq7iHFF/#label","text":"","title":"Label"},{"location":"Misc%20Diagram/miscdiagram_Bkvrx45XiHYF/","text":"Diagram \u00b6 Name \u00b6 Infra-node-env-embedded-storage Description \u00b6 Label \u00b6","title":"Infra-node-env-embedded-storage"},{"location":"Misc%20Diagram/miscdiagram_Bkvrx45XiHYF/#diagram","text":"","title":"Diagram"},{"location":"Misc%20Diagram/miscdiagram_Bkvrx45XiHYF/#name","text":"Infra-node-env-embedded-storage","title":"Name"},{"location":"Misc%20Diagram/miscdiagram_Bkvrx45XiHYF/#description","text":"","title":"Description"},{"location":"Misc%20Diagram/miscdiagram_Bkvrx45XiHYF/#label","text":"","title":"Label"},{"location":"Misc%20Diagram/miscdiagram_H1KNlN97jSKY/","text":"Diagram \u00b6 Name \u00b6 OM - Prescribed View Description \u00b6 Label \u00b6","title":"OM - Prescribed View"},{"location":"Misc%20Diagram/miscdiagram_H1KNlN97jSKY/#diagram","text":"","title":"Diagram"},{"location":"Misc%20Diagram/miscdiagram_H1KNlN97jSKY/#name","text":"OM - Prescribed View","title":"Name"},{"location":"Misc%20Diagram/miscdiagram_H1KNlN97jSKY/#description","text":"","title":"Description"},{"location":"Misc%20Diagram/miscdiagram_H1KNlN97jSKY/#label","text":"","title":"Label"},{"location":"Misc%20Diagram/miscdiagram_H1kIlN5QsrFt/","text":"Diagram \u00b6 Name \u00b6 On-prem-multi-sites-env-embedded-storage Description \u00b6 Label \u00b6","title":"On-prem-multi-sites-env-embedded-storage"},{"location":"Misc%20Diagram/miscdiagram_H1kIlN5QsrFt/#diagram","text":"","title":"Diagram"},{"location":"Misc%20Diagram/miscdiagram_H1kIlN5QsrFt/#name","text":"On-prem-multi-sites-env-embedded-storage","title":"Name"},{"location":"Misc%20Diagram/miscdiagram_H1kIlN5QsrFt/#description","text":"","title":"Description"},{"location":"Misc%20Diagram/miscdiagram_H1kIlN5QsrFt/#label","text":"","title":"Label"},{"location":"Misc%20Diagram/miscdiagram_HJJrxEcQirtY/","text":"Diagram \u00b6 Name \u00b6 Embeded-storage-environment Description \u00b6 Label \u00b6","title":"Embeded-storage-environment"},{"location":"Misc%20Diagram/miscdiagram_HJJrxEcQirtY/#diagram","text":"","title":"Diagram"},{"location":"Misc%20Diagram/miscdiagram_HJJrxEcQirtY/#name","text":"Embeded-storage-environment","title":"Name"},{"location":"Misc%20Diagram/miscdiagram_HJJrxEcQirtY/#description","text":"","title":"Description"},{"location":"Misc%20Diagram/miscdiagram_HJJrxEcQirtY/#label","text":"","title":"Label"},{"location":"Misc%20Diagram/miscdiagram_HJKHg4cXjStt/","text":"Diagram \u00b6 Name \u00b6 Az-public-cloud-environment Description \u00b6 Label \u00b6","title":"Az-public-cloud-environment"},{"location":"Misc%20Diagram/miscdiagram_HJKHg4cXjStt/#diagram","text":"","title":"Diagram"},{"location":"Misc%20Diagram/miscdiagram_HJKHg4cXjStt/#name","text":"Az-public-cloud-environment","title":"Name"},{"location":"Misc%20Diagram/miscdiagram_HJKHg4cXjStt/#description","text":"","title":"Description"},{"location":"Misc%20Diagram/miscdiagram_HJKHg4cXjStt/#label","text":"","title":"Label"},{"location":"Misc%20Diagram/miscdiagram_HJsVeEq7jHFt/","text":"Diagram \u00b6 Name \u00b6 Minimal-environment Description \u00b6 Label \u00b6","title":"Minimal-environment"},{"location":"Misc%20Diagram/miscdiagram_HJsVeEq7jHFt/#diagram","text":"","title":"Diagram"},{"location":"Misc%20Diagram/miscdiagram_HJsVeEq7jHFt/#name","text":"Minimal-environment","title":"Name"},{"location":"Misc%20Diagram/miscdiagram_HJsVeEq7jHFt/#description","text":"","title":"Description"},{"location":"Misc%20Diagram/miscdiagram_HJsVeEq7jHFt/#label","text":"","title":"Label"},{"location":"Misc%20Diagram/miscdiagram_HkBLeVcmsBYF/","text":"Diagram \u00b6 Name \u00b6 Legend Description \u00b6 Label \u00b6","title":"Legend"},{"location":"Misc%20Diagram/miscdiagram_HkBLeVcmsBYF/#diagram","text":"","title":"Diagram"},{"location":"Misc%20Diagram/miscdiagram_HkBLeVcmsBYF/#name","text":"Legend","title":"Name"},{"location":"Misc%20Diagram/miscdiagram_HkBLeVcmsBYF/#description","text":"","title":"Description"},{"location":"Misc%20Diagram/miscdiagram_HkBLeVcmsBYF/#label","text":"","title":"Label"},{"location":"Misc%20Diagram/miscdiagram_S1bHxE9QiHtt/","text":"Diagram \u00b6 Name \u00b6 Az-public-cloud-env-external-storage Description \u00b6 Label \u00b6","title":"Az-public-cloud-env-external-storage"},{"location":"Misc%20Diagram/miscdiagram_S1bHxE9QiHtt/#diagram","text":"","title":"Diagram"},{"location":"Misc%20Diagram/miscdiagram_S1bHxE9QiHtt/#name","text":"Az-public-cloud-env-external-storage","title":"Name"},{"location":"Misc%20Diagram/miscdiagram_S1bHxE9QiHtt/#description","text":"","title":"Description"},{"location":"Misc%20Diagram/miscdiagram_S1bHxE9QiHtt/#label","text":"","title":"Label"},{"location":"Misc%20Diagram/miscdiagram_SJ78x49QoHYY/","text":"Diagram \u00b6 Name \u00b6 Multi-region-public-cloud-environment Description \u00b6 Label \u00b6","title":"Multi-region-public-cloud-environment"},{"location":"Misc%20Diagram/miscdiagram_SJ78x49QoHYY/#diagram","text":"","title":"Diagram"},{"location":"Misc%20Diagram/miscdiagram_SJ78x49QoHYY/#name","text":"Multi-region-public-cloud-environment","title":"Name"},{"location":"Misc%20Diagram/miscdiagram_SJ78x49QoHYY/#description","text":"","title":"Description"},{"location":"Misc%20Diagram/miscdiagram_SJ78x49QoHYY/#label","text":"","title":"Label"},{"location":"Misc%20Diagram/miscdiagram_SJW8gEqXjStK/","text":"Diagram \u00b6 Name \u00b6 test Description \u00b6 Label \u00b6","title":"test"},{"location":"Misc%20Diagram/miscdiagram_SJW8gEqXjStK/#diagram","text":"","title":"Diagram"},{"location":"Misc%20Diagram/miscdiagram_SJW8gEqXjStK/#name","text":"test","title":"Name"},{"location":"Misc%20Diagram/miscdiagram_SJW8gEqXjStK/#description","text":"","title":"Description"},{"location":"Misc%20Diagram/miscdiagram_SJW8gEqXjStK/#label","text":"","title":"Label"},{"location":"Misc%20Diagram/miscdiagram_SkXHeVqmjBtt/","text":"Diagram \u00b6 Name \u00b6 Az-public-cloud-env-embedded-storage Description \u00b6 Label \u00b6","title":"Az-public-cloud-env-embedded-storage"},{"location":"Misc%20Diagram/miscdiagram_SkXHeVqmjBtt/#diagram","text":"","title":"Diagram"},{"location":"Misc%20Diagram/miscdiagram_SkXHeVqmjBtt/#name","text":"Az-public-cloud-env-embedded-storage","title":"Name"},{"location":"Misc%20Diagram/miscdiagram_SkXHeVqmjBtt/#description","text":"","title":"Description"},{"location":"Misc%20Diagram/miscdiagram_SkXHeVqmjBtt/#label","text":"","title":"Label"},{"location":"Misc%20Diagram/miscdiagram_Sy64xN97iHtt/","text":"Diagram \u00b6 Name \u00b6 External-storage-environment Description \u00b6 Label \u00b6","title":"External-storage-environment"},{"location":"Misc%20Diagram/miscdiagram_Sy64xN97iHtt/#diagram","text":"","title":"Diagram"},{"location":"Misc%20Diagram/miscdiagram_Sy64xN97iHtt/#name","text":"External-storage-environment","title":"Name"},{"location":"Misc%20Diagram/miscdiagram_Sy64xN97iHtt/#description","text":"","title":"Description"},{"location":"Misc%20Diagram/miscdiagram_Sy64xN97iHtt/#label","text":"","title":"Label"},{"location":"Misc%20Diagram/miscdiagram_SysHgN9mjSFt/","text":"Diagram \u00b6 Name \u00b6 Az-public-cloud-env-infra-embedded-storage Description \u00b6 Label \u00b6","title":"Az-public-cloud-env-infra-embedded-storage"},{"location":"Misc%20Diagram/miscdiagram_SysHgN9mjSFt/#diagram","text":"","title":"Diagram"},{"location":"Misc%20Diagram/miscdiagram_SysHgN9mjSFt/#name","text":"Az-public-cloud-env-infra-embedded-storage","title":"Name"},{"location":"Misc%20Diagram/miscdiagram_SysHgN9mjSFt/#description","text":"","title":"Description"},{"location":"Misc%20Diagram/miscdiagram_SysHgN9mjSFt/#label","text":"","title":"Label"},{"location":"Misc%20Diagram/miscdiagram_rJwElEc7srtK/","text":"Diagram \u00b6 Name \u00b6 Deployment View Description \u00b6 Label \u00b6","title":"Deployment View"},{"location":"Misc%20Diagram/miscdiagram_rJwElEc7srtK/#diagram","text":"","title":"Diagram"},{"location":"Misc%20Diagram/miscdiagram_rJwElEc7srtK/#name","text":"Deployment View","title":"Name"},{"location":"Misc%20Diagram/miscdiagram_rJwElEc7srtK/#description","text":"","title":"Description"},{"location":"Misc%20Diagram/miscdiagram_rJwElEc7srtK/#label","text":"","title":"Label"},{"location":"Misc%20Diagram/miscdiagram_rkSHl4cQsrKF/","text":"Diagram \u00b6 Name \u00b6 Infra-node-environment Description \u00b6 Label \u00b6","title":"Infra-node-environment"},{"location":"Misc%20Diagram/miscdiagram_rkSHl4cQsrKF/#diagram","text":"","title":"Diagram"},{"location":"Misc%20Diagram/miscdiagram_rkSHl4cQsrKF/#name","text":"Infra-node-environment","title":"Name"},{"location":"Misc%20Diagram/miscdiagram_rkSHl4cQsrKF/#description","text":"","title":"Description"},{"location":"Misc%20Diagram/miscdiagram_rkSHl4cQsrKF/#label","text":"","title":"Label"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1es1ZgIFK/","text":"Load balancing \u00b6 ID \u00b6 NFR-002 Name \u00b6 Load balancing Description \u00b6 OpenShift master nodes provide the core API and management services for the Kubernetes cluster. For production environments, you can implement load-balancing and heartbeat monitoring for the core services via HAproxy and Keepalived. In addition, Kubernetes handles load-balancing of the workload containers through built-in scheduler features, network routing, replication services, etc Theme \u00b6 Performance Context \u00b6 Value \u00b6 Growth Rate \u00b6 Acceptance Criteria \u00b6 Priority \u00b6 Critical Source \u00b6 Reference \u00b6 Test Method \u00b6 Owner \u00b6 Review Date \u00b6","title":"Load balancing"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1es1ZgIFK/#load-balancing","text":"","title":"Load balancing"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1es1ZgIFK/#id","text":"NFR-002","title":"ID"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1es1ZgIFK/#name","text":"Load balancing","title":"Name"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1es1ZgIFK/#description","text":"OpenShift master nodes provide the core API and management services for the Kubernetes cluster. For production environments, you can implement load-balancing and heartbeat monitoring for the core services via HAproxy and Keepalived. In addition, Kubernetes handles load-balancing of the workload containers through built-in scheduler features, network routing, replication services, etc","title":"Description"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1es1ZgIFK/#theme","text":"Performance","title":"Theme"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1es1ZgIFK/#context","text":"","title":"Context"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1es1ZgIFK/#value","text":"","title":"Value"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1es1ZgIFK/#growth-rate","text":"","title":"Growth Rate"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1es1ZgIFK/#acceptance-criteria","text":"","title":"Acceptance Criteria"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1es1ZgIFK/#priority","text":"Critical","title":"Priority"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1es1ZgIFK/#source","text":"","title":"Source"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1es1ZgIFK/#reference","text":"","title":"Reference"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1es1ZgIFK/#test-method","text":"","title":"Test Method"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1es1ZgIFK/#owner","text":"","title":"Owner"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1es1ZgIFK/#review-date","text":"","title":"Review Date"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1l-lze8KF/","text":"Ease of installation \u00b6 ID \u00b6 NFR-005 Name \u00b6 Ease of installation Description \u00b6 Ansible playbooks are available to automate the OpenShift Container Platform deployment Theme \u00b6 Maintainability Context \u00b6 Value \u00b6 Growth Rate \u00b6 Acceptance Criteria \u00b6 Priority \u00b6 Critical Source \u00b6 Reference \u00b6 Test Method \u00b6 Owner \u00b6 Review Date \u00b6","title":"Ease of installation"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1l-lze8KF/#ease-of-installation","text":"","title":"Ease of installation"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1l-lze8KF/#id","text":"NFR-005","title":"ID"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1l-lze8KF/#name","text":"Ease of installation","title":"Name"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1l-lze8KF/#description","text":"Ansible playbooks are available to automate the OpenShift Container Platform deployment","title":"Description"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1l-lze8KF/#theme","text":"Maintainability","title":"Theme"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1l-lze8KF/#context","text":"","title":"Context"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1l-lze8KF/#value","text":"","title":"Value"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1l-lze8KF/#growth-rate","text":"","title":"Growth Rate"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1l-lze8KF/#acceptance-criteria","text":"","title":"Acceptance Criteria"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1l-lze8KF/#priority","text":"Critical","title":"Priority"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1l-lze8KF/#source","text":"","title":"Source"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1l-lze8KF/#reference","text":"","title":"Reference"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1l-lze8KF/#test-method","text":"","title":"Test Method"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1l-lze8KF/#owner","text":"","title":"Owner"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_H1l-lze8KF/#review-date","text":"","title":"Review Date"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HJeuRxeUKt/","text":"Fault tolerance \u00b6 ID \u00b6 NFR-003 Name \u00b6 Fault tolerance Description \u00b6 Fault tolerance can be provided to critical container workloads such as databases via Kubernetes built-in mechanisms. In addition, data and configuration settings for container images can be persisted across instances via persistent volume claims and stateful sets Theme \u00b6 Maintainability Context \u00b6 Value \u00b6 Growth Rate \u00b6 Acceptance Criteria \u00b6 Priority \u00b6 Critical Source \u00b6 Reference \u00b6 Test Method \u00b6 Owner \u00b6 Review Date \u00b6","title":"Fault tolerance"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HJeuRxeUKt/#fault-tolerance","text":"","title":"Fault tolerance"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HJeuRxeUKt/#id","text":"NFR-003","title":"ID"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HJeuRxeUKt/#name","text":"Fault tolerance","title":"Name"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HJeuRxeUKt/#description","text":"Fault tolerance can be provided to critical container workloads such as databases via Kubernetes built-in mechanisms. In addition, data and configuration settings for container images can be persisted across instances via persistent volume claims and stateful sets","title":"Description"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HJeuRxeUKt/#theme","text":"Maintainability","title":"Theme"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HJeuRxeUKt/#context","text":"","title":"Context"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HJeuRxeUKt/#value","text":"","title":"Value"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HJeuRxeUKt/#growth-rate","text":"","title":"Growth Rate"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HJeuRxeUKt/#acceptance-criteria","text":"","title":"Acceptance Criteria"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HJeuRxeUKt/#priority","text":"Critical","title":"Priority"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HJeuRxeUKt/#source","text":"","title":"Source"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HJeuRxeUKt/#reference","text":"","title":"Reference"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HJeuRxeUKt/#test-method","text":"","title":"Test Method"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HJeuRxeUKt/#owner","text":"","title":"Owner"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HJeuRxeUKt/#review-date","text":"","title":"Review Date"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HkgW8fgIKt/","text":"Flexibility \u00b6 ID \u00b6 NFR-007 Name \u00b6 Flexibility Description \u00b6 OpenShift container platform can be deployed both in a development/test setting and production setting. Various options are available for third party network and storage implementation for OpenShift. Theme \u00b6 Usability Context \u00b6 Value \u00b6 Growth Rate \u00b6 Acceptance Criteria \u00b6 Priority \u00b6 Critical Source \u00b6 Reference \u00b6 Test Method \u00b6 Owner \u00b6 Review Date \u00b6","title":"Flexibility"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HkgW8fgIKt/#flexibility","text":"","title":"Flexibility"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HkgW8fgIKt/#id","text":"NFR-007","title":"ID"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HkgW8fgIKt/#name","text":"Flexibility","title":"Name"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HkgW8fgIKt/#description","text":"OpenShift container platform can be deployed both in a development/test setting and production setting. Various options are available for third party network and storage implementation for OpenShift.","title":"Description"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HkgW8fgIKt/#theme","text":"Usability","title":"Theme"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HkgW8fgIKt/#context","text":"","title":"Context"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HkgW8fgIKt/#value","text":"","title":"Value"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HkgW8fgIKt/#growth-rate","text":"","title":"Growth Rate"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HkgW8fgIKt/#acceptance-criteria","text":"","title":"Acceptance Criteria"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HkgW8fgIKt/#priority","text":"Critical","title":"Priority"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HkgW8fgIKt/#source","text":"","title":"Source"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HkgW8fgIKt/#reference","text":"","title":"Reference"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HkgW8fgIKt/#test-method","text":"","title":"Test Method"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HkgW8fgIKt/#owner","text":"","title":"Owner"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_HkgW8fgIKt/#review-date","text":"","title":"Review Date"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_SJgeDMe8YK/","text":"Ease of management/opera tions \u00b6 ID \u00b6 NFR-006 Name \u00b6 Ease of management/opera tions Description \u00b6 Administrator tools and OpenShift Web console allow day 2 management operations to be performed. In addition, the Lenovo XClarity Administrator tool enables hardware monitoring and management. Theme \u00b6 Manageability Context \u00b6 Value \u00b6 Growth Rate \u00b6 Acceptance Criteria \u00b6 Priority \u00b6 Critical Source \u00b6 Reference \u00b6 Test Method \u00b6 Owner \u00b6 Review Date \u00b6","title":"Ease of management/opera tions"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_SJgeDMe8YK/#ease-of-managementopera-tions","text":"","title":"Ease of management/opera tions"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_SJgeDMe8YK/#id","text":"NFR-006","title":"ID"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_SJgeDMe8YK/#name","text":"Ease of management/opera tions","title":"Name"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_SJgeDMe8YK/#description","text":"Administrator tools and OpenShift Web console allow day 2 management operations to be performed. In addition, the Lenovo XClarity Administrator tool enables hardware monitoring and management.","title":"Description"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_SJgeDMe8YK/#theme","text":"Manageability","title":"Theme"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_SJgeDMe8YK/#context","text":"","title":"Context"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_SJgeDMe8YK/#value","text":"","title":"Value"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_SJgeDMe8YK/#growth-rate","text":"","title":"Growth Rate"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_SJgeDMe8YK/#acceptance-criteria","text":"","title":"Acceptance Criteria"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_SJgeDMe8YK/#priority","text":"Critical","title":"Priority"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_SJgeDMe8YK/#source","text":"","title":"Source"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_SJgeDMe8YK/#reference","text":"","title":"Reference"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_SJgeDMe8YK/#test-method","text":"","title":"Test Method"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_SJgeDMe8YK/#owner","text":"","title":"Owner"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_SJgeDMe8YK/#review-date","text":"","title":"Review Date"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_Skx_l7gIFK/","text":"High performance \u00b6 ID \u00b6 NFR-009 Name \u00b6 High performance Description \u00b6 OpenShift and Kubernetes have achieved wide industry adoption due to the robustness of the platform and high-performance. Enterprises can implement very large-scale OpenShift environments to support hundreds of users and thousands of container workloads with no performance bottlenecks Theme \u00b6 Performance Context \u00b6 Value \u00b6 Growth Rate \u00b6 Acceptance Criteria \u00b6 Priority \u00b6 Critical Source \u00b6 Reference \u00b6 Test Method \u00b6 Owner \u00b6 Review Date \u00b6","title":"High performance"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_Skx_l7gIFK/#high-performance","text":"","title":"High performance"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_Skx_l7gIFK/#id","text":"NFR-009","title":"ID"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_Skx_l7gIFK/#name","text":"High performance","title":"Name"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_Skx_l7gIFK/#description","text":"OpenShift and Kubernetes have achieved wide industry adoption due to the robustness of the platform and high-performance. Enterprises can implement very large-scale OpenShift environments to support hundreds of users and thousands of container workloads with no performance bottlenecks","title":"Description"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_Skx_l7gIFK/#theme","text":"Performance","title":"Theme"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_Skx_l7gIFK/#context","text":"","title":"Context"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_Skx_l7gIFK/#value","text":"","title":"Value"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_Skx_l7gIFK/#growth-rate","text":"","title":"Growth Rate"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_Skx_l7gIFK/#acceptance-criteria","text":"","title":"Acceptance Criteria"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_Skx_l7gIFK/#priority","text":"Critical","title":"Priority"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_Skx_l7gIFK/#source","text":"","title":"Source"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_Skx_l7gIFK/#reference","text":"","title":"Reference"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_Skx_l7gIFK/#test-method","text":"","title":"Test Method"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_Skx_l7gIFK/#owner","text":"","title":"Owner"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_Skx_l7gIFK/#review-date","text":"","title":"Review Date"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rkl9qMlUFK/","text":"Security \u00b6 ID \u00b6 NFR-008 Name \u00b6 Security Description \u00b6 Red Hat OpenShift Container Platform has built-in enterprise grade security, all the way from the operating system layer up to the container registries. Both built-in authentication/authorization facilities and external authentication/authorization integration with tools such as OpenLDAP are supported Theme \u00b6 Security Context \u00b6 Value \u00b6 Growth Rate \u00b6 Acceptance Criteria \u00b6 Priority \u00b6 Critical Source \u00b6 Reference \u00b6 Test Method \u00b6 Owner \u00b6 Review Date \u00b6","title":"Security"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rkl9qMlUFK/#security","text":"","title":"Security"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rkl9qMlUFK/#id","text":"NFR-008","title":"ID"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rkl9qMlUFK/#name","text":"Security","title":"Name"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rkl9qMlUFK/#description","text":"Red Hat OpenShift Container Platform has built-in enterprise grade security, all the way from the operating system layer up to the container registries. Both built-in authentication/authorization facilities and external authentication/authorization integration with tools such as OpenLDAP are supported","title":"Description"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rkl9qMlUFK/#theme","text":"Security","title":"Theme"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rkl9qMlUFK/#context","text":"","title":"Context"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rkl9qMlUFK/#value","text":"","title":"Value"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rkl9qMlUFK/#growth-rate","text":"","title":"Growth Rate"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rkl9qMlUFK/#acceptance-criteria","text":"","title":"Acceptance Criteria"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rkl9qMlUFK/#priority","text":"Critical","title":"Priority"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rkl9qMlUFK/#source","text":"","title":"Source"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rkl9qMlUFK/#reference","text":"","title":"Reference"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rkl9qMlUFK/#test-method","text":"","title":"Test Method"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rkl9qMlUFK/#owner","text":"","title":"Owner"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rkl9qMlUFK/#review-date","text":"","title":"Review Date"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rklMVbxUFt/","text":"Physical footprint \u00b6 ID \u00b6 NFR-004 Name \u00b6 Physical footprint Description \u00b6 OpenShift container platform can be implemented with as little as a single node where all services are consolidated and scaled through multiple physical nodes to distribute services and containers. Hence, the architecture is quite flexible and allows to start small and then scale out Theme \u00b6 Scalability Context \u00b6 Value \u00b6 Growth Rate \u00b6 Acceptance Criteria \u00b6 Priority \u00b6 Critical Source \u00b6 Reference \u00b6 Test Method \u00b6 Owner \u00b6 Review Date \u00b6","title":"Physical footprint"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rklMVbxUFt/#physical-footprint","text":"","title":"Physical footprint"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rklMVbxUFt/#id","text":"NFR-004","title":"ID"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rklMVbxUFt/#name","text":"Physical footprint","title":"Name"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rklMVbxUFt/#description","text":"OpenShift container platform can be implemented with as little as a single node where all services are consolidated and scaled through multiple physical nodes to distribute services and containers. Hence, the architecture is quite flexible and allows to start small and then scale out","title":"Description"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rklMVbxUFt/#theme","text":"Scalability","title":"Theme"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rklMVbxUFt/#context","text":"","title":"Context"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rklMVbxUFt/#value","text":"","title":"Value"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rklMVbxUFt/#growth-rate","text":"","title":"Growth Rate"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rklMVbxUFt/#acceptance-criteria","text":"","title":"Acceptance Criteria"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rklMVbxUFt/#priority","text":"Critical","title":"Priority"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rklMVbxUFt/#source","text":"","title":"Source"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rklMVbxUFt/#reference","text":"","title":"Reference"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rklMVbxUFt/#test-method","text":"","title":"Test Method"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rklMVbxUFt/#owner","text":"","title":"Owner"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_rklMVbxUFt/#review-date","text":"","title":"Review Date"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_ryY0mNqXorYt/","text":"Scalability \u00b6 ID \u00b6 NFR-001 Name \u00b6 Scalability Description \u00b6 The OpenShift Container Platform is designed for scale. The platform allows for hundreds of containerized workloads to be scheduled and run without any performance bottlenecks. The physical resources such as compute nodes and storage can be scaled as the workload and user base grows Theme \u00b6 Scalability Context \u00b6 Value \u00b6 Growth Rate \u00b6 Acceptance Criteria \u00b6 Priority \u00b6 Critical Source \u00b6 Reference \u00b6 Test Method \u00b6 Owner \u00b6 Review Date \u00b6","title":"Scalability"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_ryY0mNqXorYt/#scalability","text":"","title":"Scalability"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_ryY0mNqXorYt/#id","text":"NFR-001","title":"ID"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_ryY0mNqXorYt/#name","text":"Scalability","title":"Name"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_ryY0mNqXorYt/#description","text":"The OpenShift Container Platform is designed for scale. The platform allows for hundreds of containerized workloads to be scheduled and run without any performance bottlenecks. The physical resources such as compute nodes and storage can be scaled as the workload and user base grows","title":"Description"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_ryY0mNqXorYt/#theme","text":"Scalability","title":"Theme"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_ryY0mNqXorYt/#context","text":"","title":"Context"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_ryY0mNqXorYt/#value","text":"","title":"Value"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_ryY0mNqXorYt/#growth-rate","text":"","title":"Growth Rate"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_ryY0mNqXorYt/#acceptance-criteria","text":"","title":"Acceptance Criteria"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_ryY0mNqXorYt/#priority","text":"Critical","title":"Priority"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_ryY0mNqXorYt/#source","text":"","title":"Source"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_ryY0mNqXorYt/#reference","text":"","title":"Reference"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_ryY0mNqXorYt/#test-method","text":"","title":"Test Method"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_ryY0mNqXorYt/#owner","text":"","title":"Owner"},{"location":"Non%20Functional%20Requirements/nonfunctionalrequirement_ryY0mNqXorYt/#review-date","text":"","title":"Review Date"},{"location":"Notes/notes_ryeC7457ortF/","text":"Enablement \u00b6 Label \u00b6 Message \u00b6 Red Hat OpenShift: Solution Design Guidance - Enablement Series (5 sessions) https://ec.yourlearning.ibm.com/w3/playback/10095875","title":"Enablement"},{"location":"Notes/notes_ryeC7457ortF/#enablement","text":"","title":"Enablement"},{"location":"Notes/notes_ryeC7457ortF/#label","text":"","title":"Label"},{"location":"Notes/notes_ryeC7457ortF/#message","text":"Red Hat OpenShift: Solution Design Guidance - Enablement Series (5 sessions) https://ec.yourlearning.ibm.com/w3/playback/10095875","title":"Message"}]}